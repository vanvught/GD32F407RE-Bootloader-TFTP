
lib_linux/libdisplay.a(display_timeout.o):	file format mach-o 64-bit x86-64

Disassembly of section __TEXT,__text:

0000000000000000 <display::timeout::gpio_init()>:
       0: 55                           	pushq	%rbp
       1: 48 89 e5                     	movq	%rsp, %rbp
       4: 5d                           	popq	%rbp
       5: c3                           	retq
       6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

0000000000000010 <display::timeout::gpio_renew()>:
      10: 55                           	pushq	%rbp
      11: 48 89 e5                     	movq	%rsp, %rbp
      14: 31 c0                        	xorl	%eax, %eax
      16: 24 01                        	andb	$1, %al
      18: 0f b6 c0                     	movzbl	%al, %eax
      1b: 5d                           	popq	%rbp
      1c: c3                           	retq

lib_linux/libdisplay.a(display.o):	file format mach-o 64-bit x86-64

Disassembly of section __TEXT,__text:

0000000000000000 <Display::Display()>:
       0: 55                           	pushq	%rbp
       1: 48 89 e5                     	movq	%rsp, %rbp
       4: 48 83 ec 10                  	subq	$16, %rsp
       8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
       c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      10: 48 89 45 f0                  	movq	%rax, -16(%rbp)
      14: c7 00 04 00 00 00            	movl	$4, (%rax)
      1a: e8 00 00 00 00               	callq	0x1f <Display::Display()+0x1f>
      1f: 48 89 c7                     	movq	%rax, %rdi
      22: e8 00 00 00 00               	callq	0x27 <Display::Display()+0x27>
      27: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      2b: 89 47 04                     	movl	%eax, 4(%rdi)
      2e: 48 83 c7 08                  	addq	$8, %rdi
      32: be 21 00 00 00               	movl	$33, %esi
      37: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
      3c: e8 00 00 00 00               	callq	0x41 <Display::Display()+0x41>
      41: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      45: c6 40 10 00                  	movb	$0, 16(%rax)
      49: c6 40 11 00                  	movb	$0, 17(%rax)
      4d: c7 40 14 e0 93 04 00         	movl	$300000, 20(%rax)       ## imm = 0x493E0
      54: 48 c7 40 18 00 00 00 00      	movq	$0, 24(%rax)
      5c: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x63 <Display::Display()+0x63>
      64: 0f 94 c0                     	sete	%al
      67: 34 ff                        	xorb	$-1, %al
      69: a8 01                        	testb	$1, %al
      6b: 0f 85 05 00 00 00            	jne	0x76 <Display::Display()+0x76>
      71: e9 1f 00 00 00               	jmp	0x95 <Display::Display()+0x95>
      76: 48 8d 3d 01 0a 00 00         	leaq	2561(%rip), %rdi        ## 0xa7e <HAL_I2C::Setup()+0x2e>
      7d: 48 8d 35 02 0a 00 00         	leaq	2562(%rip), %rsi        ## 0xa86 <HAL_I2C::Setup()+0x36>
      84: 48 8d 0d 07 0a 00 00         	leaq	2567(%rip), %rcx        ## 0xa92 <HAL_I2C::Setup()+0x42>
      8b: ba 31 00 00 00               	movl	$49, %edx
      90: e8 00 00 00 00               	callq	0x95 <Display::Display()+0x95>
      95: e9 00 00 00 00               	jmp	0x9a <Display::Display()+0x9a>
      9a: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      9e: 48 89 05 00 00 00 00         	movq	%rax, (%rip)            ## 0xa5 <Display::Display()+0xa5>
      a5: 48 83 78 18 00               	cmpq	$0, 24(%rax)
      aa: 0f 85 0e 00 00 00            	jne	0xbe <Display::Display()+0xbe>
      b0: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      b4: be 02 00 00 00               	movl	$2, %esi
      b9: e8 00 00 00 00               	callq	0xbe <Display::Display()+0xbe>
      be: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      c2: e8 00 00 00 00               	callq	0xc7 <Display::Display()+0xc7>
      c7: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      cb: 48 83 78 18 00               	cmpq	$0, 24(%rax)
      d0: 0f 84 05 00 00 00            	je	0xdb <Display::Display()+0xdb>
      d6: e8 00 00 00 00               	callq	0xdb <Display::Display()+0xdb>
      db: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      df: e8 00 00 00 00               	callq	0xe4 <Display::Display()+0xe4>
      e4: 48 83 c4 10                  	addq	$16, %rsp
      e8: 5d                           	popq	%rbp
      e9: c3                           	retq
      ea: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000000f0 <Hardware::Get()>:
      f0: 55                           	pushq	%rbp
      f1: 48 89 e5                     	movq	%rsp, %rbp
      f4: 48 8b 05 00 00 00 00         	movq	(%rip), %rax            ## 0xfb <Hardware::Get()+0xb>
      fb: 48 8b 00                     	movq	(%rax), %rax
      fe: 5d                           	popq	%rbp
      ff: c3                           	retq

0000000000000100 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
     100: 55                           	pushq	%rbp
     101: 48 89 e5                     	movq	%rsp, %rbp
     104: 48 83 ec 10                  	subq	$16, %rsp
     108: 40 88 f0                     	movb	%sil, %al
     10b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     10f: 88 45 f7                     	movb	%al, -9(%rbp)
     112: 89 55 f0                     	movl	%edx, -16(%rbp)
     115: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     119: 8a 45 f7                     	movb	-9(%rbp), %al
     11c: 8b 55 f0                     	movl	-16(%rbp), %edx
     11f: 0f b6 f0                     	movzbl	%al, %esi
     122: e8 00 00 00 00               	callq	0x127 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)+0x27>
     127: 48 83 c4 10                  	addq	$16, %rsp
     12b: 5d                           	popq	%rbp
     12c: c3                           	retq
     12d: 0f 1f 00                     	nopl	(%rax)

0000000000000130 <Display::Detect(display::Type)>:
     130: 55                           	pushq	%rbp
     131: 48 89 e5                     	movq	%rsp, %rbp
     134: 48 83 ec 30                  	subq	$48, %rsp
     138: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     13c: 89 75 f4                     	movl	%esi, -12(%rbp)
     13f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     143: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     147: 8b 45 f4                     	movl	-12(%rbp), %eax
     14a: 89 45 f0                     	movl	%eax, -16(%rbp)
     14d: 83 e8 02                     	subl	$2, %eax
     150: 0f 84 16 00 00 00            	je	0x16c <Display::Detect(display::Type)+0x3c>
     156: e9 00 00 00 00               	jmp	0x15b <Display::Detect(display::Type)+0x2b>
     15b: 8b 45 f0                     	movl	-16(%rbp), %eax
     15e: 83 e8 04                     	subl	$4, %eax
     161: 0f 84 69 00 00 00            	je	0x1d0 <Display::Detect(display::Type)+0xa0>
     167: e9 6e 00 00 00               	jmp	0x1da <Display::Detect(display::Type)+0xaa>
     16c: bf 38 00 00 00               	movl	$56, %edi
     171: e8 00 00 00 00               	callq	0x176 <Display::Detect(display::Type)+0x46>
     176: 48 89 c7                     	movq	%rax, %rdi
     179: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     17d: 31 f6                        	xorl	%esi, %esi
     17f: e8 00 00 00 00               	callq	0x184 <Display::Detect(display::Type)+0x54>
     184: 48 8b 4d e0                  	movq	-32(%rbp), %rcx
     188: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     18c: 48 89 48 18                  	movq	%rcx, 24(%rax)
     190: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     195: 0f 95 c0                     	setne	%al
     198: 34 ff                        	xorb	$-1, %al
     19a: a8 01                        	testb	$1, %al
     19c: 0f 85 05 00 00 00            	jne	0x1a7 <Display::Detect(display::Type)+0x77>
     1a2: e9 1f 00 00 00               	jmp	0x1c6 <Display::Detect(display::Type)+0x96>
     1a7: 48 8d 3d f7 08 00 00         	leaq	2295(%rip), %rdi        ## 0xaa5 <HAL_I2C::Setup()+0x55>
     1ae: 48 8d 35 d1 08 00 00         	leaq	2257(%rip), %rsi        ## 0xa86 <HAL_I2C::Setup()+0x36>
     1b5: 48 8d 0d f0 08 00 00         	leaq	2288(%rip), %rcx        ## 0xaac <HAL_I2C::Setup()+0x5c>
     1bc: ba 77 00 00 00               	movl	$119, %edx
     1c1: e8 00 00 00 00               	callq	0x1c6 <Display::Detect(display::Type)+0x96>
     1c6: e9 00 00 00 00               	jmp	0x1cb <Display::Detect(display::Type)+0x9b>
     1cb: e9 0f 00 00 00               	jmp	0x1df <Display::Detect(display::Type)+0xaf>
     1d0: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     1d4: c7 00 04 00 00 00            	movl	$4, (%rax)
     1da: e9 00 00 00 00               	jmp	0x1df <Display::Detect(display::Type)+0xaf>
     1df: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     1e3: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     1e8: 0f 84 60 00 00 00            	je	0x24e <Display::Detect(display::Type)+0x11e>
     1ee: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     1f2: 48 8b 78 18                  	movq	24(%rax), %rdi
     1f6: 48 8b 07                     	movq	(%rdi), %rax
     1f9: ff 50 10                     	callq	*16(%rax)
     1fc: a8 01                        	testb	$1, %al
     1fe: 0f 85 37 00 00 00            	jne	0x23b <Display::Detect(display::Type)+0x10b>
     204: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     208: 48 8b 40 18                  	movq	24(%rax), %rax
     20c: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     210: 48 83 f8 00                  	cmpq	$0, %rax
     214: 0f 84 0a 00 00 00            	je	0x224 <Display::Detect(display::Type)+0xf4>
     21a: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     21e: 48 8b 07                     	movq	(%rdi), %rax
     221: ff 50 08                     	callq	*8(%rax)
     224: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     228: 48 c7 40 18 00 00 00 00      	movq	$0, 24(%rax)
     230: c7 00 04 00 00 00            	movl	$4, (%rax)
     236: e9 0e 00 00 00               	jmp	0x249 <Display::Detect(display::Type)+0x119>
     23b: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     23f: 48 8b 78 18                  	movq	24(%rax), %rdi
     243: 48 8b 07                     	movq	(%rdi), %rax
     246: ff 50 18                     	callq	*24(%rax)
     249: e9 00 00 00 00               	jmp	0x24e <Display::Detect(display::Type)+0x11e>
     24e: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     252: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     257: 0f 85 0b 00 00 00            	jne	0x268 <Display::Detect(display::Type)+0x138>
     25d: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     261: c7 40 14 00 00 00 00         	movl	$0, 20(%rax)
     268: 48 83 c4 30                  	addq	$48, %rsp
     26c: 5d                           	popq	%rbp
     26d: c3                           	retq
     26e: 66 90                        	nop

0000000000000270 <Display::Detect7Segment()>:
     270: 55                           	pushq	%rbp
     271: 48 89 e5                     	movq	%rsp, %rbp
     274: 48 83 ec 10                  	subq	$16, %rsp
     278: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     27c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     280: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
     284: 48 83 c7 08                  	addq	$8, %rdi
     288: e8 00 00 00 00               	callq	0x28d <Display::Detect7Segment()+0x1d>
     28d: 88 c1                        	movb	%al, %cl
     28f: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     293: 80 e1 01                     	andb	$1, %cl
     296: 88 48 11                     	movb	%cl, 17(%rax)
     299: f6 40 11 01                  	testb	$1, 17(%rax)
     29d: 0f 84 1f 00 00 00            	je	0x2c2 <Display::Detect7Segment()+0x52>
     2a3: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     2a7: 48 83 c7 08                  	addq	$8, %rdi
     2ab: 31 d2                        	xorl	%edx, %edx
     2ad: 89 d6                        	movl	%edx, %esi
     2af: e8 00 00 00 00               	callq	0x2b4 <Display::Detect7Segment()+0x44>
     2b4: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     2b8: be 00 3f 00 00               	movl	$16128, %esi            ## imm = 0x3F00
     2bd: e8 00 00 00 00               	callq	0x2c2 <Display::Detect7Segment()+0x52>
     2c2: 48 83 c4 10                  	addq	$16, %rsp
     2c6: 5d                           	popq	%rbp
     2c7: c3                           	retq
     2c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

00000000000002d0 <Display::PrintInfo()>:
     2d0: 55                           	pushq	%rbp
     2d1: 48 89 e5                     	movq	%rsp, %rbp
     2d4: 48 83 ec 10                  	subq	$16, %rsp
     2d8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     2dc: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     2e0: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     2e4: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     2e9: 0f 85 11 00 00 00            	jne	0x300 <Display::PrintInfo()+0x30>
     2ef: 48 8d 3d d6 07 00 00         	leaq	2006(%rip), %rdi        ## 0xacc <HAL_I2C::Setup()+0x7c>
     2f6: e8 00 00 00 00               	callq	0x2fb <Display::PrintInfo()+0x2b>
     2fb: e9 0e 00 00 00               	jmp	0x30e <Display::PrintInfo()+0x3e>
     300: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     304: 48 8b 78 18                  	movq	24(%rax), %rdi
     308: 48 8b 07                     	movq	(%rdi), %rax
     30b: ff 50 68                     	callq	*104(%rax)
     30e: 48 83 c4 10                  	addq	$16, %rsp
     312: 5d                           	popq	%rbp
     313: c3                           	retq
     314: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     31e: 66 90                        	nop

0000000000000320 <Display::Display()>:
     320: 55                           	pushq	%rbp
     321: 48 89 e5                     	movq	%rsp, %rbp
     324: 48 83 ec 10                  	subq	$16, %rsp
     328: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     32c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     330: e8 00 00 00 00               	callq	0x335 <Display::Display()+0x15>
     335: 48 83 c4 10                  	addq	$16, %rsp
     339: 5d                           	popq	%rbp
     33a: c3                           	retq
     33b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000340 <Display::Display(unsigned int)>:
     340: 55                           	pushq	%rbp
     341: 48 89 e5                     	movq	%rsp, %rbp
     344: 48 83 ec 20                  	subq	$32, %rsp
     348: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     34c: 89 75 f4                     	movl	%esi, -12(%rbp)
     34f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     353: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     357: c7 00 04 00 00 00            	movl	$4, (%rax)
     35d: e8 00 00 00 00               	callq	0x362 <Display::Display(unsigned int)+0x22>
     362: 48 89 c7                     	movq	%rax, %rdi
     365: e8 00 00 00 00               	callq	0x36a <Display::Display(unsigned int)+0x2a>
     36a: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     36e: 89 47 04                     	movl	%eax, 4(%rdi)
     371: 48 83 c7 08                  	addq	$8, %rdi
     375: be 21 00 00 00               	movl	$33, %esi
     37a: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
     37f: e8 00 00 00 00               	callq	0x384 <Display::Display(unsigned int)+0x44>
     384: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     388: c6 40 10 00                  	movb	$0, 16(%rax)
     38c: c6 40 11 00                  	movb	$0, 17(%rax)
     390: c7 40 14 e0 93 04 00         	movl	$300000, 20(%rax)       ## imm = 0x493E0
     397: 48 c7 40 18 00 00 00 00      	movq	$0, 24(%rax)
     39f: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x3a6 <Display::Display(unsigned int)+0x66>
     3a7: 0f 94 c0                     	sete	%al
     3aa: 34 ff                        	xorb	$-1, %al
     3ac: a8 01                        	testb	$1, %al
     3ae: 0f 85 05 00 00 00            	jne	0x3b9 <Display::Display(unsigned int)+0x79>
     3b4: e9 1f 00 00 00               	jmp	0x3d8 <Display::Display(unsigned int)+0x98>
     3b9: 48 8d 3d be 06 00 00         	leaq	1726(%rip), %rdi        ## 0xa7e <HAL_I2C::Setup()+0x2e>
     3c0: 48 8d 35 bf 06 00 00         	leaq	1727(%rip), %rsi        ## 0xa86 <HAL_I2C::Setup()+0x36>
     3c7: 48 8d 0d c4 06 00 00         	leaq	1732(%rip), %rcx        ## 0xa92 <HAL_I2C::Setup()+0x42>
     3ce: ba 46 00 00 00               	movl	$70, %edx
     3d3: e8 00 00 00 00               	callq	0x3d8 <Display::Display(unsigned int)+0x98>
     3d8: e9 00 00 00 00               	jmp	0x3dd <Display::Display(unsigned int)+0x9d>
     3dd: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3e1: 48 89 3d 00 00 00 00         	movq	%rdi, (%rip)            ## 0x3e8 <Display::Display(unsigned int)+0xa8>
     3e8: 8b 75 f4                     	movl	-12(%rbp), %esi
     3eb: e8 00 00 00 00               	callq	0x3f0 <Display::Display(unsigned int)+0xb0>
     3f0: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3f4: e8 00 00 00 00               	callq	0x3f9 <Display::Display(unsigned int)+0xb9>
     3f9: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     3fd: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     402: 0f 84 05 00 00 00            	je	0x40d <Display::Display(unsigned int)+0xcd>
     408: e8 00 00 00 00               	callq	0x40d <Display::Display(unsigned int)+0xcd>
     40d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     411: e8 00 00 00 00               	callq	0x416 <Display::Display(unsigned int)+0xd6>
     416: 48 83 c4 20                  	addq	$32, %rsp
     41a: 5d                           	popq	%rbp
     41b: c3                           	retq
     41c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000420 <Display::Detect(unsigned int)>:
     420: 55                           	pushq	%rbp
     421: 48 89 e5                     	movq	%rsp, %rbp
     424: 48 83 ec 30                  	subq	$48, %rsp
     428: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     42c: 89 75 f4                     	movl	%esi, -12(%rbp)
     42f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     433: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     437: bf 3c 00 00 00               	movl	$60, %edi
     43c: be a0 86 01 00               	movl	$100000, %esi           ## imm = 0x186A0
     441: e8 00 00 00 00               	callq	0x446 <Display::Detect(unsigned int)+0x26>
     446: a8 01                        	testb	$1, %al
     448: 0f 85 05 00 00 00            	jne	0x453 <Display::Detect(unsigned int)+0x33>
     44e: e9 12 01 00 00               	jmp	0x565 <Display::Detect(unsigned int)+0x145>
     453: 83 7d f4 04                  	cmpl	$4, -12(%rbp)
     457: 0f 87 67 00 00 00            	ja	0x4c4 <Display::Detect(unsigned int)+0xa4>
     45d: bf 38 00 00 00               	movl	$56, %edi
     462: e8 00 00 00 00               	callq	0x467 <Display::Detect(unsigned int)+0x47>
     467: 48 89 c7                     	movq	%rax, %rdi
     46a: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     46e: be 01 00 00 00               	movl	$1, %esi
     473: e8 00 00 00 00               	callq	0x478 <Display::Detect(unsigned int)+0x58>
     478: 48 8b 4d e0                  	movq	-32(%rbp), %rcx
     47c: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     480: 48 89 48 18                  	movq	%rcx, 24(%rax)
     484: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     489: 0f 95 c0                     	setne	%al
     48c: 34 ff                        	xorb	$-1, %al
     48e: a8 01                        	testb	$1, %al
     490: 0f 85 05 00 00 00            	jne	0x49b <Display::Detect(unsigned int)+0x7b>
     496: e9 1f 00 00 00               	jmp	0x4ba <Display::Detect(unsigned int)+0x9a>
     49b: 48 8d 3d 03 06 00 00         	leaq	1539(%rip), %rdi        ## 0xaa5 <HAL_I2C::Setup()+0x55>
     4a2: 48 8d 35 dd 05 00 00         	leaq	1501(%rip), %rsi        ## 0xa86 <HAL_I2C::Setup()+0x36>
     4a9: 48 8d 0d fc 05 00 00         	leaq	1532(%rip), %rcx        ## 0xaac <HAL_I2C::Setup()+0x5c>
     4b0: ba 9c 00 00 00               	movl	$156, %edx
     4b5: e8 00 00 00 00               	callq	0x4ba <Display::Detect(unsigned int)+0x9a>
     4ba: e9 00 00 00 00               	jmp	0x4bf <Display::Detect(unsigned int)+0x9f>
     4bf: e9 64 00 00 00               	jmp	0x528 <Display::Detect(unsigned int)+0x108>
     4c4: bf 38 00 00 00               	movl	$56, %edi
     4c9: e8 00 00 00 00               	callq	0x4ce <Display::Detect(unsigned int)+0xae>
     4ce: 48 89 c7                     	movq	%rax, %rdi
     4d1: 48 89 7d d8                  	movq	%rdi, -40(%rbp)
     4d5: 31 f6                        	xorl	%esi, %esi
     4d7: e8 00 00 00 00               	callq	0x4dc <Display::Detect(unsigned int)+0xbc>
     4dc: 48 8b 4d d8                  	movq	-40(%rbp), %rcx
     4e0: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     4e4: 48 89 48 18                  	movq	%rcx, 24(%rax)
     4e8: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     4ed: 0f 95 c0                     	setne	%al
     4f0: 34 ff                        	xorb	$-1, %al
     4f2: a8 01                        	testb	$1, %al
     4f4: 0f 85 05 00 00 00            	jne	0x4ff <Display::Detect(unsigned int)+0xdf>
     4fa: e9 1f 00 00 00               	jmp	0x51e <Display::Detect(unsigned int)+0xfe>
     4ff: 48 8d 3d 9f 05 00 00         	leaq	1439(%rip), %rdi        ## 0xaa5 <HAL_I2C::Setup()+0x55>
     506: 48 8d 35 79 05 00 00         	leaq	1401(%rip), %rsi        ## 0xa86 <HAL_I2C::Setup()+0x36>
     50d: 48 8d 0d 98 05 00 00         	leaq	1432(%rip), %rcx        ## 0xaac <HAL_I2C::Setup()+0x5c>
     514: ba 9f 00 00 00               	movl	$159, %edx
     519: e8 00 00 00 00               	callq	0x51e <Display::Detect(unsigned int)+0xfe>
     51e: e9 00 00 00 00               	jmp	0x523 <Display::Detect(unsigned int)+0x103>
     523: e9 00 00 00 00               	jmp	0x528 <Display::Detect(unsigned int)+0x108>
     528: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     52c: 48 8b 78 18                  	movq	24(%rax), %rdi
     530: 48 8b 07                     	movq	(%rdi), %rax
     533: ff 50 10                     	callq	*16(%rax)
     536: a8 01                        	testb	$1, %al
     538: 0f 85 05 00 00 00            	jne	0x543 <Display::Detect(unsigned int)+0x123>
     53e: e9 1d 00 00 00               	jmp	0x560 <Display::Detect(unsigned int)+0x140>
     543: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     547: c7 07 02 00 00 00            	movl	$2, (%rdi)
     54d: be 01 00 00 00               	movl	$1, %esi
     552: 48 8d 15 6b 05 00 00         	leaq	1387(%rip), %rdx        ## 0xac4 <HAL_I2C::Setup()+0x74>
     559: b0 00                        	movb	$0, %al
     55b: e8 00 00 00 00               	callq	0x560 <Display::Detect(unsigned int)+0x140>
     560: e9 00 00 00 00               	jmp	0x565 <Display::Detect(unsigned int)+0x145>
     565: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     569: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     56e: 0f 85 0b 00 00 00            	jne	0x57f <Display::Detect(unsigned int)+0x15f>
     574: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     578: c7 40 14 00 00 00 00         	movl	$0, 20(%rax)
     57f: 48 83 c4 30                  	addq	$48, %rsp
     583: 5d                           	popq	%rbp
     584: c3                           	retq
     585: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     58f: 90                           	nop

0000000000000590 <Display::Display(unsigned int)>:
     590: 55                           	pushq	%rbp
     591: 48 89 e5                     	movq	%rsp, %rbp
     594: 48 83 ec 10                  	subq	$16, %rsp
     598: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     59c: 89 75 f4                     	movl	%esi, -12(%rbp)
     59f: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     5a3: 8b 75 f4                     	movl	-12(%rbp), %esi
     5a6: e8 00 00 00 00               	callq	0x5ab <Display::Display(unsigned int)+0x1b>
     5ab: 48 83 c4 10                  	addq	$16, %rsp
     5af: 5d                           	popq	%rbp
     5b0: c3                           	retq
     5b1: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     5bb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000005c0 <Display::Display(display::Type)>:
     5c0: 55                           	pushq	%rbp
     5c1: 48 89 e5                     	movq	%rsp, %rbp
     5c4: 48 83 ec 20                  	subq	$32, %rsp
     5c8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     5cc: 89 75 f4                     	movl	%esi, -12(%rbp)
     5cf: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     5d3: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     5d7: 8b 4d f4                     	movl	-12(%rbp), %ecx
     5da: 89 08                        	movl	%ecx, (%rax)
     5dc: e8 00 00 00 00               	callq	0x5e1 <Display::Display(display::Type)+0x21>
     5e1: 48 89 c7                     	movq	%rax, %rdi
     5e4: e8 00 00 00 00               	callq	0x5e9 <Display::Display(display::Type)+0x29>
     5e9: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     5ed: 89 47 04                     	movl	%eax, 4(%rdi)
     5f0: 48 83 c7 08                  	addq	$8, %rdi
     5f4: be 21 00 00 00               	movl	$33, %esi
     5f9: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
     5fe: e8 00 00 00 00               	callq	0x603 <Display::Display(display::Type)+0x43>
     603: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     607: c6 40 10 00                  	movb	$0, 16(%rax)
     60b: c6 40 11 00                  	movb	$0, 17(%rax)
     60f: c7 40 14 e0 93 04 00         	movl	$300000, 20(%rax)       ## imm = 0x493E0
     616: 48 c7 40 18 00 00 00 00      	movq	$0, 24(%rax)
     61e: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x625 <Display::Display(display::Type)+0x65>
     626: 0f 94 c0                     	sete	%al
     629: 34 ff                        	xorb	$-1, %al
     62b: a8 01                        	testb	$1, %al
     62d: 0f 85 05 00 00 00            	jne	0x638 <Display::Display(display::Type)+0x78>
     633: e9 1f 00 00 00               	jmp	0x657 <Display::Display(display::Type)+0x97>
     638: 48 8d 3d 3f 04 00 00         	leaq	1087(%rip), %rdi        ## 0xa7e <HAL_I2C::Setup()+0x2e>
     63f: 48 8d 35 40 04 00 00         	leaq	1088(%rip), %rsi        ## 0xa86 <HAL_I2C::Setup()+0x36>
     646: 48 8d 0d 45 04 00 00         	leaq	1093(%rip), %rcx        ## 0xa92 <HAL_I2C::Setup()+0x42>
     64d: ba 55 00 00 00               	movl	$85, %edx
     652: e8 00 00 00 00               	callq	0x657 <Display::Display(display::Type)+0x97>
     657: e9 00 00 00 00               	jmp	0x65c <Display::Display(display::Type)+0x9c>
     65c: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     660: 48 89 3d 00 00 00 00         	movq	%rdi, (%rip)            ## 0x667 <Display::Display(display::Type)+0xa7>
     667: 8b 75 f4                     	movl	-12(%rbp), %esi
     66a: e8 00 00 00 00               	callq	0x66f <Display::Display(display::Type)+0xaf>
     66f: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     673: e8 00 00 00 00               	callq	0x678 <Display::Display(display::Type)+0xb8>
     678: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     67c: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     681: 0f 84 05 00 00 00            	je	0x68c <Display::Display(display::Type)+0xcc>
     687: e8 00 00 00 00               	callq	0x68c <Display::Display(display::Type)+0xcc>
     68c: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     690: e8 00 00 00 00               	callq	0x695 <Display::Display(display::Type)+0xd5>
     695: 48 83 c4 20                  	addq	$32, %rsp
     699: 5d                           	popq	%rbp
     69a: c3                           	retq
     69b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000006a0 <Display::Display(display::Type)>:
     6a0: 55                           	pushq	%rbp
     6a1: 48 89 e5                     	movq	%rsp, %rbp
     6a4: 48 83 ec 10                  	subq	$16, %rsp
     6a8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     6ac: 89 75 f4                     	movl	%esi, -12(%rbp)
     6af: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     6b3: 8b 75 f4                     	movl	-12(%rbp), %esi
     6b6: e8 00 00 00 00               	callq	0x6bb <Display::Display(display::Type)+0x1b>
     6bb: 48 83 c4 10                  	addq	$16, %rsp
     6bf: 5d                           	popq	%rbp
     6c0: c3                           	retq
     6c1: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     6cb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000006d0 <HAL_I2C::IsConnected(unsigned char, unsigned int)>:
     6d0: 55                           	pushq	%rbp
     6d1: 48 89 e5                     	movq	%rsp, %rbp
     6d4: 48 83 ec 10                  	subq	$16, %rsp
     6d8: 40 88 f8                     	movb	%dil, %al
     6db: 88 45 ff                     	movb	%al, -1(%rbp)
     6de: 89 75 f8                     	movl	%esi, -8(%rbp)
     6e1: 8a 45 ff                     	movb	-1(%rbp), %al
     6e4: 8b 75 f8                     	movl	-8(%rbp), %esi
     6e7: 0f b6 f8                     	movzbl	%al, %edi
     6ea: e8 00 00 00 00               	callq	0x6ef <HAL_I2C::IsConnected(unsigned char, unsigned int)+0x1f>
     6ef: 24 01                        	andb	$1, %al
     6f1: 0f b6 c0                     	movzbl	%al, %eax
     6f4: 48 83 c4 10                  	addq	$16, %rsp
     6f8: 5d                           	popq	%rbp
     6f9: c3                           	retq
     6fa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000700 <Display::Printf(unsigned char, char const*, ...)>:
     700: 55                           	pushq	%rbp
     701: 48 89 e5                     	movq	%rsp, %rbp
     704: 48 81 ec 40 01 00 00         	subq	$320, %rsp              ## imm = 0x140
     70b: 84 c0                        	testb	%al, %al
     70d: 0f 84 38 00 00 00            	je	0x74b <Display::Printf(unsigned char, char const*, ...)+0x4b>
     713: 0f 29 85 00 ff ff ff         	movaps	%xmm0, -256(%rbp)
     71a: 0f 29 8d 10 ff ff ff         	movaps	%xmm1, -240(%rbp)
     721: 0f 29 95 20 ff ff ff         	movaps	%xmm2, -224(%rbp)
     728: 0f 29 9d 30 ff ff ff         	movaps	%xmm3, -208(%rbp)
     72f: 0f 29 a5 40 ff ff ff         	movaps	%xmm4, -192(%rbp)
     736: 0f 29 ad 50 ff ff ff         	movaps	%xmm5, -176(%rbp)
     73d: 0f 29 b5 60 ff ff ff         	movaps	%xmm6, -160(%rbp)
     744: 0f 29 bd 70 ff ff ff         	movaps	%xmm7, -144(%rbp)
     74b: 4c 89 8d f8 fe ff ff         	movq	%r9, -264(%rbp)
     752: 4c 89 85 f0 fe ff ff         	movq	%r8, -272(%rbp)
     759: 48 89 8d e8 fe ff ff         	movq	%rcx, -280(%rbp)
     760: 40 88 f0                     	movb	%sil, %al
     763: 48 8b 0d 00 00 00 00         	movq	(%rip), %rcx            ## 0x76a <Display::Printf(unsigned char, char const*, ...)+0x6a>
     76a: 48 8b 09                     	movq	(%rcx), %rcx
     76d: 48 89 4d f8                  	movq	%rcx, -8(%rbp)
     771: 48 89 7d a0                  	movq	%rdi, -96(%rbp)
     775: 88 45 9f                     	movb	%al, -97(%rbp)
     778: 48 89 55 90                  	movq	%rdx, -112(%rbp)
     77c: 48 8b 45 a0                  	movq	-96(%rbp), %rax
     780: 48 89 85 c8 fe ff ff         	movq	%rax, -312(%rbp)
     787: 48 83 78 18 00               	cmpq	$0, 24(%rax)
     78c: 0f 85 0c 00 00 00            	jne	0x79e <Display::Printf(unsigned char, char const*, ...)+0x9e>
     792: c7 45 ac 00 00 00 00         	movl	$0, -84(%rbp)
     799: e9 6c 00 00 00               	jmp	0x80a <Display::Printf(unsigned char, char const*, ...)+0x10a>
     79e: 48 8d 45 b0                  	leaq	-80(%rbp), %rax
     7a2: 48 8d 8d d0 fe ff ff         	leaq	-304(%rbp), %rcx
     7a9: 48 89 48 10                  	movq	%rcx, 16(%rax)
     7ad: 48 8d 4d 10                  	leaq	16(%rbp), %rcx
     7b1: 48 89 48 08                  	movq	%rcx, 8(%rax)
     7b5: c7 40 04 30 00 00 00         	movl	$48, 4(%rax)
     7bc: c7 00 18 00 00 00            	movl	$24, (%rax)
     7c2: 48 8d 7d d0                  	leaq	-48(%rbp), %rdi
     7c6: 48 8b 55 90                  	movq	-112(%rbp), %rdx
     7ca: 48 8d 4d b0                  	leaq	-80(%rbp), %rcx
     7ce: be 20 00 00 00               	movl	$32, %esi
     7d3: e8 00 00 00 00               	callq	0x7d8 <Display::Printf(unsigned char, char const*, ...)+0xd8>
     7d8: 89 c1                        	movl	%eax, %ecx
     7da: 48 8b 85 c8 fe ff ff         	movq	-312(%rbp), %rax
     7e1: 89 4d 8c                     	movl	%ecx, -116(%rbp)
     7e4: 48 8d 4d b0                  	leaq	-80(%rbp), %rcx
     7e8: 48 8b 78 18                  	movq	24(%rax), %rdi
     7ec: 40 8a 75 9f                  	movb	-97(%rbp), %sil
     7f0: 48 8d 55 d0                  	leaq	-48(%rbp), %rdx
     7f4: 8b 45 8c                     	movl	-116(%rbp), %eax
     7f7: 0f b7 c8                     	movzwl	%ax, %ecx
     7fa: 48 8b 07                     	movq	(%rdi), %rax
     7fd: 40 0f b6 f6                  	movzbl	%sil, %esi
     801: ff 50 38                     	callq	*56(%rax)
     804: 8b 45 8c                     	movl	-116(%rbp), %eax
     807: 89 45 ac                     	movl	%eax, -84(%rbp)
     80a: 8b 45 ac                     	movl	-84(%rbp), %eax
     80d: 89 85 c4 fe ff ff            	movl	%eax, -316(%rbp)
     813: 48 8b 05 00 00 00 00         	movq	(%rip), %rax            ## 0x81a <Display::Printf(unsigned char, char const*, ...)+0x11a>
     81a: 48 8b 00                     	movq	(%rax), %rax
     81d: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     821: 48 39 c8                     	cmpq	%rcx, %rax
     824: 0f 85 0f 00 00 00            	jne	0x839 <Display::Printf(unsigned char, char const*, ...)+0x139>
     82a: 8b 85 c4 fe ff ff            	movl	-316(%rbp), %eax
     830: 48 81 c4 40 01 00 00         	addq	$320, %rsp              ## imm = 0x140
     837: 5d                           	popq	%rbp
     838: c3                           	retq
     839: e8 00 00 00 00               	callq	0x83e <Display::Printf(unsigned char, char const*, ...)+0x13e>
     83e: 0f 0b                        	ud2

0000000000000840 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
     840: 55                           	pushq	%rbp
     841: 48 89 e5                     	movq	%rsp, %rbp
     844: 40 88 f0                     	movb	%sil, %al
     847: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     84b: 88 45 f7                     	movb	%al, -9(%rbp)
     84e: 89 55 f0                     	movl	%edx, -16(%rbp)
     851: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     855: 8a 4d f7                     	movb	-9(%rbp), %cl
     858: 88 08                        	movb	%cl, (%rax)
     85a: 8b 4d f0                     	movl	-16(%rbp), %ecx
     85d: 89 48 04                     	movl	%ecx, 4(%rax)
     860: 5d                           	popq	%rbp
     861: c3                           	retq
     862: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     86c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000870 <HAL_I2C::IsConnected()>:
     870: 55                           	pushq	%rbp
     871: 48 89 e5                     	movq	%rsp, %rbp
     874: 48 83 ec 10                  	subq	$16, %rsp
     878: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     87c: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     880: 8a 01                        	movb	(%rcx), %al
     882: 8b 71 04                     	movl	4(%rcx), %esi
     885: 0f b6 f8                     	movzbl	%al, %edi
     888: e8 00 00 00 00               	callq	0x88d <HAL_I2C::IsConnected()+0x1d>
     88d: 24 01                        	andb	$1, %al
     88f: 0f b6 c0                     	movzbl	%al, %eax
     892: 48 83 c4 10                  	addq	$16, %rsp
     896: 5d                           	popq	%rbp
     897: c3                           	retq
     898: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

00000000000008a0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
     8a0: 55                           	pushq	%rbp
     8a1: 48 89 e5                     	movq	%rsp, %rbp
     8a4: 48 83 ec 10                  	subq	$16, %rsp
     8a8: 66 89 d0                     	movw	%dx, %ax
     8ab: 40 88 f1                     	movb	%sil, %cl
     8ae: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     8b2: 88 4d f7                     	movb	%cl, -9(%rbp)
     8b5: 66 89 45 f4                  	movw	%ax, -12(%rbp)
     8b9: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     8bd: 8a 45 f7                     	movb	-9(%rbp), %al
     8c0: 88 45 f1                     	movb	%al, -15(%rbp)
     8c3: 0f b7 45 f4                  	movzwl	-12(%rbp), %eax
     8c7: c1 f8 08                     	sarl	$8, %eax
     8ca: 88 45 f2                     	movb	%al, -14(%rbp)
     8cd: 0f b7 45 f4                  	movzwl	-12(%rbp), %eax
     8d1: 25 ff 00 00 00               	andl	$255, %eax
     8d6: 88 45 f3                     	movb	%al, -13(%rbp)
     8d9: e8 00 00 00 00               	callq	0x8de <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x3e>
     8de: 48 8d 7d f1                  	leaq	-15(%rbp), %rdi
     8e2: be 03 00 00 00               	movl	$3, %esi
     8e7: e8 00 00 00 00               	callq	0x8ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x4c>
     8ec: 48 83 c4 10                  	addq	$16, %rsp
     8f0: 5d                           	popq	%rbp
     8f1: c3                           	retq
     8f2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     8fc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000900 <Display::Status(Display7SegmentMessage)>:
     900: 55                           	pushq	%rbp
     901: 48 89 e5                     	movq	%rsp, %rbp
     904: 48 83 ec 20                  	subq	$32, %rsp
     908: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     90c: 89 75 f4                     	movl	%esi, -12(%rbp)
     90f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     913: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     917: f6 40 11 01                  	testb	$1, 17(%rax)
     91b: 0f 84 1e 00 00 00            	je	0x93f <Display::Status(Display7SegmentMessage)+0x3f>
     921: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     925: 48 83 c7 08                  	addq	$8, %rdi
     929: 8b 45 f4                     	movl	-12(%rbp), %eax
     92c: 0f b7 c0                     	movzwl	%ax, %eax
     92f: 83 f0 ff                     	xorl	$-1, %eax
     932: be 12 00 00 00               	movl	$18, %esi
     937: 0f b7 d0                     	movzwl	%ax, %edx
     93a: e8 00 00 00 00               	callq	0x93f <Display::Status(Display7SegmentMessage)+0x3f>
     93f: 48 83 c4 20                  	addq	$32, %rsp
     943: 5d                           	popq	%rbp
     944: c3                           	retq
     945: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     94f: 90                           	nop

0000000000000950 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
     950: 55                           	pushq	%rbp
     951: 48 89 e5                     	movq	%rsp, %rbp
     954: 48 83 ec 10                  	subq	$16, %rsp
     958: 40 88 f8                     	movb	%dil, %al
     95b: 88 45 fe                     	movb	%al, -2(%rbp)
     95e: 89 75 f8                     	movl	%esi, -8(%rbp)
     961: 0f b6 7d fe                  	movzbl	-2(%rbp), %edi
     965: e8 00 00 00 00               	callq	0x96a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1a>
     96a: 8b 7d f8                     	movl	-8(%rbp), %edi
     96d: e8 00 00 00 00               	callq	0x972 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x22>
     972: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     976: 83 f8 30                     	cmpl	$48, %eax
     979: 0f 8c 0d 00 00 00            	jl	0x98c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x3c>
     97f: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     983: 83 f8 37                     	cmpl	$55, %eax
     986: 0f 8e 1a 00 00 00            	jle	0x9a6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x56>
     98c: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     990: 83 f8 50                     	cmpl	$80, %eax
     993: 0f 8c 2e 00 00 00            	jl	0x9c7 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
     999: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     99d: 83 f8 5f                     	cmpl	$95, %eax
     9a0: 0f 8f 21 00 00 00            	jg	0x9c7 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
     9a6: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
     9aa: be 01 00 00 00               	movl	$1, %esi
     9af: e8 00 00 00 00               	callq	0x9b4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x64>
     9b4: 0f b6 c0                     	movzbl	%al, %eax
     9b7: 83 f8 00                     	cmpl	$0, %eax
     9ba: 0f 94 c0                     	sete	%al
     9bd: 24 01                        	andb	$1, %al
     9bf: 88 45 ff                     	movb	%al, -1(%rbp)
     9c2: e9 19 00 00 00               	jmp	0x9e0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
     9c7: 31 c0                        	xorl	%eax, %eax
     9c9: 89 c7                        	movl	%eax, %edi
     9cb: 31 f6                        	xorl	%esi, %esi
     9cd: e8 00 00 00 00               	callq	0x9d2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x82>
     9d2: 0f b6 c0                     	movzbl	%al, %eax
     9d5: 83 f8 00                     	cmpl	$0, %eax
     9d8: 0f 94 c0                     	sete	%al
     9db: 24 01                        	andb	$1, %al
     9dd: 88 45 ff                     	movb	%al, -1(%rbp)
     9e0: 8a 45 ff                     	movb	-1(%rbp), %al
     9e3: 24 01                        	andb	$1, %al
     9e5: 0f b6 c0                     	movzbl	%al, %eax
     9e8: 48 83 c4 10                  	addq	$16, %rsp
     9ec: 5d                           	popq	%rbp
     9ed: c3                           	retq
     9ee: 66 90                        	nop

00000000000009f0 <i2c_set_address(unsigned char)>:
     9f0: 55                           	pushq	%rbp
     9f1: 48 89 e5                     	movq	%rsp, %rbp
     9f4: 40 88 f8                     	movb	%dil, %al
     9f7: 88 45 ff                     	movb	%al, -1(%rbp)
     9fa: 5d                           	popq	%rbp
     9fb: c3                           	retq
     9fc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000a00 <i2c_set_baudrate(unsigned int)>:
     a00: 55                           	pushq	%rbp
     a01: 48 89 e5                     	movq	%rsp, %rbp
     a04: 89 7d fc                     	movl	%edi, -4(%rbp)
     a07: 5d                           	popq	%rbp
     a08: c3                           	retq
     a09: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000000a10 <i2c_read(char const*, unsigned int)>:
     a10: 55                           	pushq	%rbp
     a11: 48 89 e5                     	movq	%rsp, %rbp
     a14: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a18: 89 75 f4                     	movl	%esi, -12(%rbp)
     a1b: b0 01                        	movb	$1, %al
     a1d: 0f b6 c0                     	movzbl	%al, %eax
     a20: 5d                           	popq	%rbp
     a21: c3                           	retq
     a22: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     a2c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000a30 <i2c_write(char const*, unsigned int)>:
     a30: 55                           	pushq	%rbp
     a31: 48 89 e5                     	movq	%rsp, %rbp
     a34: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a38: 89 75 f4                     	movl	%esi, -12(%rbp)
     a3b: b0 01                        	movb	$1, %al
     a3d: 0f b6 c0                     	movzbl	%al, %eax
     a40: 5d                           	popq	%rbp
     a41: c3                           	retq
     a42: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     a4c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000a50 <HAL_I2C::Setup()>:
     a50: 55                           	pushq	%rbp
     a51: 48 89 e5                     	movq	%rsp, %rbp
     a54: 48 83 ec 10                  	subq	$16, %rsp
     a58: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a5c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     a60: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     a64: 0f b6 38                     	movzbl	(%rax), %edi
     a67: e8 00 00 00 00               	callq	0xa6c <HAL_I2C::Setup()+0x1c>
     a6c: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     a70: 8b 78 04                     	movl	4(%rax), %edi
     a73: e8 00 00 00 00               	callq	0xa78 <HAL_I2C::Setup()+0x28>
     a78: 48 83 c4 10                  	addq	$16, %rsp
     a7c: 5d                           	popq	%rbp
     a7d: c3                           	retq

lib_linux/libdisplay.a(hd44780.o):	file format mach-o 64-bit x86-64

Disassembly of section __TEXT,__text:

0000000000000000 <Hd44780::Hd44780()>:
       0: 55                           	pushq	%rbp
       1: 48 89 e5                     	movq	%rsp, %rbp
       4: 48 83 ec 10                  	subq	$16, %rsp
       8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
       c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      10: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
      14: e8 00 00 00 00               	callq	0x19 <Hd44780::Hd44780()+0x19>
      19: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      1d: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x24 <Hd44780::Hd44780()+0x24>
      24: 48 83 c0 10                  	addq	$16, %rax
      28: 48 89 07                     	movq	%rax, (%rdi)
      2b: 48 83 c7 0c                  	addq	$12, %rdi
      2f: be 27 00 00 00               	movl	$39, %esi
      34: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
      39: e8 00 00 00 00               	callq	0x3e <Hd44780::Hd44780()+0x3e>
      3e: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      42: c6 40 08 10                  	movb	$16, 8(%rax)
      46: c6 40 09 02                  	movb	$2, 9(%rax)
      4a: 48 83 c4 10                  	addq	$16, %rsp
      4e: 5d                           	popq	%rbp
      4f: c3                           	retq

0000000000000050 <DisplaySet::DisplaySet()>:
      50: 55                           	pushq	%rbp
      51: 48 89 e5                     	movq	%rsp, %rbp
      54: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      58: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      5c: 48 8b 0d 00 00 00 00         	movq	(%rip), %rcx            ## 0x63 <DisplaySet::DisplaySet()+0x13>
      63: 48 83 c1 10                  	addq	$16, %rcx
      67: 48 89 08                     	movq	%rcx, (%rax)
      6a: c6 40 0a 7f                  	movb	$127, 10(%rax)
      6e: c6 40 0b 00                  	movb	$0, 11(%rax)
      72: 5d                           	popq	%rbp
      73: c3                           	retq
      74: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
      7e: 66 90                        	nop

0000000000000080 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
      80: 55                           	pushq	%rbp
      81: 48 89 e5                     	movq	%rsp, %rbp
      84: 48 83 ec 10                  	subq	$16, %rsp
      88: 40 88 f0                     	movb	%sil, %al
      8b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      8f: 88 45 f7                     	movb	%al, -9(%rbp)
      92: 89 55 f0                     	movl	%edx, -16(%rbp)
      95: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      99: 8a 45 f7                     	movb	-9(%rbp), %al
      9c: 8b 55 f0                     	movl	-16(%rbp), %edx
      9f: 0f b6 f0                     	movzbl	%al, %esi
      a2: e8 00 00 00 00               	callq	0xa7 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)+0x27>
      a7: 48 83 c4 10                  	addq	$16, %rsp
      ab: 5d                           	popq	%rbp
      ac: c3                           	retq
      ad: 0f 1f 00                     	nopl	(%rax)

00000000000000b0 <Hd44780::Hd44780()>:
      b0: 55                           	pushq	%rbp
      b1: 48 89 e5                     	movq	%rsp, %rbp
      b4: 48 83 ec 10                  	subq	$16, %rsp
      b8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      bc: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      c0: e8 00 00 00 00               	callq	0xc5 <Hd44780::Hd44780()+0x15>
      c5: 48 83 c4 10                  	addq	$16, %rsp
      c9: 5d                           	popq	%rbp
      ca: c3                           	retq
      cb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000000d0 <Hd44780::Hd44780(unsigned char, unsigned char)>:
      d0: 55                           	pushq	%rbp
      d1: 48 89 e5                     	movq	%rsp, %rbp
      d4: 48 83 ec 30                  	subq	$48, %rsp
      d8: 88 d0                        	movb	%dl, %al
      da: 40 88 f1                     	movb	%sil, %cl
      dd: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      e1: 88 4d f7                     	movb	%cl, -9(%rbp)
      e4: 88 45 f6                     	movb	%al, -10(%rbp)
      e7: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      eb: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
      ef: e8 00 00 00 00               	callq	0xf4 <Hd44780::Hd44780(unsigned char, unsigned char)+0x24>
      f4: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
      f8: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0xff <Hd44780::Hd44780(unsigned char, unsigned char)+0x2f>
      ff: 48 83 c0 10                  	addq	$16, %rax
     103: 48 89 07                     	movq	%rax, (%rdi)
     106: 48 83 c7 0c                  	addq	$12, %rdi
     10a: be 27 00 00 00               	movl	$39, %esi
     10f: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
     114: e8 00 00 00 00               	callq	0x119 <Hd44780::Hd44780(unsigned char, unsigned char)+0x49>
     119: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     11d: 83 f8 14                     	cmpl	$20, %eax
     120: 0f 8d 2c 00 00 00            	jge	0x152 <Hd44780::Hd44780(unsigned char, unsigned char)+0x82>
     126: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     12a: 83 f8 10                     	cmpl	$16, %eax
     12d: 0f 8d 0d 00 00 00            	jge	0x140 <Hd44780::Hd44780(unsigned char, unsigned char)+0x70>
     133: b8 10 00 00 00               	movl	$16, %eax
     138: 89 45 e4                     	movl	%eax, -28(%rbp)
     13b: e9 07 00 00 00               	jmp	0x147 <Hd44780::Hd44780(unsigned char, unsigned char)+0x77>
     140: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     144: 89 45 e4                     	movl	%eax, -28(%rbp)
     147: 8b 45 e4                     	movl	-28(%rbp), %eax
     14a: 89 45 e0                     	movl	%eax, -32(%rbp)
     14d: e9 0d 00 00 00               	jmp	0x15f <Hd44780::Hd44780(unsigned char, unsigned char)+0x8f>
     152: b8 14 00 00 00               	movl	$20, %eax
     157: 89 45 e0                     	movl	%eax, -32(%rbp)
     15a: e9 00 00 00 00               	jmp	0x15f <Hd44780::Hd44780(unsigned char, unsigned char)+0x8f>
     15f: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     163: 8b 4d e0                     	movl	-32(%rbp), %ecx
     166: 88 48 08                     	movb	%cl, 8(%rax)
     169: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     16d: 83 f8 04                     	cmpl	$4, %eax
     170: 0f 8d 2c 00 00 00            	jge	0x1a2 <Hd44780::Hd44780(unsigned char, unsigned char)+0xd2>
     176: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     17a: 83 f8 02                     	cmpl	$2, %eax
     17d: 0f 8d 0d 00 00 00            	jge	0x190 <Hd44780::Hd44780(unsigned char, unsigned char)+0xc0>
     183: b8 02 00 00 00               	movl	$2, %eax
     188: 89 45 dc                     	movl	%eax, -36(%rbp)
     18b: e9 07 00 00 00               	jmp	0x197 <Hd44780::Hd44780(unsigned char, unsigned char)+0xc7>
     190: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     194: 89 45 dc                     	movl	%eax, -36(%rbp)
     197: 8b 45 dc                     	movl	-36(%rbp), %eax
     19a: 89 45 d8                     	movl	%eax, -40(%rbp)
     19d: e9 0d 00 00 00               	jmp	0x1af <Hd44780::Hd44780(unsigned char, unsigned char)+0xdf>
     1a2: b8 04 00 00 00               	movl	$4, %eax
     1a7: 89 45 d8                     	movl	%eax, -40(%rbp)
     1aa: e9 00 00 00 00               	jmp	0x1af <Hd44780::Hd44780(unsigned char, unsigned char)+0xdf>
     1af: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     1b3: 8b 4d d8                     	movl	-40(%rbp), %ecx
     1b6: 88 48 09                     	movb	%cl, 9(%rax)
     1b9: 48 83 c4 30                  	addq	$48, %rsp
     1bd: 5d                           	popq	%rbp
     1be: c3                           	retq
     1bf: 90                           	nop

00000000000001c0 <Hd44780::Hd44780(unsigned char, unsigned char)>:
     1c0: 55                           	pushq	%rbp
     1c1: 48 89 e5                     	movq	%rsp, %rbp
     1c4: 48 83 ec 10                  	subq	$16, %rsp
     1c8: 88 d0                        	movb	%dl, %al
     1ca: 40 88 f1                     	movb	%sil, %cl
     1cd: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     1d1: 88 4d f7                     	movb	%cl, -9(%rbp)
     1d4: 88 45 f6                     	movb	%al, -10(%rbp)
     1d7: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     1db: 8a 45 f7                     	movb	-9(%rbp), %al
     1de: 0f b6 f0                     	movzbl	%al, %esi
     1e1: 0f b6 55 f6                  	movzbl	-10(%rbp), %edx
     1e5: e8 00 00 00 00               	callq	0x1ea <Hd44780::Hd44780(unsigned char, unsigned char)+0x2a>
     1ea: 48 83 c4 10                  	addq	$16, %rsp
     1ee: 5d                           	popq	%rbp
     1ef: c3                           	retq

00000000000001f0 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>:
     1f0: 55                           	pushq	%rbp
     1f1: 48 89 e5                     	movq	%rsp, %rbp
     1f4: 48 83 ec 40                  	subq	$64, %rsp
     1f8: 88 c8                        	movb	%cl, %al
     1fa: 88 d1                        	movb	%dl, %cl
     1fc: 40 88 f2                     	movb	%sil, %dl
     1ff: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     203: 88 55 f7                     	movb	%dl, -9(%rbp)
     206: 88 4d f6                     	movb	%cl, -10(%rbp)
     209: 88 45 f5                     	movb	%al, -11(%rbp)
     20c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     210: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     214: e8 00 00 00 00               	callq	0x219 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x29>
     219: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     21d: 48 8d 0d 00 00 00 00         	leaq	(%rip), %rcx            ## 0x224 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x34>
     224: 48 83 c1 10                  	addq	$16, %rcx
     228: 48 89 08                     	movq	%rcx, (%rax)
     22b: 48 83 c0 0c                  	addq	$12, %rax
     22f: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     233: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     237: 83 f8 00                     	cmpl	$0, %eax
     23a: 0f 85 0a 00 00 00            	jne	0x24a <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x5a>
     240: b0 27                        	movb	$39, %al
     242: 88 45 df                     	movb	%al, -33(%rbp)
     245: e9 06 00 00 00               	jmp	0x250 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x60>
     24a: 8a 45 f7                     	movb	-9(%rbp), %al
     24d: 88 45 df                     	movb	%al, -33(%rbp)
     250: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     254: 8a 45 df                     	movb	-33(%rbp), %al
     257: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
     25c: 0f b6 f0                     	movzbl	%al, %esi
     25f: e8 00 00 00 00               	callq	0x264 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x74>
     264: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     268: 83 f8 14                     	cmpl	$20, %eax
     26b: 0f 8d 2c 00 00 00            	jge	0x29d <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xad>
     271: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     275: 83 f8 10                     	cmpl	$16, %eax
     278: 0f 8d 0d 00 00 00            	jge	0x28b <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x9b>
     27e: b8 10 00 00 00               	movl	$16, %eax
     283: 89 45 d8                     	movl	%eax, -40(%rbp)
     286: e9 07 00 00 00               	jmp	0x292 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xa2>
     28b: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     28f: 89 45 d8                     	movl	%eax, -40(%rbp)
     292: 8b 45 d8                     	movl	-40(%rbp), %eax
     295: 89 45 d4                     	movl	%eax, -44(%rbp)
     298: e9 0d 00 00 00               	jmp	0x2aa <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xba>
     29d: b8 14 00 00 00               	movl	$20, %eax
     2a2: 89 45 d4                     	movl	%eax, -44(%rbp)
     2a5: e9 00 00 00 00               	jmp	0x2aa <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xba>
     2aa: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     2ae: 8b 4d d4                     	movl	-44(%rbp), %ecx
     2b1: 88 48 08                     	movb	%cl, 8(%rax)
     2b4: 0f b6 45 f5                  	movzbl	-11(%rbp), %eax
     2b8: 83 f8 04                     	cmpl	$4, %eax
     2bb: 0f 8d 2c 00 00 00            	jge	0x2ed <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xfd>
     2c1: 0f b6 45 f5                  	movzbl	-11(%rbp), %eax
     2c5: 83 f8 02                     	cmpl	$2, %eax
     2c8: 0f 8d 0d 00 00 00            	jge	0x2db <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xeb>
     2ce: b8 02 00 00 00               	movl	$2, %eax
     2d3: 89 45 d0                     	movl	%eax, -48(%rbp)
     2d6: e9 07 00 00 00               	jmp	0x2e2 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xf2>
     2db: 0f b6 45 f5                  	movzbl	-11(%rbp), %eax
     2df: 89 45 d0                     	movl	%eax, -48(%rbp)
     2e2: 8b 45 d0                     	movl	-48(%rbp), %eax
     2e5: 89 45 cc                     	movl	%eax, -52(%rbp)
     2e8: e9 0d 00 00 00               	jmp	0x2fa <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x10a>
     2ed: b8 04 00 00 00               	movl	$4, %eax
     2f2: 89 45 cc                     	movl	%eax, -52(%rbp)
     2f5: e9 00 00 00 00               	jmp	0x2fa <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x10a>
     2fa: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     2fe: 8b 4d cc                     	movl	-52(%rbp), %ecx
     301: 88 48 09                     	movb	%cl, 9(%rax)
     304: 48 83 c4 40                  	addq	$64, %rsp
     308: 5d                           	popq	%rbp
     309: c3                           	retq
     30a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000310 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>:
     310: 55                           	pushq	%rbp
     311: 48 89 e5                     	movq	%rsp, %rbp
     314: 48 83 ec 10                  	subq	$16, %rsp
     318: 88 c8                        	movb	%cl, %al
     31a: 88 d1                        	movb	%dl, %cl
     31c: 40 88 f2                     	movb	%sil, %dl
     31f: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     323: 88 55 f7                     	movb	%dl, -9(%rbp)
     326: 88 4d f6                     	movb	%cl, -10(%rbp)
     329: 88 45 f5                     	movb	%al, -11(%rbp)
     32c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     330: 8a 4d f7                     	movb	-9(%rbp), %cl
     333: 8a 45 f6                     	movb	-10(%rbp), %al
     336: 0f b6 f1                     	movzbl	%cl, %esi
     339: 0f b6 d0                     	movzbl	%al, %edx
     33c: 0f b6 4d f5                  	movzbl	-11(%rbp), %ecx
     340: e8 00 00 00 00               	callq	0x345 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x35>
     345: 48 83 c4 10                  	addq	$16, %rsp
     349: 5d                           	popq	%rbp
     34a: c3                           	retq
     34b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000350 <Hd44780::Start()>:
     350: 55                           	pushq	%rbp
     351: 48 89 e5                     	movq	%rsp, %rbp
     354: 48 83 ec 20                  	subq	$32, %rsp
     358: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
     35c: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     360: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     364: 48 83 c7 0c                  	addq	$12, %rdi
     368: e8 00 00 00 00               	callq	0x36d <Hd44780::Start()+0x1d>
     36d: a8 01                        	testb	$1, %al
     36f: 0f 85 09 00 00 00            	jne	0x37e <Hd44780::Start()+0x2e>
     375: c6 45 ff 00                  	movb	$0, -1(%rbp)
     379: e9 62 00 00 00               	jmp	0x3e0 <Hd44780::Start()+0x90>
     37e: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     382: be 33 00 00 00               	movl	$51, %esi
     387: e8 00 00 00 00               	callq	0x38c <Hd44780::Start()+0x3c>
     38c: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     390: be 32 00 00 00               	movl	$50, %esi
     395: e8 00 00 00 00               	callq	0x39a <Hd44780::Start()+0x4a>
     39a: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     39e: be 28 00 00 00               	movl	$40, %esi
     3a3: e8 00 00 00 00               	callq	0x3a8 <Hd44780::Start()+0x58>
     3a8: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3ac: be 0c 00 00 00               	movl	$12, %esi
     3b1: e8 00 00 00 00               	callq	0x3b6 <Hd44780::Start()+0x66>
     3b6: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3ba: be 01 00 00 00               	movl	$1, %esi
     3bf: e8 00 00 00 00               	callq	0x3c4 <Hd44780::Start()+0x74>
     3c4: bf cb 05 00 00               	movl	$1483, %edi             ## imm = 0x5CB
     3c9: e8 00 00 00 00               	callq	0x3ce <Hd44780::Start()+0x7e>
     3ce: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3d2: be 06 00 00 00               	movl	$6, %esi
     3d7: e8 00 00 00 00               	callq	0x3dc <Hd44780::Start()+0x8c>
     3dc: c6 45 ff 01                  	movb	$1, -1(%rbp)
     3e0: 8a 45 ff                     	movb	-1(%rbp), %al
     3e3: 24 01                        	andb	$1, %al
     3e5: 0f b6 c0                     	movzbl	%al, %eax
     3e8: 48 83 c4 20                  	addq	$32, %rsp
     3ec: 5d                           	popq	%rbp
     3ed: c3                           	retq
     3ee: 66 90                        	nop

00000000000003f0 <HAL_I2C::IsConnected()>:
     3f0: 55                           	pushq	%rbp
     3f1: 48 89 e5                     	movq	%rsp, %rbp
     3f4: 48 83 ec 10                  	subq	$16, %rsp
     3f8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     3fc: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     400: 8a 01                        	movb	(%rcx), %al
     402: 8b 71 04                     	movl	4(%rcx), %esi
     405: 0f b6 f8                     	movzbl	%al, %edi
     408: e8 00 00 00 00               	callq	0x40d <HAL_I2C::IsConnected()+0x1d>
     40d: 24 01                        	andb	$1, %al
     40f: 0f b6 c0                     	movzbl	%al, %eax
     412: 48 83 c4 10                  	addq	$16, %rsp
     416: 5d                           	popq	%rbp
     417: c3                           	retq
     418: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000000420 <Hd44780::WriteCmd(unsigned char)>:
     420: 55                           	pushq	%rbp
     421: 48 89 e5                     	movq	%rsp, %rbp
     424: 48 83 ec 20                  	subq	$32, %rsp
     428: 40 88 f0                     	movb	%sil, %al
     42b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     42f: 88 45 f7                     	movb	%al, -9(%rbp)
     432: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     436: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     43a: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     43e: 25 f0 00 00 00               	andl	$240, %eax
     443: 0f b6 f0                     	movzbl	%al, %esi
     446: e8 00 00 00 00               	callq	0x44b <Hd44780::WriteCmd(unsigned char)+0x2b>
     44b: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     44f: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     453: c1 e0 04                     	shll	$4, %eax
     456: 25 f0 00 00 00               	andl	$240, %eax
     45b: 0f b6 f0                     	movzbl	%al, %esi
     45e: e8 00 00 00 00               	callq	0x463 <Hd44780::WriteCmd(unsigned char)+0x43>
     463: bf 25 00 00 00               	movl	$37, %edi
     468: e8 00 00 00 00               	callq	0x46d <Hd44780::WriteCmd(unsigned char)+0x4d>
     46d: 48 83 c4 20                  	addq	$32, %rsp
     471: 5d                           	popq	%rbp
     472: c3                           	retq
     473: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     47d: 0f 1f 00                     	nopl	(%rax)

0000000000000480 <_udelay>:
     480: 55                           	pushq	%rbp
     481: 48 89 e5                     	movq	%rsp, %rbp
     484: 89 7d fc                     	movl	%edi, -4(%rbp)
     487: 5d                           	popq	%rbp
     488: c3                           	retq
     489: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000000490 <Hd44780::Cls()>:
     490: 55                           	pushq	%rbp
     491: 48 89 e5                     	movq	%rsp, %rbp
     494: 48 83 ec 10                  	subq	$16, %rsp
     498: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     49c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     4a0: be 01 00 00 00               	movl	$1, %esi
     4a5: e8 00 00 00 00               	callq	0x4aa <Hd44780::Cls()+0x1a>
     4aa: bf cb 05 00 00               	movl	$1483, %edi             ## imm = 0x5CB
     4af: e8 00 00 00 00               	callq	0x4b4 <Hd44780::Cls()+0x24>
     4b4: 48 83 c4 10                  	addq	$16, %rsp
     4b8: 5d                           	popq	%rbp
     4b9: c3                           	retq
     4ba: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000004c0 <Hd44780::PutChar(int)>:
     4c0: 55                           	pushq	%rbp
     4c1: 48 89 e5                     	movq	%rsp, %rbp
     4c4: 48 83 ec 10                  	subq	$16, %rsp
     4c8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     4cc: 89 75 f4                     	movl	%esi, -12(%rbp)
     4cf: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     4d3: 8b 45 f4                     	movl	-12(%rbp), %eax
     4d6: 0f b6 f0                     	movzbl	%al, %esi
     4d9: e8 00 00 00 00               	callq	0x4de <Hd44780::PutChar(int)+0x1e>
     4de: 48 83 c4 10                  	addq	$16, %rsp
     4e2: 5d                           	popq	%rbp
     4e3: c3                           	retq
     4e4: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     4ee: 66 90                        	nop

00000000000004f0 <Hd44780::WriteReg(unsigned char)>:
     4f0: 55                           	pushq	%rbp
     4f1: 48 89 e5                     	movq	%rsp, %rbp
     4f4: 48 83 ec 20                  	subq	$32, %rsp
     4f8: 40 88 f0                     	movb	%sil, %al
     4fb: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     4ff: 88 45 f7                     	movb	%al, -9(%rbp)
     502: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     506: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     50a: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     50e: 25 f0 00 00 00               	andl	$240, %eax
     513: 83 c8 01                     	orl	$1, %eax
     516: 0f b6 f0                     	movzbl	%al, %esi
     519: e8 00 00 00 00               	callq	0x51e <Hd44780::WriteReg(unsigned char)+0x2e>
     51e: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     522: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     526: c1 e0 04                     	shll	$4, %eax
     529: 25 f0 00 00 00               	andl	$240, %eax
     52e: 83 c8 01                     	orl	$1, %eax
     531: 0f b6 f0                     	movzbl	%al, %esi
     534: e8 00 00 00 00               	callq	0x539 <Hd44780::WriteReg(unsigned char)+0x49>
     539: bf 2b 00 00 00               	movl	$43, %edi
     53e: e8 00 00 00 00               	callq	0x543 <Hd44780::WriteReg(unsigned char)+0x53>
     543: 48 83 c4 20                  	addq	$32, %rsp
     547: 5d                           	popq	%rbp
     548: c3                           	retq
     549: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000000550 <Hd44780::PutString(char const*)>:
     550: 55                           	pushq	%rbp
     551: 48 89 e5                     	movq	%rsp, %rbp
     554: 48 83 ec 30                  	subq	$48, %rsp
     558: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     55c: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     560: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     564: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     568: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     56c: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     570: c7 45 e4 00 00 00 00         	movl	$0, -28(%rbp)
     577: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     57b: 0f be 00                     	movsbl	(%rax), %eax
     57e: 83 f8 00                     	cmpl	$0, %eax
     581: 0f 84 2a 00 00 00            	je	0x5b1 <Hd44780::PutString(char const*)+0x61>
     587: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     58b: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     58f: 0f be 30                     	movsbl	(%rax), %esi
     592: e8 00 00 00 00               	callq	0x597 <Hd44780::PutString(char const*)+0x47>
     597: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     59b: 48 83 c0 01                  	addq	$1, %rax
     59f: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     5a3: 8b 45 e4                     	movl	-28(%rbp), %eax
     5a6: 83 c0 01                     	addl	$1, %eax
     5a9: 89 45 e4                     	movl	%eax, -28(%rbp)
     5ac: e9 c6 ff ff ff               	jmp	0x577 <Hd44780::PutString(char const*)+0x27>
     5b1: 48 83 c4 30                  	addq	$48, %rsp
     5b5: 5d                           	popq	%rbp
     5b6: c3                           	retq
     5b7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

00000000000005c0 <Hd44780::Text(char const*, unsigned int)>:
     5c0: 55                           	pushq	%rbp
     5c1: 48 89 e5                     	movq	%rsp, %rbp
     5c4: 48 83 ec 20                  	subq	$32, %rsp
     5c8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     5cc: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     5d0: 89 55 ec                     	movl	%edx, -20(%rbp)
     5d3: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     5d7: 48 89 4d e0                  	movq	%rcx, -32(%rbp)
     5db: 8b 45 ec                     	movl	-20(%rbp), %eax
     5de: 0f b6 49 08                  	movzbl	8(%rcx), %ecx
     5e2: 39 c8                        	cmpl	%ecx, %eax
     5e4: 0f 86 0b 00 00 00            	jbe	0x5f5 <Hd44780::Text(char const*, unsigned int)+0x35>
     5ea: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     5ee: 0f b6 40 08                  	movzbl	8(%rax), %eax
     5f2: 89 45 ec                     	movl	%eax, -20(%rbp)
     5f5: c7 45 e8 00 00 00 00         	movl	$0, -24(%rbp)
     5fc: 8b 45 e8                     	movl	-24(%rbp), %eax
     5ff: 3b 45 ec                     	cmpl	-20(%rbp), %eax
     602: 0f 83 22 00 00 00            	jae	0x62a <Hd44780::Text(char const*, unsigned int)+0x6a>
     608: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     60c: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     610: 8b 4d e8                     	movl	-24(%rbp), %ecx
     613: 0f b6 34 08                  	movzbl	(%rax,%rcx), %esi
     617: e8 00 00 00 00               	callq	0x61c <Hd44780::Text(char const*, unsigned int)+0x5c>
     61c: 8b 45 e8                     	movl	-24(%rbp), %eax
     61f: 83 c0 01                     	addl	$1, %eax
     622: 89 45 e8                     	movl	%eax, -24(%rbp)
     625: e9 d2 ff ff ff               	jmp	0x5fc <Hd44780::Text(char const*, unsigned int)+0x3c>
     62a: 48 83 c4 20                  	addq	$32, %rsp
     62e: 5d                           	popq	%rbp
     62f: c3                           	retq

0000000000000630 <Hd44780::TextLine(unsigned char, char const*, unsigned int)>:
     630: 55                           	pushq	%rbp
     631: 48 89 e5                     	movq	%rsp, %rbp
     634: 48 83 ec 30                  	subq	$48, %rsp
     638: 40 88 f0                     	movb	%sil, %al
     63b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     63f: 88 45 f7                     	movb	%al, -9(%rbp)
     642: 48 89 55 e8                  	movq	%rdx, -24(%rbp)
     646: 89 4d e4                     	movl	%ecx, -28(%rbp)
     649: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     64d: 48 89 4d d8                  	movq	%rcx, -40(%rbp)
     651: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     655: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
     659: 39 c8                        	cmpl	%ecx, %eax
     65b: 0f 8e 05 00 00 00            	jle	0x666 <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x36>
     661: e9 25 00 00 00               	jmp	0x68b <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x5b>
     666: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     66a: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     66e: 83 e8 01                     	subl	$1, %eax
     671: 31 f6                        	xorl	%esi, %esi
     673: 0f b6 d0                     	movzbl	%al, %edx
     676: e8 00 00 00 00               	callq	0x67b <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x4b>
     67b: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     67f: 48 8b 75 e8                  	movq	-24(%rbp), %rsi
     683: 8b 55 e4                     	movl	-28(%rbp), %edx
     686: e8 00 00 00 00               	callq	0x68b <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x5b>
     68b: 48 83 c4 30                  	addq	$48, %rsp
     68f: 5d                           	popq	%rbp
     690: c3                           	retq
     691: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     69b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000006a0 <Hd44780::SetCursorPos(unsigned char, unsigned char)>:
     6a0: 55                           	pushq	%rbp
     6a1: 48 89 e5                     	movq	%rsp, %rbp
     6a4: 48 83 ec 20                  	subq	$32, %rsp
     6a8: 88 d0                        	movb	%dl, %al
     6aa: 40 88 f1                     	movb	%sil, %cl
     6ad: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     6b1: 88 4d f7                     	movb	%cl, -9(%rbp)
     6b4: 88 45 f6                     	movb	%al, -10(%rbp)
     6b7: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     6bb: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     6bf: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     6c3: 83 f8 03                     	cmpl	$3, %eax
     6c6: 0f 9e c0                     	setle	%al
     6c9: 34 ff                        	xorb	$-1, %al
     6cb: a8 01                        	testb	$1, %al
     6cd: 0f 85 05 00 00 00            	jne	0x6d8 <Hd44780::SetCursorPos(unsigned char, unsigned char)+0x38>
     6d3: e9 1f 00 00 00               	jmp	0x6f7 <Hd44780::SetCursorPos(unsigned char, unsigned char)+0x57>
     6d8: 48 8d 3d ad 05 00 00         	leaq	1453(%rip), %rdi        ## 0xc8c <DisplaySet::~DisplaySet()+0x12c>
     6df: 48 8d 35 b3 05 00 00         	leaq	1459(%rip), %rsi        ## 0xc99 <DisplaySet::~DisplaySet()+0x139>
     6e6: 48 8d 0d b8 05 00 00         	leaq	1464(%rip), %rcx        ## 0xca5 <DisplaySet::~DisplaySet()+0x145>
     6ed: ba af 00 00 00               	movl	$175, %edx
     6f2: e8 00 00 00 00               	callq	0x6f7 <Hd44780::SetCursorPos(unsigned char, unsigned char)+0x57>
     6f7: e9 00 00 00 00               	jmp	0x6fc <Hd44780::SetCursorPos(unsigned char, unsigned char)+0x5c>
     6fc: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     700: 8b 05 a9 05 00 00            	movl	1449(%rip), %eax        ## 0xcaf <DisplaySet::~DisplaySet()+0x14f>
     706: 89 45 f2                     	movl	%eax, -14(%rbp)
     709: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     70d: 0f b6 4d f6                  	movzbl	-10(%rbp), %ecx
     711: 83 e1 03                     	andl	$3, %ecx
     714: 48 63 c9                     	movslq	%ecx, %rcx
     717: 0f b6 4c 0d f2               	movzbl	-14(%rbp,%rcx), %ecx
     71c: 01 c8                        	addl	%ecx, %eax
     71e: 0d 80 00 00 00               	orl	$128, %eax
     723: 0f b6 f0                     	movzbl	%al, %esi
     726: e8 00 00 00 00               	callq	0x72b <Hd44780::SetCursorPos(unsigned char, unsigned char)+0x8b>
     72b: 48 83 c4 20                  	addq	$32, %rsp
     72f: 5d                           	popq	%rbp
     730: c3                           	retq
     731: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     73b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000740 <Hd44780::ClearLine(unsigned char)>:
     740: 55                           	pushq	%rbp
     741: 48 89 e5                     	movq	%rsp, %rbp
     744: 48 83 ec 20                  	subq	$32, %rsp
     748: 40 88 f0                     	movb	%sil, %al
     74b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     74f: 88 45 f7                     	movb	%al, -9(%rbp)
     752: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     756: 48 89 4d e8                  	movq	%rcx, -24(%rbp)
     75a: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     75e: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
     762: 39 c8                        	cmpl	%ecx, %eax
     764: 0f 8e 05 00 00 00            	jle	0x76f <Hd44780::ClearLine(unsigned char)+0x2f>
     76a: e9 60 00 00 00               	jmp	0x7cf <Hd44780::ClearLine(unsigned char)+0x8f>
     76f: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     773: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     777: 83 e8 01                     	subl	$1, %eax
     77a: 31 f6                        	xorl	%esi, %esi
     77c: 0f b6 d0                     	movzbl	%al, %edx
     77f: e8 00 00 00 00               	callq	0x784 <Hd44780::ClearLine(unsigned char)+0x44>
     784: c7 45 f0 00 00 00 00         	movl	$0, -16(%rbp)
     78b: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
     78f: 8b 45 f0                     	movl	-16(%rbp), %eax
     792: 0f b6 49 08                  	movzbl	8(%rcx), %ecx
     796: 39 c8                        	cmpl	%ecx, %eax
     798: 0f 83 1c 00 00 00            	jae	0x7ba <Hd44780::ClearLine(unsigned char)+0x7a>
     79e: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     7a2: be 20 00 00 00               	movl	$32, %esi
     7a7: e8 00 00 00 00               	callq	0x7ac <Hd44780::ClearLine(unsigned char)+0x6c>
     7ac: 8b 45 f0                     	movl	-16(%rbp), %eax
     7af: 83 c0 01                     	addl	$1, %eax
     7b2: 89 45 f0                     	movl	%eax, -16(%rbp)
     7b5: e9 d1 ff ff ff               	jmp	0x78b <Hd44780::ClearLine(unsigned char)+0x4b>
     7ba: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     7be: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     7c2: 83 e8 01                     	subl	$1, %eax
     7c5: 31 f6                        	xorl	%esi, %esi
     7c7: 0f b6 d0                     	movzbl	%al, %edx
     7ca: e8 00 00 00 00               	callq	0x7cf <Hd44780::ClearLine(unsigned char)+0x8f>
     7cf: 48 83 c4 20                  	addq	$32, %rsp
     7d3: 5d                           	popq	%rbp
     7d4: c3                           	retq
     7d5: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     7df: 90                           	nop

00000000000007e0 <Hd44780::PrintInfo()>:
     7e0: 55                           	pushq	%rbp
     7e1: 48 89 e5                     	movq	%rsp, %rbp
     7e4: 48 83 ec 10                  	subq	$16, %rsp
     7e8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     7ec: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     7f0: 0f b6 70 09                  	movzbl	9(%rax), %esi
     7f4: 0f b6 50 08                  	movzbl	8(%rax), %edx
     7f8: 48 8d 3d 71 04 00 00         	leaq	1137(%rip), %rdi        ## 0xc70 <DisplaySet::~DisplaySet()+0x110>
     7ff: b0 00                        	movb	$0, %al
     801: e8 00 00 00 00               	callq	0x806 <Hd44780::PrintInfo()+0x26>
     806: 48 83 c4 10                  	addq	$16, %rsp
     80a: 5d                           	popq	%rbp
     80b: c3                           	retq
     80c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000810 <Hd44780::Write4bits(unsigned char)>:
     810: 55                           	pushq	%rbp
     811: 48 89 e5                     	movq	%rsp, %rbp
     814: 48 83 ec 20                  	subq	$32, %rsp
     818: 40 88 f0                     	movb	%sil, %al
     81b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     81f: 88 45 f7                     	movb	%al, -9(%rbp)
     822: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     826: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     82a: 48 83 c7 0c                  	addq	$12, %rdi
     82e: 0f be 75 f7                  	movsbl	-9(%rbp), %esi
     832: e8 00 00 00 00               	callq	0x837 <Hd44780::Write4bits(unsigned char)+0x27>
     837: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     83b: 48 83 c7 0c                  	addq	$12, %rdi
     83f: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     843: 83 c8 04                     	orl	$4, %eax
     846: 83 c8 08                     	orl	$8, %eax
     849: 0f be f0                     	movsbl	%al, %esi
     84c: e8 00 00 00 00               	callq	0x851 <Hd44780::Write4bits(unsigned char)+0x41>
     851: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     855: 48 83 c7 0c                  	addq	$12, %rdi
     859: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     85d: 83 e0 fb                     	andl	$-5, %eax
     860: 83 c8 08                     	orl	$8, %eax
     863: 0f be f0                     	movsbl	%al, %esi
     866: e8 00 00 00 00               	callq	0x86b <Hd44780::Write4bits(unsigned char)+0x5b>
     86b: 48 83 c4 20                  	addq	$32, %rsp
     86f: 5d                           	popq	%rbp
     870: c3                           	retq
     871: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     87b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000880 <HAL_I2C::Write(char)>:
     880: 55                           	pushq	%rbp
     881: 48 89 e5                     	movq	%rsp, %rbp
     884: 48 83 ec 10                  	subq	$16, %rsp
     888: 40 88 f0                     	movb	%sil, %al
     88b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     88f: 88 45 f7                     	movb	%al, -9(%rbp)
     892: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     896: e8 00 00 00 00               	callq	0x89b <HAL_I2C::Write(char)+0x1b>
     89b: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
     89f: be 01 00 00 00               	movl	$1, %esi
     8a4: e8 00 00 00 00               	callq	0x8a9 <HAL_I2C::Write(char)+0x29>
     8a9: 48 83 c4 10                  	addq	$16, %rsp
     8ad: 5d                           	popq	%rbp
     8ae: c3                           	retq
     8af: 90                           	nop

00000000000008b0 <Hd44780::SetCursor(unsigned int)>:
     8b0: 55                           	pushq	%rbp
     8b1: 48 89 e5                     	movq	%rsp, %rbp
     8b4: 48 83 ec 20                  	subq	$32, %rsp
     8b8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     8bc: 89 75 f4                     	movl	%esi, -12(%rbp)
     8bf: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     8c3: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     8c7: c6 45 f3 0c                  	movb	$12, -13(%rbp)
     8cb: 8b 45 f4                     	movl	-12(%rbp), %eax
     8ce: 83 e0 01                     	andl	$1, %eax
     8d1: 83 f8 01                     	cmpl	$1, %eax
     8d4: 0f 85 0a 00 00 00            	jne	0x8e4 <Hd44780::SetCursor(unsigned int)+0x34>
     8da: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     8de: 83 c8 02                     	orl	$2, %eax
     8e1: 88 45 f3                     	movb	%al, -13(%rbp)
     8e4: 8b 45 f4                     	movl	-12(%rbp), %eax
     8e7: 83 e0 02                     	andl	$2, %eax
     8ea: 83 f8 02                     	cmpl	$2, %eax
     8ed: 0f 85 0a 00 00 00            	jne	0x8fd <Hd44780::SetCursor(unsigned int)+0x4d>
     8f3: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     8f7: 83 c8 01                     	orl	$1, %eax
     8fa: 88 45 f3                     	movb	%al, -13(%rbp)
     8fd: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     901: 0f b6 75 f3                  	movzbl	-13(%rbp), %esi
     905: e8 00 00 00 00               	callq	0x90a <Hd44780::SetCursor(unsigned int)+0x5a>
     90a: 48 83 c4 20                  	addq	$32, %rsp
     90e: 5d                           	popq	%rbp
     90f: c3                           	retq

0000000000000910 <Hd44780::~Hd44780()>:
     910: 55                           	pushq	%rbp
     911: 48 89 e5                     	movq	%rsp, %rbp
     914: 48 83 ec 10                  	subq	$16, %rsp
     918: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     91c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     920: e8 00 00 00 00               	callq	0x925 <Hd44780::~Hd44780()+0x15>
     925: 48 83 c4 10                  	addq	$16, %rsp
     929: 5d                           	popq	%rbp
     92a: c3                           	retq
     92b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000930 <Hd44780::~Hd44780()>:
     930: 55                           	pushq	%rbp
     931: 48 89 e5                     	movq	%rsp, %rbp
     934: 48 83 ec 10                  	subq	$16, %rsp
     938: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     93c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     940: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
     944: e8 00 00 00 00               	callq	0x949 <Hd44780::~Hd44780()+0x19>
     949: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     94d: e8 00 00 00 00               	callq	0x952 <Hd44780::~Hd44780()+0x22>
     952: 48 83 c4 10                  	addq	$16, %rsp
     956: 5d                           	popq	%rbp
     957: c3                           	retq
     958: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000000960 <DisplaySet::SetSleep(bool)>:
     960: 55                           	pushq	%rbp
     961: 48 89 e5                     	movq	%rsp, %rbp
     964: 40 88 f0                     	movb	%sil, %al
     967: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     96b: 24 01                        	andb	$1, %al
     96d: 88 45 f7                     	movb	%al, -9(%rbp)
     970: 5d                           	popq	%rbp
     971: c3                           	retq
     972: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     97c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000980 <DisplaySet::SetContrast(unsigned char)>:
     980: 55                           	pushq	%rbp
     981: 48 89 e5                     	movq	%rsp, %rbp
     984: 40 88 f0                     	movb	%sil, %al
     987: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     98b: 88 45 f7                     	movb	%al, -9(%rbp)
     98e: 5d                           	popq	%rbp
     98f: c3                           	retq

0000000000000990 <DisplaySet::SetFlipVertically(bool)>:
     990: 55                           	pushq	%rbp
     991: 48 89 e5                     	movq	%rsp, %rbp
     994: 40 88 f0                     	movb	%sil, %al
     997: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     99b: 24 01                        	andb	$1, %al
     99d: 88 45 f7                     	movb	%al, -9(%rbp)
     9a0: 5d                           	popq	%rbp
     9a1: c3                           	retq
     9a2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     9ac: 0f 1f 40 00                  	nopl	(%rax)

00000000000009b0 <DisplaySet::~DisplaySet()>:
     9b0: 55                           	pushq	%rbp
     9b1: 48 89 e5                     	movq	%rsp, %rbp
     9b4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     9b8: 0f 0b                        	ud2
     9ba: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000009c0 <DisplaySet::~DisplaySet()>:
     9c0: 55                           	pushq	%rbp
     9c1: 48 89 e5                     	movq	%rsp, %rbp
     9c4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     9c8: 0f 0b                        	ud2
     9ca: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000009d0 <DisplaySet::PrintInfo()>:
     9d0: 55                           	pushq	%rbp
     9d1: 48 89 e5                     	movq	%rsp, %rbp
     9d4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     9d8: 5d                           	popq	%rbp
     9d9: c3                           	retq
     9da: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000009e0 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
     9e0: 55                           	pushq	%rbp
     9e1: 48 89 e5                     	movq	%rsp, %rbp
     9e4: 40 88 f0                     	movb	%sil, %al
     9e7: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     9eb: 88 45 f7                     	movb	%al, -9(%rbp)
     9ee: 89 55 f0                     	movl	%edx, -16(%rbp)
     9f1: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     9f5: 8a 4d f7                     	movb	-9(%rbp), %cl
     9f8: 88 08                        	movb	%cl, (%rax)
     9fa: 8b 4d f0                     	movl	-16(%rbp), %ecx
     9fd: 89 48 04                     	movl	%ecx, 4(%rax)
     a00: 5d                           	popq	%rbp
     a01: c3                           	retq
     a02: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     a0c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000a10 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
     a10: 55                           	pushq	%rbp
     a11: 48 89 e5                     	movq	%rsp, %rbp
     a14: 48 83 ec 10                  	subq	$16, %rsp
     a18: 40 88 f8                     	movb	%dil, %al
     a1b: 88 45 fe                     	movb	%al, -2(%rbp)
     a1e: 89 75 f8                     	movl	%esi, -8(%rbp)
     a21: 0f b6 7d fe                  	movzbl	-2(%rbp), %edi
     a25: e8 00 00 00 00               	callq	0xa2a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1a>
     a2a: 8b 7d f8                     	movl	-8(%rbp), %edi
     a2d: e8 00 00 00 00               	callq	0xa32 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x22>
     a32: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     a36: 83 f8 30                     	cmpl	$48, %eax
     a39: 0f 8c 0d 00 00 00            	jl	0xa4c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x3c>
     a3f: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     a43: 83 f8 37                     	cmpl	$55, %eax
     a46: 0f 8e 1a 00 00 00            	jle	0xa66 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x56>
     a4c: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     a50: 83 f8 50                     	cmpl	$80, %eax
     a53: 0f 8c 2e 00 00 00            	jl	0xa87 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
     a59: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     a5d: 83 f8 5f                     	cmpl	$95, %eax
     a60: 0f 8f 21 00 00 00            	jg	0xa87 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
     a66: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
     a6a: be 01 00 00 00               	movl	$1, %esi
     a6f: e8 00 00 00 00               	callq	0xa74 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x64>
     a74: 0f b6 c0                     	movzbl	%al, %eax
     a77: 83 f8 00                     	cmpl	$0, %eax
     a7a: 0f 94 c0                     	sete	%al
     a7d: 24 01                        	andb	$1, %al
     a7f: 88 45 ff                     	movb	%al, -1(%rbp)
     a82: e9 19 00 00 00               	jmp	0xaa0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
     a87: 31 c0                        	xorl	%eax, %eax
     a89: 89 c7                        	movl	%eax, %edi
     a8b: 31 f6                        	xorl	%esi, %esi
     a8d: e8 00 00 00 00               	callq	0xa92 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x82>
     a92: 0f b6 c0                     	movzbl	%al, %eax
     a95: 83 f8 00                     	cmpl	$0, %eax
     a98: 0f 94 c0                     	sete	%al
     a9b: 24 01                        	andb	$1, %al
     a9d: 88 45 ff                     	movb	%al, -1(%rbp)
     aa0: 8a 45 ff                     	movb	-1(%rbp), %al
     aa3: 24 01                        	andb	$1, %al
     aa5: 0f b6 c0                     	movzbl	%al, %eax
     aa8: 48 83 c4 10                  	addq	$16, %rsp
     aac: 5d                           	popq	%rbp
     aad: c3                           	retq
     aae: 66 90                        	nop

0000000000000ab0 <i2c_set_address(unsigned char)>:
     ab0: 55                           	pushq	%rbp
     ab1: 48 89 e5                     	movq	%rsp, %rbp
     ab4: 40 88 f8                     	movb	%dil, %al
     ab7: 88 45 ff                     	movb	%al, -1(%rbp)
     aba: 5d                           	popq	%rbp
     abb: c3                           	retq
     abc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000ac0 <i2c_set_baudrate(unsigned int)>:
     ac0: 55                           	pushq	%rbp
     ac1: 48 89 e5                     	movq	%rsp, %rbp
     ac4: 89 7d fc                     	movl	%edi, -4(%rbp)
     ac7: 5d                           	popq	%rbp
     ac8: c3                           	retq
     ac9: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000000ad0 <i2c_read(char const*, unsigned int)>:
     ad0: 55                           	pushq	%rbp
     ad1: 48 89 e5                     	movq	%rsp, %rbp
     ad4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     ad8: 89 75 f4                     	movl	%esi, -12(%rbp)
     adb: b0 01                        	movb	$1, %al
     add: 0f b6 c0                     	movzbl	%al, %eax
     ae0: 5d                           	popq	%rbp
     ae1: c3                           	retq
     ae2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     aec: 0f 1f 40 00                  	nopl	(%rax)

0000000000000af0 <i2c_write(char const*, unsigned int)>:
     af0: 55                           	pushq	%rbp
     af1: 48 89 e5                     	movq	%rsp, %rbp
     af4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     af8: 89 75 f4                     	movl	%esi, -12(%rbp)
     afb: b0 01                        	movb	$1, %al
     afd: 0f b6 c0                     	movzbl	%al, %eax
     b00: 5d                           	popq	%rbp
     b01: c3                           	retq
     b02: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     b0c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000b10 <HAL_I2C::Setup()>:
     b10: 55                           	pushq	%rbp
     b11: 48 89 e5                     	movq	%rsp, %rbp
     b14: 48 83 ec 10                  	subq	$16, %rsp
     b18: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     b1c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     b20: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     b24: 0f b6 38                     	movzbl	(%rax), %edi
     b27: e8 00 00 00 00               	callq	0xb2c <HAL_I2C::Setup()+0x1c>
     b2c: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     b30: 8b 78 04                     	movl	4(%rax), %edi
     b33: e8 00 00 00 00               	callq	0xb38 <HAL_I2C::Setup()+0x28>
     b38: 48 83 c4 10                  	addq	$16, %rsp
     b3c: 5d                           	popq	%rbp
     b3d: c3                           	retq
     b3e: 66 90                        	nop

0000000000000b40 <Hd44780::~Hd44780()>:
     b40: 55                           	pushq	%rbp
     b41: 48 89 e5                     	movq	%rsp, %rbp
     b44: 48 83 ec 10                  	subq	$16, %rsp
     b48: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     b4c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     b50: e8 00 00 00 00               	callq	0xb55 <Hd44780::~Hd44780()+0x15>
     b55: 48 83 c4 10                  	addq	$16, %rsp
     b59: 5d                           	popq	%rbp
     b5a: c3                           	retq
     b5b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000b60 <DisplaySet::~DisplaySet()>:
     b60: 55                           	pushq	%rbp
     b61: 48 89 e5                     	movq	%rsp, %rbp
     b64: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     b68: 5d                           	popq	%rbp
     b69: c3                           	retq

lib_linux/libdisplay.a(ssd1306.o):	file format mach-o 64-bit x86-64

Disassembly of section __TEXT,__text:

0000000000000000 <Ssd1306::Ssd1306()>:
       0: 55                           	pushq	%rbp
       1: 48 89 e5                     	movq	%rsp, %rbp
       4: 48 83 ec 10                  	subq	$16, %rsp
       8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
       c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      10: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
      14: e8 00 00 00 00               	callq	0x19 <Ssd1306::Ssd1306()+0x19>
      19: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      1d: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x24 <Ssd1306::Ssd1306()+0x24>
      24: 48 83 c0 10                  	addq	$16, %rax
      28: 48 89 07                     	movq	%rax, (%rdi)
      2b: 48 83 c7 0c                  	addq	$12, %rdi
      2f: be 3c 00 00 00               	movl	$60, %esi
      34: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
      39: e8 00 00 00 00               	callq	0x3e <Ssd1306::Ssd1306()+0x3e>
      3e: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      42: c7 40 14 00 00 00 00         	movl	$0, 20(%rax)
      49: c6 40 18 00                  	movb	$0, 24(%rax)
      4d: c7 40 20 00 00 00 00         	movl	$0, 32(%rax)
      54: 48 c7 40 28 00 00 00 00      	movq	$0, 40(%rax)
      5c: 66 c7 40 30 00 00            	movw	$0, 48(%rax)
      62: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x69 <Ssd1306::Ssd1306()+0x69>
      6a: 0f 94 c0                     	sete	%al
      6d: 34 ff                        	xorb	$-1, %al
      6f: a8 01                        	testb	$1, %al
      71: 0f 85 05 00 00 00            	jne	0x7c <Ssd1306::Ssd1306()+0x7c>
      77: e9 1f 00 00 00               	jmp	0x9b <Ssd1306::Ssd1306()+0x9b>
      7c: 48 8d 3d 8d 15 00 00         	leaq	5517(%rip), %rdi        ## 0x1610 <DisplaySet::~DisplaySet()+0x110>
      83: 48 8d 35 8e 15 00 00         	leaq	5518(%rip), %rsi        ## 0x1618 <DisplaySet::~DisplaySet()+0x118>
      8a: 48 8d 0d 93 15 00 00         	leaq	5523(%rip), %rcx        ## 0x1624 <DisplaySet::~DisplaySet()+0x124>
      91: ba d7 00 00 00               	movl	$215, %edx
      96: e8 00 00 00 00               	callq	0x9b <Ssd1306::Ssd1306()+0x9b>
      9b: e9 00 00 00 00               	jmp	0xa0 <Ssd1306::Ssd1306()+0xa0>
      a0: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      a4: 48 89 3d 00 00 00 00         	movq	%rdi, (%rip)            ## 0xab <Ssd1306::Ssd1306()+0xab>
      ab: e8 00 00 00 00               	callq	0xb0 <Ssd1306::Ssd1306()+0xb0>
      b0: 48 83 c4 10                  	addq	$16, %rsp
      b4: 5d                           	popq	%rbp
      b5: c3                           	retq
      b6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

00000000000000c0 <DisplaySet::DisplaySet()>:
      c0: 55                           	pushq	%rbp
      c1: 48 89 e5                     	movq	%rsp, %rbp
      c4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      c8: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      cc: 48 8b 0d 00 00 00 00         	movq	(%rip), %rcx            ## 0xd3 <DisplaySet::DisplaySet()+0x13>
      d3: 48 83 c1 10                  	addq	$16, %rcx
      d7: 48 89 08                     	movq	%rcx, (%rax)
      da: c6 40 0a 7f                  	movb	$127, 10(%rax)
      de: c6 40 0b 00                  	movb	$0, 11(%rax)
      e2: 5d                           	popq	%rbp
      e3: c3                           	retq
      e4: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
      ee: 66 90                        	nop

00000000000000f0 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
      f0: 55                           	pushq	%rbp
      f1: 48 89 e5                     	movq	%rsp, %rbp
      f4: 48 83 ec 10                  	subq	$16, %rsp
      f8: 40 88 f0                     	movb	%sil, %al
      fb: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      ff: 88 45 f7                     	movb	%al, -9(%rbp)
     102: 89 55 f0                     	movl	%edx, -16(%rbp)
     105: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     109: 8a 45 f7                     	movb	-9(%rbp), %al
     10c: 8b 55 f0                     	movl	-16(%rbp), %edx
     10f: 0f b6 f0                     	movzbl	%al, %esi
     112: e8 00 00 00 00               	callq	0x117 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)+0x27>
     117: 48 83 c4 10                  	addq	$16, %rsp
     11b: 5d                           	popq	%rbp
     11c: c3                           	retq
     11d: 0f 1f 00                     	nopl	(%rax)

0000000000000120 <Ssd1306::InitMembers()>:
     120: 55                           	pushq	%rbp
     121: 48 89 e5                     	movq	%rsp, %rbp
     124: 48 83 ec 20                  	subq	$32, %rsp
     128: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     12c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     130: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     134: 8b 40 14                     	movl	20(%rax), %eax
     137: 89 45 f4                     	movl	%eax, -12(%rbp)
     13a: 85 c0                        	testl	%eax, %eax
     13c: 0f 84 19 00 00 00            	je	0x15b <Ssd1306::InitMembers()+0x3b>
     142: e9 00 00 00 00               	jmp	0x147 <Ssd1306::InitMembers()+0x27>
     147: 8b 45 f4                     	movl	-12(%rbp), %eax
     14a: 83 c0 ff                     	addl	$-1, %eax
     14d: 83 e8 02                     	subl	$2, %eax
     150: 0f 82 16 00 00 00            	jb	0x16c <Ssd1306::InitMembers()+0x4c>
     156: e9 22 00 00 00               	jmp	0x17d <Ssd1306::InitMembers()+0x5d>
     15b: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     15f: c6 40 08 15                  	movb	$21, 8(%rax)
     163: c6 40 09 08                  	movb	$8, 9(%rax)
     167: e9 1d 00 00 00               	jmp	0x189 <Ssd1306::InitMembers()+0x69>
     16c: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     170: c6 40 08 15                  	movb	$21, 8(%rax)
     174: c6 40 09 04                  	movb	$4, 9(%rax)
     178: e9 0c 00 00 00               	jmp	0x189 <Ssd1306::InitMembers()+0x69>
     17d: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     181: c6 40 08 15                  	movb	$21, 8(%rax)
     185: c6 40 09 08                  	movb	$8, 9(%rax)
     189: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     18d: 8b 70 14                     	movl	20(%rax), %esi
     190: b9 04 00 00 00               	movl	$4, %ecx
     195: ba 08 00 00 00               	movl	$8, %edx
     19a: 83 fe 00                     	cmpl	$0, %esi
     19d: 0f 44 ca                     	cmovel	%edx, %ecx
     1a0: 89 48 1c                     	movl	%ecx, 28(%rax)
     1a3: 0f b6 40 09                  	movzbl	9(%rax), %eax
     1a7: 6b c0 15                     	imull	$21, %eax, %eax
     1aa: 48 63 f8                     	movslq	%eax, %rdi
     1ad: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
     1b4: 48 83 ff 00                  	cmpq	$0, %rdi
     1b8: 48 0f 4c f8                  	cmovlq	%rax, %rdi
     1bc: e8 00 00 00 00               	callq	0x1c1 <Ssd1306::InitMembers()+0xa1>
     1c1: 48 89 c1                     	movq	%rax, %rcx
     1c4: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     1c8: 48 89 48 28                  	movq	%rcx, 40(%rax)
     1cc: 66 c7 40 30 00 00            	movw	$0, 48(%rax)
     1d2: 48 8b 78 28                  	movq	40(%rax), %rdi
     1d6: 0f b6 40 09                  	movzbl	9(%rax), %eax
     1da: 6b c0 15                     	imull	$21, %eax, %eax
     1dd: 48 63 d0                     	movslq	%eax, %rdx
     1e0: be 20 00 00 00               	movl	$32, %esi
     1e5: e8 00 00 00 00               	callq	0x1ea <Ssd1306::InitMembers()+0xca>
     1ea: 48 83 c4 20                  	addq	$32, %rsp
     1ee: 5d                           	popq	%rbp
     1ef: c3                           	retq

00000000000001f0 <Ssd1306::Ssd1306()>:
     1f0: 55                           	pushq	%rbp
     1f1: 48 89 e5                     	movq	%rsp, %rbp
     1f4: 48 83 ec 10                  	subq	$16, %rsp
     1f8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     1fc: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     200: e8 00 00 00 00               	callq	0x205 <Ssd1306::Ssd1306()+0x15>
     205: 48 83 c4 10                  	addq	$16, %rsp
     209: 5d                           	popq	%rbp
     20a: c3                           	retq
     20b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000210 <Ssd1306::Ssd1306(TOledPanel)>:
     210: 55                           	pushq	%rbp
     211: 48 89 e5                     	movq	%rsp, %rbp
     214: 48 83 ec 20                  	subq	$32, %rsp
     218: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     21c: 89 75 f4                     	movl	%esi, -12(%rbp)
     21f: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     223: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     227: e8 00 00 00 00               	callq	0x22c <Ssd1306::Ssd1306(TOledPanel)+0x1c>
     22c: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     230: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x237 <Ssd1306::Ssd1306(TOledPanel)+0x27>
     237: 48 83 c0 10                  	addq	$16, %rax
     23b: 48 89 07                     	movq	%rax, (%rdi)
     23e: 48 83 c7 0c                  	addq	$12, %rdi
     242: be 3c 00 00 00               	movl	$60, %esi
     247: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
     24c: e8 00 00 00 00               	callq	0x251 <Ssd1306::Ssd1306(TOledPanel)+0x41>
     251: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     255: 8b 4d f4                     	movl	-12(%rbp), %ecx
     258: 89 48 14                     	movl	%ecx, 20(%rax)
     25b: c6 40 18 00                  	movb	$0, 24(%rax)
     25f: c7 40 20 00 00 00 00         	movl	$0, 32(%rax)
     266: 48 c7 40 28 00 00 00 00      	movq	$0, 40(%rax)
     26e: 66 c7 40 30 00 00            	movw	$0, 48(%rax)
     274: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x27b <Ssd1306::Ssd1306(TOledPanel)+0x6b>
     27c: 0f 94 c0                     	sete	%al
     27f: 34 ff                        	xorb	$-1, %al
     281: a8 01                        	testb	$1, %al
     283: 0f 85 05 00 00 00            	jne	0x28e <Ssd1306::Ssd1306(TOledPanel)+0x7e>
     289: e9 1f 00 00 00               	jmp	0x2ad <Ssd1306::Ssd1306(TOledPanel)+0x9d>
     28e: 48 8d 3d 7b 13 00 00         	leaq	4987(%rip), %rdi        ## 0x1610 <DisplaySet::~DisplaySet()+0x110>
     295: 48 8d 35 7c 13 00 00         	leaq	4988(%rip), %rsi        ## 0x1618 <DisplaySet::~DisplaySet()+0x118>
     29c: 48 8d 0d 81 13 00 00         	leaq	4993(%rip), %rcx        ## 0x1624 <DisplaySet::~DisplaySet()+0x124>
     2a3: ba de 00 00 00               	movl	$222, %edx
     2a8: e8 00 00 00 00               	callq	0x2ad <Ssd1306::Ssd1306(TOledPanel)+0x9d>
     2ad: e9 00 00 00 00               	jmp	0x2b2 <Ssd1306::Ssd1306(TOledPanel)+0xa2>
     2b2: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     2b6: 48 89 3d 00 00 00 00         	movq	%rdi, (%rip)            ## 0x2bd <Ssd1306::Ssd1306(TOledPanel)+0xad>
     2bd: e8 00 00 00 00               	callq	0x2c2 <Ssd1306::Ssd1306(TOledPanel)+0xb2>
     2c2: 48 83 c4 20                  	addq	$32, %rsp
     2c6: 5d                           	popq	%rbp
     2c7: c3                           	retq
     2c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

00000000000002d0 <Ssd1306::Ssd1306(TOledPanel)>:
     2d0: 55                           	pushq	%rbp
     2d1: 48 89 e5                     	movq	%rsp, %rbp
     2d4: 48 83 ec 10                  	subq	$16, %rsp
     2d8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     2dc: 89 75 f4                     	movl	%esi, -12(%rbp)
     2df: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     2e3: 8b 75 f4                     	movl	-12(%rbp), %esi
     2e6: e8 00 00 00 00               	callq	0x2eb <Ssd1306::Ssd1306(TOledPanel)+0x1b>
     2eb: 48 83 c4 10                  	addq	$16, %rsp
     2ef: 5d                           	popq	%rbp
     2f0: c3                           	retq
     2f1: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     2fb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000300 <Ssd1306::Ssd1306(unsigned char, TOledPanel)>:
     300: 55                           	pushq	%rbp
     301: 48 89 e5                     	movq	%rsp, %rbp
     304: 48 83 ec 30                  	subq	$48, %rsp
     308: 40 88 f0                     	movb	%sil, %al
     30b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     30f: 88 45 f7                     	movb	%al, -9(%rbp)
     312: 89 55 f0                     	movl	%edx, -16(%rbp)
     315: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     319: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     31d: e8 00 00 00 00               	callq	0x322 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x22>
     322: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     326: 48 8d 0d 00 00 00 00         	leaq	(%rip), %rcx            ## 0x32d <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x2d>
     32d: 48 83 c1 10                  	addq	$16, %rcx
     331: 48 89 08                     	movq	%rcx, (%rax)
     334: 48 83 c0 0c                  	addq	$12, %rax
     338: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     33c: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     340: 83 f8 00                     	cmpl	$0, %eax
     343: 0f 85 0d 00 00 00            	jne	0x356 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x56>
     349: b8 3c 00 00 00               	movl	$60, %eax
     34e: 89 45 dc                     	movl	%eax, -36(%rbp)
     351: e9 07 00 00 00               	jmp	0x35d <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x5d>
     356: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     35a: 89 45 dc                     	movl	%eax, -36(%rbp)
     35d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     361: 8b 45 dc                     	movl	-36(%rbp), %eax
     364: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
     369: 0f b6 f0                     	movzbl	%al, %esi
     36c: e8 00 00 00 00               	callq	0x371 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x71>
     371: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     375: 8b 4d f0                     	movl	-16(%rbp), %ecx
     378: 89 48 14                     	movl	%ecx, 20(%rax)
     37b: c6 40 18 00                  	movb	$0, 24(%rax)
     37f: c7 40 20 00 00 00 00         	movl	$0, 32(%rax)
     386: 48 c7 40 28 00 00 00 00      	movq	$0, 40(%rax)
     38e: 66 c7 40 30 00 00            	movw	$0, 48(%rax)
     394: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x39b <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x9b>
     39c: 0f 94 c0                     	sete	%al
     39f: 34 ff                        	xorb	$-1, %al
     3a1: a8 01                        	testb	$1, %al
     3a3: 0f 85 05 00 00 00            	jne	0x3ae <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xae>
     3a9: e9 1f 00 00 00               	jmp	0x3cd <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xcd>
     3ae: 48 8d 3d 5b 12 00 00         	leaq	4699(%rip), %rdi        ## 0x1610 <DisplaySet::~DisplaySet()+0x110>
     3b5: 48 8d 35 5c 12 00 00         	leaq	4700(%rip), %rsi        ## 0x1618 <DisplaySet::~DisplaySet()+0x118>
     3bc: 48 8d 0d 61 12 00 00         	leaq	4705(%rip), %rcx        ## 0x1624 <DisplaySet::~DisplaySet()+0x124>
     3c3: ba e5 00 00 00               	movl	$229, %edx
     3c8: e8 00 00 00 00               	callq	0x3cd <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xcd>
     3cd: e9 00 00 00 00               	jmp	0x3d2 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xd2>
     3d2: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     3d6: 48 89 3d 00 00 00 00         	movq	%rdi, (%rip)            ## 0x3dd <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xdd>
     3dd: e8 00 00 00 00               	callq	0x3e2 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xe2>
     3e2: 48 83 c4 30                  	addq	$48, %rsp
     3e6: 5d                           	popq	%rbp
     3e7: c3                           	retq
     3e8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

00000000000003f0 <Ssd1306::Ssd1306(unsigned char, TOledPanel)>:
     3f0: 55                           	pushq	%rbp
     3f1: 48 89 e5                     	movq	%rsp, %rbp
     3f4: 48 83 ec 10                  	subq	$16, %rsp
     3f8: 40 88 f0                     	movb	%sil, %al
     3fb: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     3ff: 88 45 f7                     	movb	%al, -9(%rbp)
     402: 89 55 f0                     	movl	%edx, -16(%rbp)
     405: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     409: 8a 45 f7                     	movb	-9(%rbp), %al
     40c: 8b 55 f0                     	movl	-16(%rbp), %edx
     40f: 0f b6 f0                     	movzbl	%al, %esi
     412: e8 00 00 00 00               	callq	0x417 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x27>
     417: 48 83 c4 10                  	addq	$16, %rsp
     41b: 5d                           	popq	%rbp
     41c: c3                           	retq
     41d: 0f 1f 00                     	nopl	(%rax)

0000000000000420 <Ssd1306::PrintInfo()>:
     420: 55                           	pushq	%rbp
     421: 48 89 e5                     	movq	%rsp, %rbp
     424: 48 83 ec 10                  	subq	$16, %rsp
     428: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     42c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     430: 8a 50 18                     	movb	24(%rax), %dl
     433: 48 8d 35 10 12 00 00         	leaq	4624(%rip), %rsi        ## 0x164a <DisplaySet::~DisplaySet()+0x14a>
     43a: 48 8d 0d 02 12 00 00         	leaq	4610(%rip), %rcx        ## 0x1643 <DisplaySet::~DisplaySet()+0x143>
     441: f6 c2 01                     	testb	$1, %dl
     444: 48 0f 45 f1                  	cmovneq	%rcx, %rsi
     448: 0f b6 50 09                  	movzbl	9(%rax), %edx
     44c: 0f b6 48 08                  	movzbl	8(%rax), %ecx
     450: 48 8d 3d e0 11 00 00         	leaq	4576(%rip), %rdi        ## 0x1637 <DisplaySet::~DisplaySet()+0x137>
     457: b0 00                        	movb	$0, %al
     459: e8 00 00 00 00               	callq	0x45e <Ssd1306::PrintInfo()+0x3e>
     45e: 48 83 c4 10                  	addq	$16, %rsp
     462: 5d                           	popq	%rbp
     463: c3                           	retq
     464: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     46e: 66 90                        	nop

0000000000000470 <Ssd1306::CheckSH1106()>:
     470: 55                           	pushq	%rbp
     471: 48 89 e5                     	movq	%rsp, %rbp
     474: 48 83 ec 20                  	subq	$32, %rsp
     478: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     47c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     480: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     484: 31 f6                        	xorl	%esi, %esi
     486: e8 00 00 00 00               	callq	0x48b <Ssd1306::CheckSH1106()+0x1b>
     48b: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     48f: be 90 00 00 00               	movl	$144, %esi
     494: e8 00 00 00 00               	callq	0x499 <Ssd1306::CheckSH1106()+0x29>
     499: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     49d: be b0 00 00 00               	movl	$176, %esi
     4a2: e8 00 00 00 00               	callq	0x4a7 <Ssd1306::CheckSH1106()+0x37>
     4a7: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     4ab: 8b 05 00 00 00 00            	movl	(%rip), %eax            ## 0x4b1 <Ssd1306::CheckSH1106()+0x41>
     4b1: 89 45 f3                     	movl	%eax, -13(%rbp)
     4b4: 8a 05 04 00 00 00            	movb	4(%rip), %al            ## 0x4be <Ssd1306::CheckSH1106()+0x4e>
     4ba: 88 45 f7                     	movb	%al, -9(%rbp)
     4bd: 48 8d 75 f3                  	leaq	-13(%rbp), %rsi
     4c1: ba 05 00 00 00               	movl	$5, %edx
     4c6: e8 00 00 00 00               	callq	0x4cb <Ssd1306::CheckSH1106()+0x5b>
     4cb: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     4cf: 31 f6                        	xorl	%esi, %esi
     4d1: e8 00 00 00 00               	callq	0x4d6 <Ssd1306::CheckSH1106()+0x66>
     4d6: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     4da: be 90 00 00 00               	movl	$144, %esi
     4df: e8 00 00 00 00               	callq	0x4e4 <Ssd1306::CheckSH1106()+0x74>
     4e4: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     4e8: be b0 00 00 00               	movl	$176, %esi
     4ed: e8 00 00 00 00               	callq	0x4f2 <Ssd1306::CheckSH1106()+0x82>
     4f2: 48 8d 7d ee                  	leaq	-18(%rbp), %rdi
     4f6: 31 f6                        	xorl	%esi, %esi
     4f8: ba 05 00 00 00               	movl	$5, %edx
     4fd: e8 00 00 00 00               	callq	0x502 <Ssd1306::CheckSH1106()+0x92>
     502: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     506: 48 83 c7 0c                  	addq	$12, %rdi
     50a: be 40 00 00 00               	movl	$64, %esi
     50f: e8 00 00 00 00               	callq	0x514 <Ssd1306::CheckSH1106()+0xa4>
     514: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     518: 48 83 c7 0c                  	addq	$12, %rdi
     51c: 48 8d 75 ee                  	leaq	-18(%rbp), %rsi
     520: ba 05 00 00 00               	movl	$5, %edx
     525: e8 00 00 00 00               	callq	0x52a <Ssd1306::CheckSH1106()+0xba>
     52a: 0f be 75 ee                  	movsbl	-18(%rbp), %esi
     52e: 0f be 55 ef                  	movsbl	-17(%rbp), %edx
     532: 0f be 4d f0                  	movsbl	-16(%rbp), %ecx
     536: 44 0f be 45 f1               	movsbl	-15(%rbp), %r8d
     53b: 44 0f be 4d f2               	movsbl	-14(%rbp), %r9d
     540: 48 8d 3d 0b 11 00 00         	leaq	4363(%rip), %rdi        ## 0x1652 <DisplaySet::~DisplaySet()+0x152>
     547: b0 00                        	movb	$0, %al
     549: e8 00 00 00 00               	callq	0x54e <Ssd1306::CheckSH1106()+0xde>
     54e: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     552: 48 8d 4d f3                  	leaq	-13(%rbp), %rcx
     556: 48 83 c1 01                  	addq	$1, %rcx
     55a: 48 8d 55 ee                  	leaq	-18(%rbp), %rdx
     55e: 48 83 c2 01                  	addq	$1, %rdx
     562: 8b 12                        	movl	(%rdx), %edx
     564: 8b 09                        	movl	(%rcx), %ecx
     566: 29 d1                        	subl	%edx, %ecx
     568: 0f 95 c1                     	setne	%cl
     56b: 0f b6 c9                     	movzbl	%cl, %ecx
     56e: 83 f9 00                     	cmpl	$0, %ecx
     571: 0f 94 c1                     	sete	%cl
     574: 80 e1 01                     	andb	$1, %cl
     577: 88 48 18                     	movb	%cl, 24(%rax)
     57a: 8a 40 18                     	movb	24(%rax), %al
     57d: 24 01                        	andb	$1, %al
     57f: 0f b6 f0                     	movzbl	%al, %esi
     582: 48 8d 3d e3 10 00 00         	leaq	4323(%rip), %rdi        ## 0x166c <DisplaySet::~DisplaySet()+0x16c>
     589: b0 00                        	movb	$0, %al
     58b: e8 00 00 00 00               	callq	0x590 <Ssd1306::CheckSH1106()+0x120>
     590: 48 83 c4 20                  	addq	$32, %rsp
     594: 5d                           	popq	%rbp
     595: c3                           	retq
     596: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

00000000000005a0 <Ssd1306::SendCommand(unsigned char)>:
     5a0: 55                           	pushq	%rbp
     5a1: 48 89 e5                     	movq	%rsp, %rbp
     5a4: 48 83 ec 10                  	subq	$16, %rsp
     5a8: 40 88 f0                     	movb	%sil, %al
     5ab: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     5af: 88 45 f7                     	movb	%al, -9(%rbp)
     5b2: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     5b6: 48 83 c7 0c                  	addq	$12, %rdi
     5ba: 31 f6                        	xorl	%esi, %esi
     5bc: 0f b6 55 f7                  	movzbl	-9(%rbp), %edx
     5c0: e8 00 00 00 00               	callq	0x5c5 <Ssd1306::SendCommand(unsigned char)+0x25>
     5c5: 48 83 c4 10                  	addq	$16, %rsp
     5c9: 5d                           	popq	%rbp
     5ca: c3                           	retq
     5cb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000005d0 <Ssd1306::SendData(unsigned char const*, unsigned int)>:
     5d0: 55                           	pushq	%rbp
     5d1: 48 89 e5                     	movq	%rsp, %rbp
     5d4: 48 83 ec 20                  	subq	$32, %rsp
     5d8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     5dc: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     5e0: 89 55 ec                     	movl	%edx, -20(%rbp)
     5e3: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     5e7: 48 83 c7 0c                  	addq	$12, %rdi
     5eb: 48 8b 75 f0                  	movq	-16(%rbp), %rsi
     5ef: 8b 55 ec                     	movl	-20(%rbp), %edx
     5f2: e8 00 00 00 00               	callq	0x5f7 <Ssd1306::SendData(unsigned char const*, unsigned int)+0x27>
     5f7: 48 83 c4 20                  	addq	$32, %rsp
     5fb: 5d                           	popq	%rbp
     5fc: c3                           	retq
     5fd: 0f 1f 00                     	nopl	(%rax)

0000000000000600 <HAL_I2C::Write(char)>:
     600: 55                           	pushq	%rbp
     601: 48 89 e5                     	movq	%rsp, %rbp
     604: 48 83 ec 10                  	subq	$16, %rsp
     608: 40 88 f0                     	movb	%sil, %al
     60b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     60f: 88 45 f7                     	movb	%al, -9(%rbp)
     612: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     616: e8 00 00 00 00               	callq	0x61b <HAL_I2C::Write(char)+0x1b>
     61b: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
     61f: be 01 00 00 00               	movl	$1, %esi
     624: e8 00 00 00 00               	callq	0x629 <HAL_I2C::Write(char)+0x29>
     629: 48 83 c4 10                  	addq	$16, %rsp
     62d: 5d                           	popq	%rbp
     62e: c3                           	retq
     62f: 90                           	nop

0000000000000630 <HAL_I2C::Read(char*, unsigned int)>:
     630: 55                           	pushq	%rbp
     631: 48 89 e5                     	movq	%rsp, %rbp
     634: 48 83 ec 20                  	subq	$32, %rsp
     638: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     63c: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     640: 89 55 ec                     	movl	%edx, -20(%rbp)
     643: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     647: e8 00 00 00 00               	callq	0x64c <HAL_I2C::Read(char*, unsigned int)+0x1c>
     64c: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     650: 8b 75 ec                     	movl	-20(%rbp), %esi
     653: e8 00 00 00 00               	callq	0x658 <HAL_I2C::Read(char*, unsigned int)+0x28>
     658: 0f b6 c0                     	movzbl	%al, %eax
     65b: 48 83 c4 20                  	addq	$32, %rsp
     65f: 5d                           	popq	%rbp
     660: c3                           	retq
     661: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     66b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000670 <Ssd1306::Start()>:
     670: 55                           	pushq	%rbp
     671: 48 89 e5                     	movq	%rsp, %rbp
     674: 48 83 ec 40                  	subq	$64, %rsp
     678: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
     67c: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     680: 48 89 7d d0                  	movq	%rdi, -48(%rbp)
     684: 48 83 c7 0c                  	addq	$12, %rdi
     688: e8 00 00 00 00               	callq	0x68d <Ssd1306::Start()+0x1d>
     68d: a8 01                        	testb	$1, %al
     68f: 0f 85 09 00 00 00            	jne	0x69e <Ssd1306::Start()+0x2e>
     695: c6 45 ff 00                  	movb	$0, -1(%rbp)
     699: e9 1f 01 00 00               	jmp	0x7bd <Ssd1306::Start()+0x14d>
     69e: 48 8b 45 d0                  	movq	-48(%rbp), %rax
     6a2: 8b 40 14                     	movl	20(%rax), %eax
     6a5: 89 45 cc                     	movl	%eax, -52(%rbp)
     6a8: 85 c0                        	testl	%eax, %eax
     6aa: 0f 84 19 00 00 00            	je	0x6c9 <Ssd1306::Start()+0x59>
     6b0: e9 00 00 00 00               	jmp	0x6b5 <Ssd1306::Start()+0x45>
     6b5: 8b 45 cc                     	movl	-52(%rbp), %eax
     6b8: 83 c0 ff                     	addl	$-1, %eax
     6bb: 83 e8 02                     	subl	$2, %eax
     6be: 0f 82 46 00 00 00            	jb	0x70a <Ssd1306::Start()+0x9a>
     6c4: e9 82 00 00 00               	jmp	0x74b <Ssd1306::Start()+0xdb>
     6c9: 48 c7 45 e8 00 00 00 00      	movq	$0, -24(%rbp)
     6d1: 48 83 7d e8 18               	cmpq	$24, -24(%rbp)
     6d6: 0f 83 29 00 00 00            	jae	0x705 <Ssd1306::Start()+0x95>
     6dc: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     6e0: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
     6e4: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x6eb <Ssd1306::Start()+0x7b>
     6eb: 0f b6 34 08                  	movzbl	(%rax,%rcx), %esi
     6ef: e8 00 00 00 00               	callq	0x6f4 <Ssd1306::Start()+0x84>
     6f4: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     6f8: 48 83 c0 01                  	addq	$1, %rax
     6fc: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     700: e9 cc ff ff ff               	jmp	0x6d1 <Ssd1306::Start()+0x61>
     705: e9 4a 00 00 00               	jmp	0x754 <Ssd1306::Start()+0xe4>
     70a: 48 c7 45 e0 00 00 00 00      	movq	$0, -32(%rbp)
     712: 48 83 7d e0 18               	cmpq	$24, -32(%rbp)
     717: 0f 83 29 00 00 00            	jae	0x746 <Ssd1306::Start()+0xd6>
     71d: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     721: 48 8b 4d e0                  	movq	-32(%rbp), %rcx
     725: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x72c <Ssd1306::Start()+0xbc>
     72c: 0f b6 34 08                  	movzbl	(%rax,%rcx), %esi
     730: e8 00 00 00 00               	callq	0x735 <Ssd1306::Start()+0xc5>
     735: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     739: 48 83 c0 01                  	addq	$1, %rax
     73d: 48 89 45 e0                  	movq	%rax, -32(%rbp)
     741: e9 cc ff ff ff               	jmp	0x712 <Ssd1306::Start()+0xa2>
     746: e9 09 00 00 00               	jmp	0x754 <Ssd1306::Start()+0xe4>
     74b: c6 45 ff 00                  	movb	$0, -1(%rbp)
     74f: e9 69 00 00 00               	jmp	0x7bd <Ssd1306::Start()+0x14d>
     754: 48 c7 45 d8 00 00 00 00      	movq	$0, -40(%rbp)
     75c: 48 81 7d d8 86 00 00 00      	cmpq	$134, -40(%rbp)
     764: 0f 83 20 00 00 00            	jae	0x78a <Ssd1306::Start()+0x11a>
     76a: 48 8b 4d d8                  	movq	-40(%rbp), %rcx
     76e: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x775 <Ssd1306::Start()+0x105>
     775: c6 04 08 00                  	movb	$0, (%rax,%rcx)
     779: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     77d: 48 83 c0 01                  	addq	$1, %rax
     781: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     785: e9 d2 ff ff ff               	jmp	0x75c <Ssd1306::Start()+0xec>
     78a: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     78e: c6 05 ff ff ff ff 40         	movb	$64, -1(%rip)           ## 0x794 <Ssd1306::Start()+0x124>
     795: e8 00 00 00 00               	callq	0x79a <Ssd1306::Start()+0x12a>
     79a: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     79e: e8 00 00 00 00               	callq	0x7a3 <Ssd1306::Start()+0x133>
     7a3: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     7a7: be af 00 00 00               	movl	$175, %esi
     7ac: e8 00 00 00 00               	callq	0x7b1 <Ssd1306::Start()+0x141>
     7b1: 48 8b 45 d0                  	movq	-48(%rbp), %rax
     7b5: c6 40 0b 01                  	movb	$1, 11(%rax)
     7b9: c6 45 ff 01                  	movb	$1, -1(%rbp)
     7bd: 8a 45 ff                     	movb	-1(%rbp), %al
     7c0: 24 01                        	andb	$1, %al
     7c2: 0f b6 c0                     	movzbl	%al, %eax
     7c5: 48 83 c4 40                  	addq	$64, %rsp
     7c9: 5d                           	popq	%rbp
     7ca: c3                           	retq
     7cb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000007d0 <HAL_I2C::IsConnected()>:
     7d0: 55                           	pushq	%rbp
     7d1: 48 89 e5                     	movq	%rsp, %rbp
     7d4: 48 83 ec 10                  	subq	$16, %rsp
     7d8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     7dc: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     7e0: 8a 01                        	movb	(%rcx), %al
     7e2: 8b 71 04                     	movl	4(%rcx), %esi
     7e5: 0f b6 f8                     	movzbl	%al, %edi
     7e8: e8 00 00 00 00               	callq	0x7ed <HAL_I2C::IsConnected()+0x1d>
     7ed: 24 01                        	andb	$1, %al
     7ef: 0f b6 c0                     	movzbl	%al, %eax
     7f2: 48 83 c4 10                  	addq	$16, %rsp
     7f6: 5d                           	popq	%rbp
     7f7: c3                           	retq
     7f8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000000800 <Ssd1306::Cls()>:
     800: 55                           	pushq	%rbp
     801: 48 89 e5                     	movq	%rsp, %rbp
     804: 48 83 ec 20                  	subq	$32, %rsp
     808: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     80c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     810: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     814: c6 45 f7 00                  	movb	$0, -9(%rbp)
     818: f6 40 18 01                  	testb	$1, 24(%rax)
     81c: 0f 84 04 00 00 00            	je	0x826 <Ssd1306::Cls()+0x26>
     822: c6 45 f7 04                  	movb	$4, -9(%rbp)
     826: c7 45 f0 00 00 00 00         	movl	$0, -16(%rbp)
     82d: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
     831: 8b 45 f0                     	movl	-16(%rbp), %eax
     834: 3b 41 1c                     	cmpl	28(%rcx), %eax
     837: 0f 83 ba 00 00 00            	jae	0x8f7 <Ssd1306::Cls()+0xf7>
     83d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     841: 0f b6 75 f7                  	movzbl	-9(%rbp), %esi
     845: 83 e6 0f                     	andl	$15, %esi
     848: e8 00 00 00 00               	callq	0x84d <Ssd1306::Cls()+0x4d>
     84d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     851: 0f b6 75 f7                  	movzbl	-9(%rbp), %esi
     855: 83 ce 10                     	orl	$16, %esi
     858: e8 00 00 00 00               	callq	0x85d <Ssd1306::Cls()+0x5d>
     85d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     861: 0f b6 75 f0                  	movzbl	-16(%rbp), %esi
     865: 81 ce b0 00 00 00            	orl	$176, %esi
     86b: e8 00 00 00 00               	callq	0x870 <Ssd1306::Cls()+0x70>
     870: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     874: 8b 40 14                     	movl	20(%rax), %eax
     877: 89 45 e4                     	movl	%eax, -28(%rbp)
     87a: 85 c0                        	testl	%eax, %eax
     87c: 0f 84 19 00 00 00            	je	0x89b <Ssd1306::Cls()+0x9b>
     882: e9 00 00 00 00               	jmp	0x887 <Ssd1306::Cls()+0x87>
     887: 8b 45 e4                     	movl	-28(%rbp), %eax
     88a: 83 c0 ff                     	addl	$-1, %eax
     88d: 83 e8 02                     	subl	$2, %eax
     890: 0f 82 27 00 00 00            	jb	0x8bd <Ssd1306::Cls()+0xbd>
     896: e9 44 00 00 00               	jmp	0x8df <Ssd1306::Cls()+0xdf>
     89b: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     89f: 0f b6 55 f7                  	movzbl	-9(%rbp), %edx
     8a3: 81 c2 80 00 00 00            	addl	$128, %edx
     8a9: 83 c2 01                     	addl	$1, %edx
     8ac: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0x8b3 <Ssd1306::Cls()+0xb3>
     8b3: e8 00 00 00 00               	callq	0x8b8 <Ssd1306::Cls()+0xb8>
     8b8: e9 27 00 00 00               	jmp	0x8e4 <Ssd1306::Cls()+0xe4>
     8bd: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     8c1: 0f b6 55 f7                  	movzbl	-9(%rbp), %edx
     8c5: 81 c2 80 00 00 00            	addl	$128, %edx
     8cb: 83 c2 01                     	addl	$1, %edx
     8ce: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0x8d5 <Ssd1306::Cls()+0xd5>
     8d5: e8 00 00 00 00               	callq	0x8da <Ssd1306::Cls()+0xda>
     8da: e9 05 00 00 00               	jmp	0x8e4 <Ssd1306::Cls()+0xe4>
     8df: e9 00 00 00 00               	jmp	0x8e4 <Ssd1306::Cls()+0xe4>
     8e4: e9 00 00 00 00               	jmp	0x8e9 <Ssd1306::Cls()+0xe9>
     8e9: 8b 45 f0                     	movl	-16(%rbp), %eax
     8ec: 83 c0 01                     	addl	$1, %eax
     8ef: 89 45 f0                     	movl	%eax, -16(%rbp)
     8f2: e9 36 ff ff ff               	jmp	0x82d <Ssd1306::Cls()+0x2d>
     8f7: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     8fb: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     8ff: 83 e0 0f                     	andl	$15, %eax
     902: 83 c8 00                     	orl	$0, %eax
     905: 0f b6 f0                     	movzbl	%al, %esi
     908: e8 00 00 00 00               	callq	0x90d <Ssd1306::Cls()+0x10d>
     90d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     911: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     915: 83 c8 10                     	orl	$16, %eax
     918: 0f b6 f0                     	movzbl	%al, %esi
     91b: e8 00 00 00 00               	callq	0x920 <Ssd1306::Cls()+0x120>
     920: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     924: be b0 00 00 00               	movl	$176, %esi
     929: e8 00 00 00 00               	callq	0x92e <Ssd1306::Cls()+0x12e>
     92e: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
     932: 66 c7 41 30 00 00            	movw	$0, 48(%rcx)
     938: 48 8b 79 28                  	movq	40(%rcx), %rdi
     93c: 0f b6 41 08                  	movzbl	8(%rcx), %eax
     940: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
     944: 0f af c1                     	imull	%ecx, %eax
     947: 48 63 d0                     	movslq	%eax, %rdx
     94a: be 20 00 00 00               	movl	$32, %esi
     94f: e8 00 00 00 00               	callq	0x954 <Ssd1306::Cls()+0x154>
     954: 48 83 c4 20                  	addq	$32, %rsp
     958: 5d                           	popq	%rbp
     959: c3                           	retq
     95a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000960 <Ssd1306::PutChar(int)>:
     960: 55                           	pushq	%rbp
     961: 48 89 e5                     	movq	%rsp, %rbp
     964: 48 83 ec 20                  	subq	$32, %rsp
     968: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     96c: 89 75 f4                     	movl	%esi, -12(%rbp)
     96f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     973: 48 89 45 e0                  	movq	%rax, -32(%rbp)
     977: 83 7d f4 20                  	cmpl	$32, -12(%rbp)
     97b: 0f 8c 0a 00 00 00            	jl	0x98b <Ssd1306::PutChar(int)+0x2b>
     981: 83 7d f4 7f                  	cmpl	$127, -12(%rbp)
     985: 0f 8e 13 00 00 00            	jle	0x99e <Ssd1306::PutChar(int)+0x3e>
     98b: c7 45 f4 20 00 00 00         	movl	$32, -12(%rbp)
     992: c7 45 f0 00 00 00 00         	movl	$0, -16(%rbp)
     999: e9 09 00 00 00               	jmp	0x9a7 <Ssd1306::PutChar(int)+0x47>
     99e: 8b 45 f4                     	movl	-12(%rbp), %eax
     9a1: 83 e8 20                     	subl	$32, %eax
     9a4: 89 45 f0                     	movl	%eax, -16(%rbp)
     9a7: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     9ab: 8b 45 f4                     	movl	-12(%rbp), %eax
     9ae: 88 c2                        	movb	%al, %dl
     9b0: 48 8b 47 28                  	movq	40(%rdi), %rax
     9b4: 66 8b 4f 30                  	movw	48(%rdi), %cx
     9b8: 66 89 ce                     	movw	%cx, %si
     9bb: 66 83 c6 01                  	addw	$1, %si
     9bf: 66 89 77 30                  	movw	%si, 48(%rdi)
     9c3: 0f b7 c9                     	movzwl	%cx, %ecx
     9c6: 88 14 08                     	movb	%dl, (%rax,%rcx)
     9c9: 6b 45 f0 07                  	imull	$7, -16(%rbp), %eax
     9cd: 48 63 c8                     	movslq	%eax, %rcx
     9d0: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x9d7 <Ssd1306::PutChar(int)+0x77>
     9d7: 48 01 c8                     	addq	%rcx, %rax
     9da: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     9de: 48 8b 75 e8                  	movq	-24(%rbp), %rsi
     9e2: ba 07 00 00 00               	movl	$7, %edx
     9e7: e8 00 00 00 00               	callq	0x9ec <Ssd1306::PutChar(int)+0x8c>
     9ec: 48 83 c4 20                  	addq	$32, %rsp
     9f0: 5d                           	popq	%rbp
     9f1: c3                           	retq
     9f2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     9fc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000a00 <Ssd1306::PutString(char const*)>:
     a00: 55                           	pushq	%rbp
     a01: 48 89 e5                     	movq	%rsp, %rbp
     a04: 48 83 ec 30                  	subq	$48, %rsp
     a08: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a0c: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     a10: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     a14: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     a18: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     a1c: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     a20: c7 45 e4 00 00 00 00         	movl	$0, -28(%rbp)
     a27: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     a2b: 0f be 00                     	movsbl	(%rax), %eax
     a2e: 83 f8 00                     	cmpl	$0, %eax
     a31: 0f 84 2a 00 00 00            	je	0xa61 <Ssd1306::PutString(char const*)+0x61>
     a37: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     a3b: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     a3f: 0f be 30                     	movsbl	(%rax), %esi
     a42: e8 00 00 00 00               	callq	0xa47 <Ssd1306::PutString(char const*)+0x47>
     a47: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     a4b: 48 83 c0 01                  	addq	$1, %rax
     a4f: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     a53: 8b 45 e4                     	movl	-28(%rbp), %eax
     a56: 83 c0 01                     	addl	$1, %eax
     a59: 89 45 e4                     	movl	%eax, -28(%rbp)
     a5c: e9 c6 ff ff ff               	jmp	0xa27 <Ssd1306::PutString(char const*)+0x27>
     a61: 48 83 c4 30                  	addq	$48, %rsp
     a65: 5d                           	popq	%rbp
     a66: c3                           	retq
     a67: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

0000000000000a70 <Ssd1306::ClearLine(unsigned char)>:
     a70: 55                           	pushq	%rbp
     a71: 48 89 e5                     	movq	%rsp, %rbp
     a74: 48 83 ec 20                  	subq	$32, %rsp
     a78: 40 88 f0                     	movb	%sil, %al
     a7b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a7f: 88 45 f7                     	movb	%al, -9(%rbp)
     a82: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     a86: 48 89 4d e8                  	movq	%rcx, -24(%rbp)
     a8a: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     a8e: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
     a92: 39 c8                        	cmpl	%ecx, %eax
     a94: 0f 9e c0                     	setle	%al
     a97: 34 ff                        	xorb	$-1, %al
     a99: a8 01                        	testb	$1, %al
     a9b: 0f 85 05 00 00 00            	jne	0xaa6 <Ssd1306::ClearLine(unsigned char)+0x36>
     aa1: e9 05 00 00 00               	jmp	0xaab <Ssd1306::ClearLine(unsigned char)+0x3b>
     aa6: e9 3f 00 00 00               	jmp	0xaea <Ssd1306::ClearLine(unsigned char)+0x7a>
     aab: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     aaf: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     ab3: 83 e8 01                     	subl	$1, %eax
     ab6: 31 f6                        	xorl	%esi, %esi
     ab8: 0f b6 d0                     	movzbl	%al, %edx
     abb: e8 00 00 00 00               	callq	0xac0 <Ssd1306::ClearLine(unsigned char)+0x50>
     ac0: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     ac4: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0xacb <Ssd1306::ClearLine(unsigned char)+0x5b>
     acb: ba 81 00 00 00               	movl	$129, %edx
     ad0: e8 00 00 00 00               	callq	0xad5 <Ssd1306::ClearLine(unsigned char)+0x65>
     ad5: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     ad9: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     add: 83 e8 01                     	subl	$1, %eax
     ae0: 31 f6                        	xorl	%esi, %esi
     ae2: 0f b6 d0                     	movzbl	%al, %edx
     ae5: e8 00 00 00 00               	callq	0xaea <Ssd1306::ClearLine(unsigned char)+0x7a>
     aea: 48 83 c4 20                  	addq	$32, %rsp
     aee: 5d                           	popq	%rbp
     aef: c3                           	retq

0000000000000af0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
     af0: 55                           	pushq	%rbp
     af1: 48 89 e5                     	movq	%rsp, %rbp
     af4: 48 83 ec 20                  	subq	$32, %rsp
     af8: 88 d0                        	movb	%dl, %al
     afa: 40 88 f1                     	movb	%sil, %cl
     afd: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     b01: 88 4d f7                     	movb	%cl, -9(%rbp)
     b04: 88 45 f6                     	movb	%al, -10(%rbp)
     b07: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     b0b: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     b0f: 0f b6 4d f7                  	movzbl	-9(%rbp), %ecx
     b13: 31 c0                        	xorl	%eax, %eax
     b15: 83 f9 15                     	cmpl	$21, %ecx
     b18: 88 45 f5                     	movb	%al, -11(%rbp)
     b1b: 0f 8d 14 00 00 00            	jge	0xb35 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x45>
     b21: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
     b25: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     b29: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
     b2d: 39 c8                        	cmpl	%ecx, %eax
     b2f: 0f 9c c0                     	setl	%al
     b32: 88 45 f5                     	movb	%al, -11(%rbp)
     b35: 8a 45 f5                     	movb	-11(%rbp), %al
     b38: 34 ff                        	xorb	$-1, %al
     b3a: a8 01                        	testb	$1, %al
     b3c: 0f 85 05 00 00 00            	jne	0xb47 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x57>
     b42: e9 05 00 00 00               	jmp	0xb4c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x5c>
     b47: e9 c8 00 00 00               	jmp	0xc14 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x124>
     b4c: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     b50: 0f b6 4d f7                  	movzbl	-9(%rbp), %ecx
     b54: 6b c9 06                     	imull	$6, %ecx, %ecx
     b57: 88 4d f7                     	movb	%cl, -9(%rbp)
     b5a: f6 40 18 01                  	testb	$1, 24(%rax)
     b5e: 0f 84 0a 00 00 00            	je	0xb6e <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x7e>
     b64: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     b68: 83 c0 04                     	addl	$4, %eax
     b6b: 88 45 f7                     	movb	%al, -9(%rbp)
     b6e: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b72: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     b76: 83 e0 0f                     	andl	$15, %eax
     b79: 83 c8 00                     	orl	$0, %eax
     b7c: 0f b6 f0                     	movzbl	%al, %esi
     b7f: e8 00 00 00 00               	callq	0xb84 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x94>
     b84: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b88: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     b8c: c1 f8 04                     	sarl	$4, %eax
     b8f: 83 c8 10                     	orl	$16, %eax
     b92: 0f b6 f0                     	movzbl	%al, %esi
     b95: e8 00 00 00 00               	callq	0xb9a <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xaa>
     b9a: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b9e: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     ba2: 0d b0 00 00 00               	orl	$176, %eax
     ba7: 0f b6 f0                     	movzbl	%al, %esi
     baa: e8 00 00 00 00               	callq	0xbaf <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xbf>
     baf: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     bb3: 6b c8 15                     	imull	$21, %eax, %ecx
     bb6: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     bba: be 06 00 00 00               	movl	$6, %esi
     bbf: 99                           	cltd
     bc0: f7 fe                        	idivl	%esi
     bc2: 89 c2                        	movl	%eax, %edx
     bc4: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     bc8: 01 d1                        	addl	%edx, %ecx
     bca: 66 89 48 30                  	movw	%cx, 48(%rax)
     bce: 83 78 20 01                  	cmpl	$1, 32(%rax)
     bd2: 0f 85 17 00 00 00            	jne	0xbef <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xff>
     bd8: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     bdc: e8 00 00 00 00               	callq	0xbe1 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xf1>
     be1: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     be5: e8 00 00 00 00               	callq	0xbea <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xfa>
     bea: e9 25 00 00 00               	jmp	0xc14 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x124>
     bef: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     bf3: 83 78 20 03                  	cmpl	$3, 32(%rax)
     bf7: 0f 85 12 00 00 00            	jne	0xc0f <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x11f>
     bfd: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     c01: e8 00 00 00 00               	callq	0xc06 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x116>
     c06: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     c0a: e8 00 00 00 00               	callq	0xc0f <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x11f>
     c0f: e9 00 00 00 00               	jmp	0xc14 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x124>
     c14: 48 83 c4 20                  	addq	$32, %rsp
     c18: 5d                           	popq	%rbp
     c19: c3                           	retq
     c1a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000c20 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
     c20: 55                           	pushq	%rbp
     c21: 48 89 e5                     	movq	%rsp, %rbp
     c24: 48 83 ec 30                  	subq	$48, %rsp
     c28: 40 88 f0                     	movb	%sil, %al
     c2b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     c2f: 88 45 f7                     	movb	%al, -9(%rbp)
     c32: 48 89 55 e8                  	movq	%rdx, -24(%rbp)
     c36: 89 4d e4                     	movl	%ecx, -28(%rbp)
     c39: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     c3d: 48 89 4d d8                  	movq	%rcx, -40(%rbp)
     c41: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     c45: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
     c49: 39 c8                        	cmpl	%ecx, %eax
     c4b: 0f 9e c0                     	setle	%al
     c4e: 34 ff                        	xorb	$-1, %al
     c50: a8 01                        	testb	$1, %al
     c52: 0f 85 05 00 00 00            	jne	0xc5d <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x3d>
     c58: e9 05 00 00 00               	jmp	0xc62 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x42>
     c5d: e9 25 00 00 00               	jmp	0xc87 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x67>
     c62: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     c66: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     c6a: 83 e8 01                     	subl	$1, %eax
     c6d: 31 f6                        	xorl	%esi, %esi
     c6f: 0f b6 d0                     	movzbl	%al, %edx
     c72: e8 00 00 00 00               	callq	0xc77 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x57>
     c77: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     c7b: 48 8b 75 e8                  	movq	-24(%rbp), %rsi
     c7f: 8b 55 e4                     	movl	-28(%rbp), %edx
     c82: e8 00 00 00 00               	callq	0xc87 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x67>
     c87: 48 83 c4 30                  	addq	$48, %rsp
     c8b: 5d                           	popq	%rbp
     c8c: c3                           	retq
     c8d: 0f 1f 00                     	nopl	(%rax)

0000000000000c90 <Ssd1306::Text(char const*, unsigned int)>:
     c90: 55                           	pushq	%rbp
     c91: 48 89 e5                     	movq	%rsp, %rbp
     c94: 48 83 ec 20                  	subq	$32, %rsp
     c98: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     c9c: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     ca0: 89 55 ec                     	movl	%edx, -20(%rbp)
     ca3: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     ca7: 48 89 4d e0                  	movq	%rcx, -32(%rbp)
     cab: 8b 45 ec                     	movl	-20(%rbp), %eax
     cae: 0f b6 49 08                  	movzbl	8(%rcx), %ecx
     cb2: 39 c8                        	cmpl	%ecx, %eax
     cb4: 0f 86 0b 00 00 00            	jbe	0xcc5 <Ssd1306::Text(char const*, unsigned int)+0x35>
     cba: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     cbe: 0f b6 40 08                  	movzbl	8(%rax), %eax
     cc2: 89 45 ec                     	movl	%eax, -20(%rbp)
     cc5: c7 45 e8 00 00 00 00         	movl	$0, -24(%rbp)
     ccc: 8b 45 e8                     	movl	-24(%rbp), %eax
     ccf: 3b 45 ec                     	cmpl	-20(%rbp), %eax
     cd2: 0f 83 22 00 00 00            	jae	0xcfa <Ssd1306::Text(char const*, unsigned int)+0x6a>
     cd8: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     cdc: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     ce0: 8b 4d e8                     	movl	-24(%rbp), %ecx
     ce3: 0f be 34 08                  	movsbl	(%rax,%rcx), %esi
     ce7: e8 00 00 00 00               	callq	0xcec <Ssd1306::Text(char const*, unsigned int)+0x5c>
     cec: 8b 45 e8                     	movl	-24(%rbp), %eax
     cef: 83 c0 01                     	addl	$1, %eax
     cf2: 89 45 e8                     	movl	%eax, -24(%rbp)
     cf5: e9 d2 ff ff ff               	jmp	0xccc <Ssd1306::Text(char const*, unsigned int)+0x3c>
     cfa: 48 83 c4 20                  	addq	$32, %rsp
     cfe: 5d                           	popq	%rbp
     cff: c3                           	retq

0000000000000d00 <Ssd1306::SetCursorOff()>:
     d00: 55                           	pushq	%rbp
     d01: 48 89 e5                     	movq	%rsp, %rbp
     d04: 48 83 ec 20                  	subq	$32, %rsp
     d08: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     d0c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     d10: 48 89 45 e0                  	movq	%rax, -32(%rbp)
     d14: 0f b7 40 30                  	movzwl	48(%rax), %eax
     d18: b9 15 00 00 00               	movl	$21, %ecx
     d1d: 99                           	cltd
     d1e: f7 f9                        	idivl	%ecx
     d20: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     d24: 88 d1                        	movb	%dl, %cl
     d26: 88 4d f7                     	movb	%cl, -9(%rbp)
     d29: 0f b7 40 30                  	movzwl	48(%rax), %eax
     d2d: b9 15 00 00 00               	movl	$21, %ecx
     d32: 99                           	cltd
     d33: f7 f9                        	idivl	%ecx
     d35: 89 c1                        	movl	%eax, %ecx
     d37: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     d3b: 88 4d f6                     	movb	%cl, -10(%rbp)
     d3e: 8a 48 33                     	movb	51(%rax), %cl
     d41: 48 89 c7                     	movq	%rax, %rdi
     d44: 0f b6 f1                     	movzbl	%cl, %esi
     d47: 0f b6 50 34                  	movzbl	52(%rax), %edx
     d4b: e8 00 00 00 00               	callq	0xd50 <Ssd1306::SetCursorOff()+0x50>
     d50: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     d54: 0f b6 47 32                  	movzbl	50(%rdi), %eax
     d58: 6b c0 07                     	imull	$7, %eax, %eax
     d5b: 48 63 c8                     	movslq	%eax, %rcx
     d5e: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0xd65 <Ssd1306::SetCursorOff()+0x65>
     d65: 48 01 c8                     	addq	%rcx, %rax
     d68: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     d6c: 48 8b 75 e8                  	movq	-24(%rbp), %rsi
     d70: ba 07 00 00 00               	movl	$7, %edx
     d75: e8 00 00 00 00               	callq	0xd7a <Ssd1306::SetCursorOff()+0x7a>
     d7a: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     d7e: 8a 45 f7                     	movb	-9(%rbp), %al
     d81: 0f b6 f0                     	movzbl	%al, %esi
     d84: 0f b6 55 f6                  	movzbl	-10(%rbp), %edx
     d88: e8 00 00 00 00               	callq	0xd8d <Ssd1306::SetCursorOff()+0x8d>
     d8d: 48 83 c4 20                  	addq	$32, %rsp
     d91: 5d                           	popq	%rbp
     d92: c3                           	retq
     d93: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     d9d: 0f 1f 00                     	nopl	(%rax)

0000000000000da0 <Ssd1306::SetCursorOn()>:
     da0: 55                           	pushq	%rbp
     da1: 48 89 e5                     	movq	%rsp, %rbp
     da4: 48 83 ec 30                  	subq	$48, %rsp
     da8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     dac: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     db0: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     db4: 0f b7 40 30                  	movzwl	48(%rax), %eax
     db8: b9 15 00 00 00               	movl	$21, %ecx
     dbd: 99                           	cltd
     dbe: f7 f9                        	idivl	%ecx
     dc0: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     dc4: 88 d1                        	movb	%dl, %cl
     dc6: 88 48 33                     	movb	%cl, 51(%rax)
     dc9: 0f b7 40 30                  	movzwl	48(%rax), %eax
     dcd: b9 15 00 00 00               	movl	$21, %ecx
     dd2: 99                           	cltd
     dd3: f7 f9                        	idivl	%ecx
     dd5: 89 c1                        	movl	%eax, %ecx
     dd7: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     ddb: 88 48 34                     	movb	%cl, 52(%rax)
     dde: 48 8b 48 28                  	movq	40(%rax), %rcx
     de2: 0f b7 50 30                  	movzwl	48(%rax), %edx
     de6: 0f be 0c 11                  	movsbl	(%rcx,%rdx), %ecx
     dea: 83 e9 20                     	subl	$32, %ecx
     ded: 88 48 32                     	movb	%cl, 50(%rax)
     df0: 0f b6 40 32                  	movzbl	50(%rax), %eax
     df4: 6b c0 07                     	imull	$7, %eax, %eax
     df7: 48 63 c8                     	movslq	%eax, %rcx
     dfa: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0xe01 <Ssd1306::SetCursorOn()+0x61>
     e01: 48 83 c0 01                  	addq	$1, %rax
     e05: 48 01 c8                     	addq	%rcx, %rax
     e08: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     e0c: c6 45 e9 40                  	movb	$64, -23(%rbp)
     e10: c7 45 e4 01 00 00 00         	movl	$1, -28(%rbp)
     e17: 83 7d e4 06                  	cmpl	$6, -28(%rbp)
     e1b: 0f 87 2f 00 00 00            	ja	0xe50 <Ssd1306::SetCursorOn()+0xb0>
     e21: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     e25: 0f b6 00                     	movzbl	(%rax), %eax
     e28: 0d 80 00 00 00               	orl	$128, %eax
     e2d: 88 c1                        	movb	%al, %cl
     e2f: 8b 45 e4                     	movl	-28(%rbp), %eax
     e32: 88 4c 05 e9                  	movb	%cl, -23(%rbp,%rax)
     e36: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     e3a: 48 83 c0 01                  	addq	$1, %rax
     e3e: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     e42: 8b 45 e4                     	movl	-28(%rbp), %eax
     e45: 83 c0 01                     	addl	$1, %eax
     e48: 89 45 e4                     	movl	%eax, -28(%rbp)
     e4b: e9 c7 ff ff ff               	jmp	0xe17 <Ssd1306::SetCursorOn()+0x77>
     e50: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     e54: 48 8d 75 e9                  	leaq	-23(%rbp), %rsi
     e58: ba 07 00 00 00               	movl	$7, %edx
     e5d: e8 00 00 00 00               	callq	0xe62 <Ssd1306::SetCursorOn()+0xc2>
     e62: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     e66: 8a 48 33                     	movb	51(%rax), %cl
     e69: 48 89 c7                     	movq	%rax, %rdi
     e6c: 0f b6 f1                     	movzbl	%cl, %esi
     e6f: 0f b6 50 34                  	movzbl	52(%rax), %edx
     e73: e8 00 00 00 00               	callq	0xe78 <Ssd1306::SetCursorOn()+0xd8>
     e78: 48 83 c4 30                  	addq	$48, %rsp
     e7c: 5d                           	popq	%rbp
     e7d: c3                           	retq
     e7e: 66 90                        	nop

0000000000000e80 <Ssd1306::SetCursorBlinkOn()>:
     e80: 55                           	pushq	%rbp
     e81: 48 89 e5                     	movq	%rsp, %rbp
     e84: 48 83 ec 30                  	subq	$48, %rsp
     e88: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     e8c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     e90: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     e94: 0f b7 40 30                  	movzwl	48(%rax), %eax
     e98: b9 15 00 00 00               	movl	$21, %ecx
     e9d: 99                           	cltd
     e9e: f7 f9                        	idivl	%ecx
     ea0: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     ea4: 88 d1                        	movb	%dl, %cl
     ea6: 88 48 33                     	movb	%cl, 51(%rax)
     ea9: 0f b7 40 30                  	movzwl	48(%rax), %eax
     ead: b9 15 00 00 00               	movl	$21, %ecx
     eb2: 99                           	cltd
     eb3: f7 f9                        	idivl	%ecx
     eb5: 89 c1                        	movl	%eax, %ecx
     eb7: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     ebb: 88 48 34                     	movb	%cl, 52(%rax)
     ebe: 48 8b 48 28                  	movq	40(%rax), %rcx
     ec2: 0f b7 50 30                  	movzwl	48(%rax), %edx
     ec6: 0f be 0c 11                  	movsbl	(%rcx,%rdx), %ecx
     eca: 83 e9 20                     	subl	$32, %ecx
     ecd: 88 48 32                     	movb	%cl, 50(%rax)
     ed0: 0f b6 40 32                  	movzbl	50(%rax), %eax
     ed4: 6b c0 07                     	imull	$7, %eax, %eax
     ed7: 48 63 c8                     	movslq	%eax, %rcx
     eda: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0xee1 <Ssd1306::SetCursorBlinkOn()+0x61>
     ee1: 48 83 c0 01                  	addq	$1, %rax
     ee5: 48 01 c8                     	addq	%rcx, %rax
     ee8: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     eec: c6 45 e9 40                  	movb	$64, -23(%rbp)
     ef0: c7 45 e4 01 00 00 00         	movl	$1, -28(%rbp)
     ef7: 83 7d e4 06                  	cmpl	$6, -28(%rbp)
     efb: 0f 87 2d 00 00 00            	ja	0xf2e <Ssd1306::SetCursorBlinkOn()+0xae>
     f01: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     f05: 0f b6 00                     	movzbl	(%rax), %eax
     f08: 83 f0 ff                     	xorl	$-1, %eax
     f0b: 88 c1                        	movb	%al, %cl
     f0d: 8b 45 e4                     	movl	-28(%rbp), %eax
     f10: 88 4c 05 e9                  	movb	%cl, -23(%rbp,%rax)
     f14: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     f18: 48 83 c0 01                  	addq	$1, %rax
     f1c: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     f20: 8b 45 e4                     	movl	-28(%rbp), %eax
     f23: 83 c0 01                     	addl	$1, %eax
     f26: 89 45 e4                     	movl	%eax, -28(%rbp)
     f29: e9 c9 ff ff ff               	jmp	0xef7 <Ssd1306::SetCursorBlinkOn()+0x77>
     f2e: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     f32: 48 8d 75 e9                  	leaq	-23(%rbp), %rsi
     f36: ba 07 00 00 00               	movl	$7, %edx
     f3b: e8 00 00 00 00               	callq	0xf40 <Ssd1306::SetCursorBlinkOn()+0xc0>
     f40: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     f44: 8a 48 33                     	movb	51(%rax), %cl
     f47: 48 89 c7                     	movq	%rax, %rdi
     f4a: 0f b6 f1                     	movzbl	%cl, %esi
     f4d: 0f b6 50 34                  	movzbl	52(%rax), %edx
     f51: e8 00 00 00 00               	callq	0xf56 <Ssd1306::SetCursorBlinkOn()+0xd6>
     f56: 48 83 c4 30                  	addq	$48, %rsp
     f5a: 5d                           	popq	%rbp
     f5b: c3                           	retq
     f5c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000f60 <Ssd1306::SetSleep(bool)>:
     f60: 55                           	pushq	%rbp
     f61: 48 89 e5                     	movq	%rsp, %rbp
     f64: 48 83 ec 20                  	subq	$32, %rsp
     f68: 40 88 f0                     	movb	%sil, %al
     f6b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     f6f: 24 01                        	andb	$1, %al
     f71: 88 45 f7                     	movb	%al, -9(%rbp)
     f74: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     f78: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     f7c: f6 45 f7 01                  	testb	$1, -9(%rbp)
     f80: 0f 84 13 00 00 00            	je	0xf99 <Ssd1306::SetSleep(bool)+0x39>
     f86: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     f8a: be ae 00 00 00               	movl	$174, %esi
     f8f: e8 00 00 00 00               	callq	0xf94 <Ssd1306::SetSleep(bool)+0x34>
     f94: e9 0e 00 00 00               	jmp	0xfa7 <Ssd1306::SetSleep(bool)+0x47>
     f99: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     f9d: be af 00 00 00               	movl	$175, %esi
     fa2: e8 00 00 00 00               	callq	0xfa7 <Ssd1306::SetSleep(bool)+0x47>
     fa7: 48 83 c4 20                  	addq	$32, %rsp
     fab: 5d                           	popq	%rbp
     fac: c3                           	retq
     fad: 0f 1f 00                     	nopl	(%rax)

0000000000000fb0 <Ssd1306::SetContrast(unsigned char)>:
     fb0: 55                           	pushq	%rbp
     fb1: 48 89 e5                     	movq	%rsp, %rbp
     fb4: 48 83 ec 20                  	subq	$32, %rsp
     fb8: 40 88 f0                     	movb	%sil, %al
     fbb: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     fbf: 88 45 f7                     	movb	%al, -9(%rbp)
     fc2: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     fc6: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     fca: 8a 45 f7                     	movb	-9(%rbp), %al
     fcd: 88 47 0a                     	movb	%al, 10(%rdi)
     fd0: be 81 00 00 00               	movl	$129, %esi
     fd5: e8 00 00 00 00               	callq	0xfda <Ssd1306::SetContrast(unsigned char)+0x2a>
     fda: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     fde: 0f b6 75 f7                  	movzbl	-9(%rbp), %esi
     fe2: e8 00 00 00 00               	callq	0xfe7 <Ssd1306::SetContrast(unsigned char)+0x37>
     fe7: 48 83 c4 20                  	addq	$32, %rsp
     feb: 5d                           	popq	%rbp
     fec: c3                           	retq
     fed: 0f 1f 00                     	nopl	(%rax)

0000000000000ff0 <Ssd1306::SetFlipVertically(bool)>:
     ff0: 55                           	pushq	%rbp
     ff1: 48 89 e5                     	movq	%rsp, %rbp
     ff4: 48 83 ec 20                  	subq	$32, %rsp
     ff8: 40 88 f0                     	movb	%sil, %al
     ffb: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     fff: 24 01                        	andb	$1, %al
    1001: 88 45 f7                     	movb	%al, -9(%rbp)
    1004: 48 8b 45 f8                  	movq	-8(%rbp), %rax
    1008: 48 89 45 e8                  	movq	%rax, -24(%rbp)
    100c: 8a 4d f7                     	movb	-9(%rbp), %cl
    100f: 80 e1 01                     	andb	$1, %cl
    1012: 88 48 0b                     	movb	%cl, 11(%rax)
    1015: f6 45 f7 01                  	testb	$1, -9(%rbp)
    1019: 0f 84 21 00 00 00            	je	0x1040 <Ssd1306::SetFlipVertically(bool)+0x50>
    101f: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    1023: be c0 00 00 00               	movl	$192, %esi
    1028: e8 00 00 00 00               	callq	0x102d <Ssd1306::SetFlipVertically(bool)+0x3d>
    102d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    1031: be a0 00 00 00               	movl	$160, %esi
    1036: e8 00 00 00 00               	callq	0x103b <Ssd1306::SetFlipVertically(bool)+0x4b>
    103b: e9 1c 00 00 00               	jmp	0x105c <Ssd1306::SetFlipVertically(bool)+0x6c>
    1040: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    1044: be c8 00 00 00               	movl	$200, %esi
    1049: e8 00 00 00 00               	callq	0x104e <Ssd1306::SetFlipVertically(bool)+0x5e>
    104e: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    1052: be a1 00 00 00               	movl	$161, %esi
    1057: e8 00 00 00 00               	callq	0x105c <Ssd1306::SetFlipVertically(bool)+0x6c>
    105c: 48 83 c4 20                  	addq	$32, %rsp
    1060: 5d                           	popq	%rbp
    1061: c3                           	retq
    1062: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
    106c: 0f 1f 40 00                  	nopl	(%rax)

0000000000001070 <HAL_I2C::WriteRegister(unsigned char, unsigned char)>:
    1070: 55                           	pushq	%rbp
    1071: 48 89 e5                     	movq	%rsp, %rbp
    1074: 48 83 ec 10                  	subq	$16, %rsp
    1078: 88 d0                        	movb	%dl, %al
    107a: 40 88 f1                     	movb	%sil, %cl
    107d: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    1081: 88 4d f7                     	movb	%cl, -9(%rbp)
    1084: 88 45 f6                     	movb	%al, -10(%rbp)
    1087: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
    108b: 8a 45 f7                     	movb	-9(%rbp), %al
    108e: 88 45 f4                     	movb	%al, -12(%rbp)
    1091: 8a 45 f6                     	movb	-10(%rbp), %al
    1094: 88 45 f5                     	movb	%al, -11(%rbp)
    1097: e8 00 00 00 00               	callq	0x109c <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x2c>
    109c: 48 8d 7d f4                  	leaq	-12(%rbp), %rdi
    10a0: be 02 00 00 00               	movl	$2, %esi
    10a5: e8 00 00 00 00               	callq	0x10aa <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x3a>
    10aa: 48 83 c4 10                  	addq	$16, %rsp
    10ae: 5d                           	popq	%rbp
    10af: c3                           	retq

00000000000010b0 <HAL_I2C::Write(char const*, unsigned int)>:
    10b0: 55                           	pushq	%rbp
    10b1: 48 89 e5                     	movq	%rsp, %rbp
    10b4: 48 83 ec 20                  	subq	$32, %rsp
    10b8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    10bc: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
    10c0: 89 55 ec                     	movl	%edx, -20(%rbp)
    10c3: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
    10c7: e8 00 00 00 00               	callq	0x10cc <HAL_I2C::Write(char const*, unsigned int)+0x1c>
    10cc: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
    10d0: 8b 75 ec                     	movl	-20(%rbp), %esi
    10d3: e8 00 00 00 00               	callq	0x10d8 <HAL_I2C::Write(char const*, unsigned int)+0x28>
    10d8: 48 83 c4 20                  	addq	$32, %rsp
    10dc: 5d                           	popq	%rbp
    10dd: c3                           	retq
    10de: 66 90                        	nop

00000000000010e0 <Ssd1306::SetCursor(unsigned int)>:
    10e0: 55                           	pushq	%rbp
    10e1: 48 89 e5                     	movq	%rsp, %rbp
    10e4: 48 83 ec 20                  	subq	$32, %rsp
    10e8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    10ec: 89 75 f4                     	movl	%esi, -12(%rbp)
    10ef: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
    10f3: 48 89 4d e8                  	movq	%rcx, -24(%rbp)
    10f7: 8b 45 f4                     	movl	-12(%rbp), %eax
    10fa: 3b 41 20                     	cmpl	32(%rcx), %eax
    10fd: 0f 85 05 00 00 00            	jne	0x1108 <Ssd1306::SetCursor(unsigned int)+0x28>
    1103: e9 6e 00 00 00               	jmp	0x1176 <Ssd1306::SetCursor(unsigned int)+0x96>
    1108: 48 8b 45 e8                  	movq	-24(%rbp), %rax
    110c: 8b 4d f4                     	movl	-12(%rbp), %ecx
    110f: 89 48 20                     	movl	%ecx, 32(%rax)
    1112: 8b 45 f4                     	movl	-12(%rbp), %eax
    1115: 89 45 e4                     	movl	%eax, -28(%rbp)
    1118: 85 c0                        	testl	%eax, %eax
    111a: 0f 84 27 00 00 00            	je	0x1147 <Ssd1306::SetCursor(unsigned int)+0x67>
    1120: e9 00 00 00 00               	jmp	0x1125 <Ssd1306::SetCursor(unsigned int)+0x45>
    1125: 8b 45 e4                     	movl	-28(%rbp), %eax
    1128: 83 e8 01                     	subl	$1, %eax
    112b: 0f 84 24 00 00 00            	je	0x1155 <Ssd1306::SetCursor(unsigned int)+0x75>
    1131: e9 00 00 00 00               	jmp	0x1136 <Ssd1306::SetCursor(unsigned int)+0x56>
    1136: 8b 45 e4                     	movl	-28(%rbp), %eax
    1139: 83 e8 03                     	subl	$3, %eax
    113c: 0f 84 21 00 00 00            	je	0x1163 <Ssd1306::SetCursor(unsigned int)+0x83>
    1142: e9 2a 00 00 00               	jmp	0x1171 <Ssd1306::SetCursor(unsigned int)+0x91>
    1147: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    114b: e8 00 00 00 00               	callq	0x1150 <Ssd1306::SetCursor(unsigned int)+0x70>
    1150: e9 21 00 00 00               	jmp	0x1176 <Ssd1306::SetCursor(unsigned int)+0x96>
    1155: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    1159: e8 00 00 00 00               	callq	0x115e <Ssd1306::SetCursor(unsigned int)+0x7e>
    115e: e9 13 00 00 00               	jmp	0x1176 <Ssd1306::SetCursor(unsigned int)+0x96>
    1163: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    1167: e8 00 00 00 00               	callq	0x116c <Ssd1306::SetCursor(unsigned int)+0x8c>
    116c: e9 05 00 00 00               	jmp	0x1176 <Ssd1306::SetCursor(unsigned int)+0x96>
    1171: e9 00 00 00 00               	jmp	0x1176 <Ssd1306::SetCursor(unsigned int)+0x96>
    1176: 48 83 c4 20                  	addq	$32, %rsp
    117a: 5d                           	popq	%rbp
    117b: c3                           	retq
    117c: 0f 1f 40 00                  	nopl	(%rax)

0000000000001180 <Ssd1306::SetColumnRow(unsigned char, unsigned char)>:
    1180: 55                           	pushq	%rbp
    1181: 48 89 e5                     	movq	%rsp, %rbp
    1184: 48 83 ec 20                  	subq	$32, %rsp
    1188: 88 d0                        	movb	%dl, %al
    118a: 40 88 f1                     	movb	%sil, %cl
    118d: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    1191: 88 4d f7                     	movb	%cl, -9(%rbp)
    1194: 88 45 f6                     	movb	%al, -10(%rbp)
    1197: 48 8b 45 f8                  	movq	-8(%rbp), %rax
    119b: 48 89 45 e8                  	movq	%rax, -24(%rbp)
    119f: 0f b6 4d f7                  	movzbl	-9(%rbp), %ecx
    11a3: 6b c9 06                     	imull	$6, %ecx, %ecx
    11a6: 88 4d f5                     	movb	%cl, -11(%rbp)
    11a9: f6 40 18 01                  	testb	$1, 24(%rax)
    11ad: 0f 84 0a 00 00 00            	je	0x11bd <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x3d>
    11b3: 0f b6 45 f5                  	movzbl	-11(%rbp), %eax
    11b7: 83 c0 04                     	addl	$4, %eax
    11ba: 88 45 f5                     	movb	%al, -11(%rbp)
    11bd: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    11c1: 0f b6 45 f5                  	movzbl	-11(%rbp), %eax
    11c5: 83 e0 0f                     	andl	$15, %eax
    11c8: 83 c8 00                     	orl	$0, %eax
    11cb: 0f b6 f0                     	movzbl	%al, %esi
    11ce: e8 00 00 00 00               	callq	0x11d3 <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x53>
    11d3: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    11d7: 0f b6 45 f5                  	movzbl	-11(%rbp), %eax
    11db: c1 f8 04                     	sarl	$4, %eax
    11de: 0f b6 c0                     	movzbl	%al, %eax
    11e1: 83 c8 10                     	orl	$16, %eax
    11e4: 0f b6 f0                     	movzbl	%al, %esi
    11e7: e8 00 00 00 00               	callq	0x11ec <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x6c>
    11ec: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    11f0: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
    11f4: 0d b0 00 00 00               	orl	$176, %eax
    11f9: 0f b6 f0                     	movzbl	%al, %esi
    11fc: e8 00 00 00 00               	callq	0x1201 <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x81>
    1201: 48 83 c4 20                  	addq	$32, %rsp
    1205: 5d                           	popq	%rbp
    1206: c3                           	retq
    1207: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

0000000000001210 <Ssd1306::DumpShadowRam()>:
    1210: 55                           	pushq	%rbp
    1211: 48 89 e5                     	movq	%rsp, %rbp
    1214: 48 83 ec 20                  	subq	$32, %rsp
    1218: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    121c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
    1220: 48 89 45 e8                  	movq	%rax, -24(%rbp)
    1224: c7 45 f4 00 00 00 00         	movl	$0, -12(%rbp)
    122b: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
    122f: 8b 45 f4                     	movl	-12(%rbp), %eax
    1232: 0f b6 49 09                  	movzbl	9(%rcx), %ecx
    1236: 39 c8                        	cmpl	%ecx, %eax
    1238: 0f 83 35 00 00 00            	jae	0x1273 <Ssd1306::DumpShadowRam()+0x63>
    123e: 48 8b 45 e8                  	movq	-24(%rbp), %rax
    1242: 8b 75 f4                     	movl	-12(%rbp), %esi
    1245: 48 8b 48 28                  	movq	40(%rax), %rcx
    1249: 6b 45 f4 15                  	imull	$21, -12(%rbp), %eax
    124d: 89 c0                        	movl	%eax, %eax
    124f: 48 01 c1                     	addq	%rax, %rcx
    1252: 48 8d 3d 25 04 00 00         	leaq	1061(%rip), %rdi        ## 0x167e <DisplaySet::~DisplaySet()+0x17e>
    1259: ba 15 00 00 00               	movl	$21, %edx
    125e: b0 00                        	movb	$0, %al
    1260: e8 00 00 00 00               	callq	0x1265 <Ssd1306::DumpShadowRam()+0x55>
    1265: 8b 45 f4                     	movl	-12(%rbp), %eax
    1268: 83 c0 01                     	addl	$1, %eax
    126b: 89 45 f4                     	movl	%eax, -12(%rbp)
    126e: e9 b8 ff ff ff               	jmp	0x122b <Ssd1306::DumpShadowRam()+0x1b>
    1273: 48 83 c4 20                  	addq	$32, %rsp
    1277: 5d                           	popq	%rbp
    1278: c3                           	retq
    1279: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000001280 <Ssd1306::~Ssd1306()>:
    1280: 55                           	pushq	%rbp
    1281: 48 89 e5                     	movq	%rsp, %rbp
    1284: 48 83 ec 10                  	subq	$16, %rsp
    1288: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    128c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
    1290: e8 00 00 00 00               	callq	0x1295 <Ssd1306::~Ssd1306()+0x15>
    1295: 48 83 c4 10                  	addq	$16, %rsp
    1299: 5d                           	popq	%rbp
    129a: c3                           	retq
    129b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

00000000000012a0 <Ssd1306::~Ssd1306()>:
    12a0: 55                           	pushq	%rbp
    12a1: 48 89 e5                     	movq	%rsp, %rbp
    12a4: 48 83 ec 10                  	subq	$16, %rsp
    12a8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    12ac: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
    12b0: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
    12b4: e8 00 00 00 00               	callq	0x12b9 <Ssd1306::~Ssd1306()+0x19>
    12b9: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
    12bd: e8 00 00 00 00               	callq	0x12c2 <Ssd1306::~Ssd1306()+0x22>
    12c2: 48 83 c4 10                  	addq	$16, %rsp
    12c6: 5d                           	popq	%rbp
    12c7: c3                           	retq
    12c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

00000000000012d0 <DisplaySet::~DisplaySet()>:
    12d0: 55                           	pushq	%rbp
    12d1: 48 89 e5                     	movq	%rsp, %rbp
    12d4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    12d8: 0f 0b                        	ud2
    12da: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000012e0 <DisplaySet::~DisplaySet()>:
    12e0: 55                           	pushq	%rbp
    12e1: 48 89 e5                     	movq	%rsp, %rbp
    12e4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    12e8: 0f 0b                        	ud2
    12ea: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

00000000000012f0 <DisplaySet::SetSleep(bool)>:
    12f0: 55                           	pushq	%rbp
    12f1: 48 89 e5                     	movq	%rsp, %rbp
    12f4: 40 88 f0                     	movb	%sil, %al
    12f7: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    12fb: 24 01                        	andb	$1, %al
    12fd: 88 45 f7                     	movb	%al, -9(%rbp)
    1300: 5d                           	popq	%rbp
    1301: c3                           	retq
    1302: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
    130c: 0f 1f 40 00                  	nopl	(%rax)

0000000000001310 <DisplaySet::SetContrast(unsigned char)>:
    1310: 55                           	pushq	%rbp
    1311: 48 89 e5                     	movq	%rsp, %rbp
    1314: 40 88 f0                     	movb	%sil, %al
    1317: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    131b: 88 45 f7                     	movb	%al, -9(%rbp)
    131e: 5d                           	popq	%rbp
    131f: c3                           	retq

0000000000001320 <DisplaySet::SetFlipVertically(bool)>:
    1320: 55                           	pushq	%rbp
    1321: 48 89 e5                     	movq	%rsp, %rbp
    1324: 40 88 f0                     	movb	%sil, %al
    1327: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    132b: 24 01                        	andb	$1, %al
    132d: 88 45 f7                     	movb	%al, -9(%rbp)
    1330: 5d                           	popq	%rbp
    1331: c3                           	retq
    1332: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
    133c: 0f 1f 40 00                  	nopl	(%rax)

0000000000001340 <DisplaySet::PrintInfo()>:
    1340: 55                           	pushq	%rbp
    1341: 48 89 e5                     	movq	%rsp, %rbp
    1344: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    1348: 5d                           	popq	%rbp
    1349: c3                           	retq
    134a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000001350 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
    1350: 55                           	pushq	%rbp
    1351: 48 89 e5                     	movq	%rsp, %rbp
    1354: 40 88 f0                     	movb	%sil, %al
    1357: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    135b: 88 45 f7                     	movb	%al, -9(%rbp)
    135e: 89 55 f0                     	movl	%edx, -16(%rbp)
    1361: 48 8b 45 f8                  	movq	-8(%rbp), %rax
    1365: 8a 4d f7                     	movb	-9(%rbp), %cl
    1368: 88 08                        	movb	%cl, (%rax)
    136a: 8b 4d f0                     	movl	-16(%rbp), %ecx
    136d: 89 48 04                     	movl	%ecx, 4(%rax)
    1370: 5d                           	popq	%rbp
    1371: c3                           	retq
    1372: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
    137c: 0f 1f 40 00                  	nopl	(%rax)

0000000000001380 <HAL_I2C::Setup()>:
    1380: 55                           	pushq	%rbp
    1381: 48 89 e5                     	movq	%rsp, %rbp
    1384: 48 83 ec 10                  	subq	$16, %rsp
    1388: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    138c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
    1390: 48 89 45 f0                  	movq	%rax, -16(%rbp)
    1394: 0f b6 38                     	movzbl	(%rax), %edi
    1397: e8 00 00 00 00               	callq	0x139c <HAL_I2C::Setup()+0x1c>
    139c: 48 8b 45 f0                  	movq	-16(%rbp), %rax
    13a0: 8b 78 04                     	movl	4(%rax), %edi
    13a3: e8 00 00 00 00               	callq	0x13a8 <HAL_I2C::Setup()+0x28>
    13a8: 48 83 c4 10                  	addq	$16, %rsp
    13ac: 5d                           	popq	%rbp
    13ad: c3                           	retq
    13ae: 66 90                        	nop

00000000000013b0 <i2c_write(char const*, unsigned int)>:
    13b0: 55                           	pushq	%rbp
    13b1: 48 89 e5                     	movq	%rsp, %rbp
    13b4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    13b8: 89 75 f4                     	movl	%esi, -12(%rbp)
    13bb: b0 01                        	movb	$1, %al
    13bd: 0f b6 c0                     	movzbl	%al, %eax
    13c0: 5d                           	popq	%rbp
    13c1: c3                           	retq
    13c2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
    13cc: 0f 1f 40 00                  	nopl	(%rax)

00000000000013d0 <i2c_set_address(unsigned char)>:
    13d0: 55                           	pushq	%rbp
    13d1: 48 89 e5                     	movq	%rsp, %rbp
    13d4: 40 88 f8                     	movb	%dil, %al
    13d7: 88 45 ff                     	movb	%al, -1(%rbp)
    13da: 5d                           	popq	%rbp
    13db: c3                           	retq
    13dc: 0f 1f 40 00                  	nopl	(%rax)

00000000000013e0 <i2c_set_baudrate(unsigned int)>:
    13e0: 55                           	pushq	%rbp
    13e1: 48 89 e5                     	movq	%rsp, %rbp
    13e4: 89 7d fc                     	movl	%edi, -4(%rbp)
    13e7: 5d                           	popq	%rbp
    13e8: c3                           	retq
    13e9: 0f 1f 80 00 00 00 00         	nopl	(%rax)

00000000000013f0 <i2c_read(char const*, unsigned int)>:
    13f0: 55                           	pushq	%rbp
    13f1: 48 89 e5                     	movq	%rsp, %rbp
    13f4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    13f8: 89 75 f4                     	movl	%esi, -12(%rbp)
    13fb: b0 01                        	movb	$1, %al
    13fd: 0f b6 c0                     	movzbl	%al, %eax
    1400: 5d                           	popq	%rbp
    1401: c3                           	retq
    1402: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
    140c: 0f 1f 40 00                  	nopl	(%rax)

0000000000001410 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
    1410: 55                           	pushq	%rbp
    1411: 48 89 e5                     	movq	%rsp, %rbp
    1414: 48 83 ec 10                  	subq	$16, %rsp
    1418: 40 88 f8                     	movb	%dil, %al
    141b: 88 45 fe                     	movb	%al, -2(%rbp)
    141e: 89 75 f8                     	movl	%esi, -8(%rbp)
    1421: 0f b6 7d fe                  	movzbl	-2(%rbp), %edi
    1425: e8 00 00 00 00               	callq	0x142a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1a>
    142a: 8b 7d f8                     	movl	-8(%rbp), %edi
    142d: e8 00 00 00 00               	callq	0x1432 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x22>
    1432: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
    1436: 83 f8 30                     	cmpl	$48, %eax
    1439: 0f 8c 0d 00 00 00            	jl	0x144c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x3c>
    143f: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
    1443: 83 f8 37                     	cmpl	$55, %eax
    1446: 0f 8e 1a 00 00 00            	jle	0x1466 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x56>
    144c: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
    1450: 83 f8 50                     	cmpl	$80, %eax
    1453: 0f 8c 2e 00 00 00            	jl	0x1487 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
    1459: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
    145d: 83 f8 5f                     	cmpl	$95, %eax
    1460: 0f 8f 21 00 00 00            	jg	0x1487 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
    1466: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
    146a: be 01 00 00 00               	movl	$1, %esi
    146f: e8 00 00 00 00               	callq	0x1474 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x64>
    1474: 0f b6 c0                     	movzbl	%al, %eax
    1477: 83 f8 00                     	cmpl	$0, %eax
    147a: 0f 94 c0                     	sete	%al
    147d: 24 01                        	andb	$1, %al
    147f: 88 45 ff                     	movb	%al, -1(%rbp)
    1482: e9 19 00 00 00               	jmp	0x14a0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
    1487: 31 c0                        	xorl	%eax, %eax
    1489: 89 c7                        	movl	%eax, %edi
    148b: 31 f6                        	xorl	%esi, %esi
    148d: e8 00 00 00 00               	callq	0x1492 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x82>
    1492: 0f b6 c0                     	movzbl	%al, %eax
    1495: 83 f8 00                     	cmpl	$0, %eax
    1498: 0f 94 c0                     	sete	%al
    149b: 24 01                        	andb	$1, %al
    149d: 88 45 ff                     	movb	%al, -1(%rbp)
    14a0: 8a 45 ff                     	movb	-1(%rbp), %al
    14a3: 24 01                        	andb	$1, %al
    14a5: 0f b6 c0                     	movzbl	%al, %eax
    14a8: 48 83 c4 10                  	addq	$16, %rsp
    14ac: 5d                           	popq	%rbp
    14ad: c3                           	retq
    14ae: 66 90                        	nop

00000000000014b0 <Ssd1306::~Ssd1306()>:
    14b0: 55                           	pushq	%rbp
    14b1: 48 89 e5                     	movq	%rsp, %rbp
    14b4: 48 83 ec 20                  	subq	$32, %rsp
    14b8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    14bc: 48 8b 45 f8                  	movq	-8(%rbp), %rax
    14c0: 48 89 45 e8                  	movq	%rax, -24(%rbp)
    14c4: 48 8b 40 28                  	movq	40(%rax), %rax
    14c8: 48 89 45 f0                  	movq	%rax, -16(%rbp)
    14cc: 48 83 f8 00                  	cmpq	$0, %rax
    14d0: 0f 84 09 00 00 00            	je	0x14df <Ssd1306::~Ssd1306()+0x2f>
    14d6: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
    14da: e8 00 00 00 00               	callq	0x14df <Ssd1306::~Ssd1306()+0x2f>
    14df: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
    14e3: 48 c7 47 28 00 00 00 00      	movq	$0, 40(%rdi)
    14eb: e8 00 00 00 00               	callq	0x14f0 <Ssd1306::~Ssd1306()+0x40>
    14f0: 48 83 c4 20                  	addq	$32, %rsp
    14f4: 5d                           	popq	%rbp
    14f5: c3                           	retq
    14f6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

0000000000001500 <DisplaySet::~DisplaySet()>:
    1500: 55                           	pushq	%rbp
    1501: 48 89 e5                     	movq	%rsp, %rbp
    1504: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
    1508: 5d                           	popq	%rbp
    1509: c3                           	retq

lib_linux/libdisplay.a(ssd1311.o):	file format mach-o 64-bit x86-64

Disassembly of section __TEXT,__text:

0000000000000000 <Ssd1311::Ssd1311()>:
       0: 55                           	pushq	%rbp
       1: 48 89 e5                     	movq	%rsp, %rbp
       4: 48 83 ec 10                  	subq	$16, %rsp
       8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
       c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      10: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
      14: e8 00 00 00 00               	callq	0x19 <Ssd1311::Ssd1311()+0x19>
      19: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
      1d: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x24 <Ssd1311::Ssd1311()+0x24>
      24: 48 83 c0 10                  	addq	$16, %rax
      28: 48 89 07                     	movq	%rax, (%rdi)
      2b: 48 83 c7 0c                  	addq	$12, %rdi
      2f: be 3c 00 00 00               	movl	$60, %esi
      34: ba 80 1a 06 00               	movl	$400000, %edx           ## imm = 0x61A80
      39: e8 00 00 00 00               	callq	0x3e <Ssd1311::Ssd1311()+0x3e>
      3e: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      42: c6 40 14 08                  	movb	$8, 20(%rax)
      46: 48 83 3d ff ff ff ff 00      	cmpq	$0, -1(%rip)            ## 0x4d <Ssd1311::Ssd1311()+0x4d>
      4e: 0f 94 c0                     	sete	%al
      51: 34 ff                        	xorb	$-1, %al
      53: a8 01                        	testb	$1, %al
      55: 0f 85 05 00 00 00            	jne	0x60 <Ssd1311::Ssd1311()+0x60>
      5b: e9 1f 00 00 00               	jmp	0x7f <Ssd1311::Ssd1311()+0x7f>
      60: 48 8d 3d 19 0f 00 00         	leaq	3865(%rip), %rdi        ## 0xf80 <DisplaySet::~DisplaySet()+0x110>
      67: 48 8d 35 1a 0f 00 00         	leaq	3866(%rip), %rsi        ## 0xf88 <DisplaySet::~DisplaySet()+0x118>
      6e: 48 8d 0d 1f 0f 00 00         	leaq	3871(%rip), %rcx        ## 0xf94 <DisplaySet::~DisplaySet()+0x124>
      75: ba 3f 00 00 00               	movl	$63, %edx
      7a: e8 00 00 00 00               	callq	0x7f <Ssd1311::Ssd1311()+0x7f>
      7f: e9 00 00 00 00               	jmp	0x84 <Ssd1311::Ssd1311()+0x84>
      84: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      88: 48 89 05 00 00 00 00         	movq	%rax, (%rip)            ## 0x8f <Ssd1311::Ssd1311()+0x8f>
      8f: c6 40 09 04                  	movb	$4, 9(%rax)
      93: c6 40 08 14                  	movb	$20, 8(%rax)
      97: 48 83 c4 10                  	addq	$16, %rsp
      9b: 5d                           	popq	%rbp
      9c: c3                           	retq
      9d: 0f 1f 00                     	nopl	(%rax)

00000000000000a0 <DisplaySet::DisplaySet()>:
      a0: 55                           	pushq	%rbp
      a1: 48 89 e5                     	movq	%rsp, %rbp
      a4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      a8: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      ac: 48 8b 0d 00 00 00 00         	movq	(%rip), %rcx            ## 0xb3 <DisplaySet::DisplaySet()+0x13>
      b3: 48 83 c1 10                  	addq	$16, %rcx
      b7: 48 89 08                     	movq	%rcx, (%rax)
      ba: c6 40 0a 7f                  	movb	$127, 10(%rax)
      be: c6 40 0b 00                  	movb	$0, 11(%rax)
      c2: 5d                           	popq	%rbp
      c3: c3                           	retq
      c4: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
      ce: 66 90                        	nop

00000000000000d0 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
      d0: 55                           	pushq	%rbp
      d1: 48 89 e5                     	movq	%rsp, %rbp
      d4: 48 83 ec 10                  	subq	$16, %rsp
      d8: 40 88 f0                     	movb	%sil, %al
      db: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
      df: 88 45 f7                     	movb	%al, -9(%rbp)
      e2: 89 55 f0                     	movl	%edx, -16(%rbp)
      e5: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
      e9: 8a 45 f7                     	movb	-9(%rbp), %al
      ec: 8b 55 f0                     	movl	-16(%rbp), %edx
      ef: 0f b6 f0                     	movzbl	%al, %esi
      f2: e8 00 00 00 00               	callq	0xf7 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)+0x27>
      f7: 48 83 c4 10                  	addq	$16, %rsp
      fb: 5d                           	popq	%rbp
      fc: c3                           	retq
      fd: 0f 1f 00                     	nopl	(%rax)

0000000000000100 <Ssd1311::Ssd1311()>:
     100: 55                           	pushq	%rbp
     101: 48 89 e5                     	movq	%rsp, %rbp
     104: 48 83 ec 10                  	subq	$16, %rsp
     108: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     10c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     110: e8 00 00 00 00               	callq	0x115 <Ssd1311::Ssd1311()+0x15>
     115: 48 83 c4 10                  	addq	$16, %rsp
     119: 5d                           	popq	%rbp
     11a: c3                           	retq
     11b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000120 <Ssd1311::Start()>:
     120: 55                           	pushq	%rbp
     121: 48 89 e5                     	movq	%rsp, %rbp
     124: 48 83 ec 20                  	subq	$32, %rsp
     128: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
     12c: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     130: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     134: 48 83 c7 0c                  	addq	$12, %rdi
     138: e8 00 00 00 00               	callq	0x13d <Ssd1311::Start()+0x1d>
     13d: a8 01                        	testb	$1, %al
     13f: 0f 85 09 00 00 00            	jne	0x14e <Ssd1311::Start()+0x2e>
     145: c6 45 ff 00                  	movb	$0, -1(%rbp)
     149: e9 02 01 00 00               	jmp	0x250 <Ssd1311::Start()+0x130>
     14e: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     152: e8 00 00 00 00               	callq	0x157 <Ssd1311::Start()+0x37>
     157: a8 01                        	testb	$1, %al
     159: 0f 85 09 00 00 00            	jne	0x168 <Ssd1311::Start()+0x48>
     15f: c6 45 ff 00                  	movb	$0, -1(%rbp)
     163: e9 e8 00 00 00               	jmp	0x250 <Ssd1311::Start()+0x130>
     168: c7 45 ec 00 00 00 00         	movl	$0, -20(%rbp)
     16f: 8b 45 ec                     	movl	-20(%rbp), %eax
     172: 48 83 f8 15                  	cmpq	$21, %rax
     176: 0f 83 1e 00 00 00            	jae	0x19a <Ssd1311::Start()+0x7a>
     17c: 8b 45 ec                     	movl	-20(%rbp), %eax
     17f: 89 c1                        	movl	%eax, %ecx
     181: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x188 <Ssd1311::Start()+0x68>
     188: c6 04 08 20                  	movb	$32, (%rax,%rcx)
     18c: 8b 45 ec                     	movl	-20(%rbp), %eax
     18f: 83 c0 01                     	addl	$1, %eax
     192: 89 45 ec                     	movl	%eax, -20(%rbp)
     195: e9 d5 ff ff ff               	jmp	0x16f <Ssd1311::Start()+0x4f>
     19a: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     19e: c6 05 ff ff ff ff 40         	movb	$64, -1(%rip)           ## 0x1a4 <Ssd1311::Start()+0x84>
     1a5: c6 05 ff ff ff ff 40         	movb	$64, -1(%rip)           ## 0x1ab <Ssd1311::Start()+0x8b>
     1ac: be 3a 00 00 00               	movl	$58, %esi
     1b1: e8 00 00 00 00               	callq	0x1b6 <Ssd1311::Start()+0x96>
     1b6: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     1ba: be 09 00 00 00               	movl	$9, %esi
     1bf: e8 00 00 00 00               	callq	0x1c4 <Ssd1311::Start()+0xa4>
     1c4: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     1c8: be 05 00 00 00               	movl	$5, %esi
     1cd: e8 00 00 00 00               	callq	0x1d2 <Ssd1311::Start()+0xb2>
     1d2: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     1d6: be 1c 00 00 00               	movl	$28, %esi
     1db: e8 00 00 00 00               	callq	0x1e0 <Ssd1311::Start()+0xc0>
     1e0: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     1e4: be 3c 00 00 00               	movl	$60, %esi
     1e9: e8 00 00 00 00               	callq	0x1ee <Ssd1311::Start()+0xce>
     1ee: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     1f2: be 3a 00 00 00               	movl	$58, %esi
     1f7: e8 00 00 00 00               	callq	0x1fc <Ssd1311::Start()+0xdc>
     1fc: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     200: be 72 00 00 00               	movl	$114, %esi
     205: e8 00 00 00 00               	callq	0x20a <Ssd1311::Start()+0xea>
     20a: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     20e: 31 f6                        	xorl	%esi, %esi
     210: e8 00 00 00 00               	callq	0x215 <Ssd1311::Start()+0xf5>
     215: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     219: be 3c 00 00 00               	movl	$60, %esi
     21e: e8 00 00 00 00               	callq	0x223 <Ssd1311::Start()+0x103>
     223: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     227: be 0c 00 00 00               	movl	$12, %esi
     22c: e8 00 00 00 00               	callq	0x231 <Ssd1311::Start()+0x111>
     231: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     235: be 01 00 00 00               	movl	$1, %esi
     23a: e8 00 00 00 00               	callq	0x23f <Ssd1311::Start()+0x11f>
     23f: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     243: 31 d2                        	xorl	%edx, %edx
     245: 89 d6                        	movl	%edx, %esi
     247: e8 00 00 00 00               	callq	0x24c <Ssd1311::Start()+0x12c>
     24c: c6 45 ff 01                  	movb	$1, -1(%rbp)
     250: 8a 45 ff                     	movb	-1(%rbp), %al
     253: 24 01                        	andb	$1, %al
     255: 0f b6 c0                     	movzbl	%al, %eax
     258: 48 83 c4 20                  	addq	$32, %rsp
     25c: 5d                           	popq	%rbp
     25d: c3                           	retq
     25e: 66 90                        	nop

0000000000000260 <HAL_I2C::IsConnected()>:
     260: 55                           	pushq	%rbp
     261: 48 89 e5                     	movq	%rsp, %rbp
     264: 48 83 ec 10                  	subq	$16, %rsp
     268: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     26c: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     270: 8a 01                        	movb	(%rcx), %al
     272: 8b 71 04                     	movl	4(%rcx), %esi
     275: 0f b6 f8                     	movzbl	%al, %edi
     278: e8 00 00 00 00               	callq	0x27d <HAL_I2C::IsConnected()+0x1d>
     27d: 24 01                        	andb	$1, %al
     27f: 0f b6 c0                     	movzbl	%al, %eax
     282: 48 83 c4 10                  	addq	$16, %rsp
     286: 5d                           	popq	%rbp
     287: c3                           	retq
     288: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000000290 <Ssd1311::CheckSSD1311()>:
     290: 55                           	pushq	%rbp
     291: 48 89 e5                     	movq	%rsp, %rbp
     294: 48 83 ec 20                  	subq	$32, %rsp
     298: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     29c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     2a0: 48 89 7d e0                  	movq	%rdi, -32(%rbp)
     2a4: 31 f6                        	xorl	%esi, %esi
     2a6: e8 00 00 00 00               	callq	0x2ab <Ssd1311::CheckSSD1311()+0x1b>
     2ab: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     2af: 8b 05 00 00 00 00            	movl	(%rip), %eax            ## 0x2b5 <Ssd1311::CheckSSD1311()+0x25>
     2b5: 89 45 f3                     	movl	%eax, -13(%rbp)
     2b8: 8a 05 04 00 00 00            	movb	4(%rip), %al            ## 0x2c2 <Ssd1311::CheckSSD1311()+0x32>
     2be: 88 45 f7                     	movb	%al, -9(%rbp)
     2c1: 48 8d 75 f3                  	leaq	-13(%rbp), %rsi
     2c5: ba 05 00 00 00               	movl	$5, %edx
     2ca: e8 00 00 00 00               	callq	0x2cf <Ssd1311::CheckSSD1311()+0x3f>
     2cf: 48 8d 7d ed                  	leaq	-19(%rbp), %rdi
     2d3: 31 f6                        	xorl	%esi, %esi
     2d5: ba 06 00 00 00               	movl	$6, %edx
     2da: e8 00 00 00 00               	callq	0x2df <Ssd1311::CheckSSD1311()+0x4f>
     2df: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     2e3: 31 f6                        	xorl	%esi, %esi
     2e5: e8 00 00 00 00               	callq	0x2ea <Ssd1311::CheckSSD1311()+0x5a>
     2ea: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     2ee: 48 83 c7 0c                  	addq	$12, %rdi
     2f2: be 40 00 00 00               	movl	$64, %esi
     2f7: e8 00 00 00 00               	callq	0x2fc <Ssd1311::CheckSSD1311()+0x6c>
     2fc: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     300: 48 83 c7 0c                  	addq	$12, %rdi
     304: 48 8d 75 ed                  	leaq	-19(%rbp), %rsi
     308: ba 06 00 00 00               	movl	$6, %edx
     30d: e8 00 00 00 00               	callq	0x312 <Ssd1311::CheckSSD1311()+0x82>
     312: 48 8d 45 f3                  	leaq	-13(%rbp), %rax
     316: 48 83 c0 01                  	addq	$1, %rax
     31a: 48 8d 4d ed                  	leaq	-19(%rbp), %rcx
     31e: 48 83 c1 01                  	addq	$1, %rcx
     322: 8b 09                        	movl	(%rcx), %ecx
     324: 8b 00                        	movl	(%rax), %eax
     326: 29 c8                        	subl	%ecx, %eax
     328: 0f 95 c0                     	setne	%al
     32b: 0f b6 c0                     	movzbl	%al, %eax
     32e: 83 f8 00                     	cmpl	$0, %eax
     331: 0f 94 c0                     	sete	%al
     334: 24 01                        	andb	$1, %al
     336: 88 45 ec                     	movb	%al, -20(%rbp)
     339: 8a 45 ec                     	movb	-20(%rbp), %al
     33c: 24 01                        	andb	$1, %al
     33e: 0f b6 f0                     	movzbl	%al, %esi
     341: 48 8d 3d 8d 0c 00 00         	leaq	3213(%rip), %rdi        ## 0xfd5 <DisplaySet::~DisplaySet()+0x165>
     348: b0 00                        	movb	$0, %al
     34a: e8 00 00 00 00               	callq	0x34f <Ssd1311::CheckSSD1311()+0xbf>
     34f: 8a 45 ec                     	movb	-20(%rbp), %al
     352: 24 01                        	andb	$1, %al
     354: 0f b6 c0                     	movzbl	%al, %eax
     357: 48 83 c4 20                  	addq	$32, %rsp
     35b: 5d                           	popq	%rbp
     35c: c3                           	retq
     35d: 0f 1f 00                     	nopl	(%rax)

0000000000000360 <Ssd1311::SendCommand(unsigned char)>:
     360: 55                           	pushq	%rbp
     361: 48 89 e5                     	movq	%rsp, %rbp
     364: 48 83 ec 10                  	subq	$16, %rsp
     368: 40 88 f0                     	movb	%sil, %al
     36b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     36f: 88 45 f7                     	movb	%al, -9(%rbp)
     372: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     376: 48 83 c7 0c                  	addq	$12, %rdi
     37a: be 80 00 00 00               	movl	$128, %esi
     37f: 0f b6 55 f7                  	movzbl	-9(%rbp), %edx
     383: e8 00 00 00 00               	callq	0x388 <Ssd1311::SendCommand(unsigned char)+0x28>
     388: 48 83 c4 10                  	addq	$16, %rsp
     38c: 5d                           	popq	%rbp
     38d: c3                           	retq
     38e: 66 90                        	nop

0000000000000390 <Ssd1311::SendData(unsigned char)>:
     390: 55                           	pushq	%rbp
     391: 48 89 e5                     	movq	%rsp, %rbp
     394: 48 83 ec 10                  	subq	$16, %rsp
     398: 40 88 f0                     	movb	%sil, %al
     39b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     39f: 88 45 f7                     	movb	%al, -9(%rbp)
     3a2: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     3a6: 48 83 c7 0c                  	addq	$12, %rdi
     3aa: be 40 00 00 00               	movl	$64, %esi
     3af: 0f b6 55 f7                  	movzbl	-9(%rbp), %edx
     3b3: e8 00 00 00 00               	callq	0x3b8 <Ssd1311::SendData(unsigned char)+0x28>
     3b8: 48 83 c4 10                  	addq	$16, %rsp
     3bc: 5d                           	popq	%rbp
     3bd: c3                           	retq
     3be: 66 90                        	nop

00000000000003c0 <Ssd1311::SelectRamRom(unsigned int, unsigned int)>:
     3c0: 55                           	pushq	%rbp
     3c1: 48 89 e5                     	movq	%rsp, %rbp
     3c4: 48 83 ec 20                  	subq	$32, %rsp
     3c8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     3cc: 89 75 f4                     	movl	%esi, -12(%rbp)
     3cf: 89 55 f0                     	movl	%edx, -16(%rbp)
     3d2: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     3d6: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     3da: be 01 00 00 00               	movl	$1, %esi
     3df: e8 00 00 00 00               	callq	0x3e4 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x24>
     3e4: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3e8: be 02 00 00 00               	movl	$2, %esi
     3ed: e8 00 00 00 00               	callq	0x3f2 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x32>
     3f2: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     3f6: be 72 00 00 00               	movl	$114, %esi
     3fb: e8 00 00 00 00               	callq	0x400 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x40>
     400: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     404: 8b 45 f0                     	movl	-16(%rbp), %eax
     407: 83 e0 03                     	andl	$3, %eax
     40a: c1 e0 02                     	shll	$2, %eax
     40d: 8b 4d f4                     	movl	-12(%rbp), %ecx
     410: 83 e1 03                     	andl	$3, %ecx
     413: 09 c8                        	orl	%ecx, %eax
     415: 0f b6 f0                     	movzbl	%al, %esi
     418: e8 00 00 00 00               	callq	0x41d <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x5d>
     41d: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     421: 31 f6                        	xorl	%esi, %esi
     423: e8 00 00 00 00               	callq	0x428 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x68>
     428: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     42c: 31 f6                        	xorl	%esi, %esi
     42e: e8 00 00 00 00               	callq	0x433 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x73>
     433: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     437: e8 00 00 00 00               	callq	0x43c <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x7c>
     43c: 48 83 c4 20                  	addq	$32, %rsp
     440: 5d                           	popq	%rbp
     441: c3                           	retq
     442: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     44c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000450 <Ssd1311::PrintInfo()>:
     450: 55                           	pushq	%rbp
     451: 48 89 e5                     	movq	%rsp, %rbp
     454: 48 83 ec 10                  	subq	$16, %rsp
     458: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     45c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     460: 0f b6 70 09                  	movzbl	9(%rax), %esi
     464: 0f b6 50 08                  	movzbl	8(%rax), %edx
     468: 48 8d 3d 38 0b 00 00         	leaq	2872(%rip), %rdi        ## 0xfa7 <DisplaySet::~DisplaySet()+0x137>
     46f: b0 00                        	movb	$0, %al
     471: e8 00 00 00 00               	callq	0x476 <Ssd1311::PrintInfo()+0x26>
     476: 48 83 c4 10                  	addq	$16, %rsp
     47a: 5d                           	popq	%rbp
     47b: c3                           	retq
     47c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000480 <Ssd1311::Cls()>:
     480: 55                           	pushq	%rbp
     481: 48 89 e5                     	movq	%rsp, %rbp
     484: 48 83 ec 10                  	subq	$16, %rsp
     488: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     48c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     490: be 01 00 00 00               	movl	$1, %esi
     495: e8 00 00 00 00               	callq	0x49a <Ssd1311::Cls()+0x1a>
     49a: 48 83 c4 10                  	addq	$16, %rsp
     49e: 5d                           	popq	%rbp
     49f: c3                           	retq

00000000000004a0 <Ssd1311::PutChar(int)>:
     4a0: 55                           	pushq	%rbp
     4a1: 48 89 e5                     	movq	%rsp, %rbp
     4a4: 48 83 ec 10                  	subq	$16, %rsp
     4a8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     4ac: 89 75 f4                     	movl	%esi, -12(%rbp)
     4af: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     4b3: 8b 45 f4                     	movl	-12(%rbp), %eax
     4b6: 83 e0 7f                     	andl	$127, %eax
     4b9: 0f b6 f0                     	movzbl	%al, %esi
     4bc: e8 00 00 00 00               	callq	0x4c1 <Ssd1311::PutChar(int)+0x21>
     4c1: 48 83 c4 10                  	addq	$16, %rsp
     4c5: 5d                           	popq	%rbp
     4c6: c3                           	retq
     4c7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

00000000000004d0 <Ssd1311::PutString(char const*)>:
     4d0: 55                           	pushq	%rbp
     4d1: 48 89 e5                     	movq	%rsp, %rbp
     4d4: 48 83 ec 40                  	subq	$64, %rsp
     4d8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     4dc: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     4e0: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     4e4: 48 89 45 d0                  	movq	%rax, -48(%rbp)
     4e8: 48 83 7d f0 00               	cmpq	$0, -16(%rbp)
     4ed: 0f 95 c0                     	setne	%al
     4f0: 34 ff                        	xorb	$-1, %al
     4f2: a8 01                        	testb	$1, %al
     4f4: 0f 85 05 00 00 00            	jne	0x4ff <Ssd1311::PutString(char const*)+0x2f>
     4fa: e9 1f 00 00 00               	jmp	0x51e <Ssd1311::PutString(char const*)+0x4e>
     4ff: 48 8d 3d b2 0a 00 00         	leaq	2738(%rip), %rdi        ## 0xfb8 <DisplaySet::~DisplaySet()+0x148>
     506: 48 8d 35 7b 0a 00 00         	leaq	2683(%rip), %rsi        ## 0xf88 <DisplaySet::~DisplaySet()+0x118>
     50d: 48 8d 0d ae 0a 00 00         	leaq	2734(%rip), %rcx        ## 0xfc2 <DisplaySet::~DisplaySet()+0x152>
     514: ba 74 00 00 00               	movl	$116, %edx
     519: e8 00 00 00 00               	callq	0x51e <Ssd1311::PutString(char const*)+0x4e>
     51e: e9 00 00 00 00               	jmp	0x523 <Ssd1311::PutString(char const*)+0x53>
     523: 66 c7 45 ee 14 00            	movw	$20, -18(%rbp)
     529: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     52d: 48 89 45 e0                  	movq	%rax, -32(%rbp)
     531: 48 8d 05 00 00 00 00         	leaq	(%rip), %rax            ## 0x538 <Ssd1311::PutString(char const*)+0x68>
     538: 48 83 c0 01                  	addq	$1, %rax
     53c: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     540: 0f b7 4d ee                  	movzwl	-18(%rbp), %ecx
     544: 31 c0                        	xorl	%eax, %eax
     546: 83 f9 00                     	cmpl	$0, %ecx
     549: 88 45 cf                     	movb	%al, -49(%rbp)
     54c: 0f 8e 10 00 00 00            	jle	0x562 <Ssd1311::PutString(char const*)+0x92>
     552: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     556: 0f be 00                     	movsbl	(%rax), %eax
     559: 83 f8 00                     	cmpl	$0, %eax
     55c: 0f 95 c0                     	setne	%al
     55f: 88 45 cf                     	movb	%al, -49(%rbp)
     562: 8a 45 cf                     	movb	-49(%rbp), %al
     565: a8 01                        	testb	$1, %al
     567: 0f 85 05 00 00 00            	jne	0x572 <Ssd1311::PutString(char const*)+0xa2>
     56d: e9 33 00 00 00               	jmp	0x5a5 <Ssd1311::PutString(char const*)+0xd5>
     572: 48 8b 45 e0                  	movq	-32(%rbp), %rax
     576: 48 89 c1                     	movq	%rax, %rcx
     579: 48 83 c1 01                  	addq	$1, %rcx
     57d: 48 89 4d e0                  	movq	%rcx, -32(%rbp)
     581: 8a 08                        	movb	(%rax), %cl
     583: 48 8b 45 d8                  	movq	-40(%rbp), %rax
     587: 48 89 c2                     	movq	%rax, %rdx
     58a: 48 83 c2 01                  	addq	$1, %rdx
     58e: 48 89 55 d8                  	movq	%rdx, -40(%rbp)
     592: 88 08                        	movb	%cl, (%rax)
     594: 66 8b 45 ee                  	movw	-18(%rbp), %ax
     598: 66 83 c0 ff                  	addw	$-1, %ax
     59c: 66 89 45 ee                  	movw	%ax, -18(%rbp)
     5a0: e9 9b ff ff ff               	jmp	0x540 <Ssd1311::PutString(char const*)+0x70>
     5a5: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     5a9: 0f b7 45 ee                  	movzwl	-18(%rbp), %eax
     5ad: ba 15 00 00 00               	movl	$21, %edx
     5b2: 29 c2                        	subl	%eax, %edx
     5b4: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0x5bb <Ssd1311::PutString(char const*)+0xeb>
     5bb: e8 00 00 00 00               	callq	0x5c0 <Ssd1311::PutString(char const*)+0xf0>
     5c0: 48 83 c4 40                  	addq	$64, %rsp
     5c4: 5d                           	popq	%rbp
     5c5: c3                           	retq
     5c6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

00000000000005d0 <Ssd1311::SendData(unsigned char const*, unsigned int)>:
     5d0: 55                           	pushq	%rbp
     5d1: 48 89 e5                     	movq	%rsp, %rbp
     5d4: 48 83 ec 20                  	subq	$32, %rsp
     5d8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     5dc: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     5e0: 89 55 ec                     	movl	%edx, -20(%rbp)
     5e3: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     5e7: 48 83 c7 0c                  	addq	$12, %rdi
     5eb: 48 8b 75 f0                  	movq	-16(%rbp), %rsi
     5ef: 8b 55 ec                     	movl	-20(%rbp), %edx
     5f2: e8 00 00 00 00               	callq	0x5f7 <Ssd1311::SendData(unsigned char const*, unsigned int)+0x27>
     5f7: 48 83 c4 20                  	addq	$32, %rsp
     5fb: 5d                           	popq	%rbp
     5fc: c3                           	retq
     5fd: 0f 1f 00                     	nopl	(%rax)

0000000000000600 <Ssd1311::ClearLine(unsigned char)>:
     600: 55                           	pushq	%rbp
     601: 48 89 e5                     	movq	%rsp, %rbp
     604: 48 83 ec 20                  	subq	$32, %rsp
     608: 40 88 f0                     	movb	%sil, %al
     60b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     60f: 88 45 f7                     	movb	%al, -9(%rbp)
     612: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     616: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     61a: 0f b6 4d f7                  	movzbl	-9(%rbp), %ecx
     61e: 31 c0                        	xorl	%eax, %eax
     620: 83 f9 00                     	cmpl	$0, %ecx
     623: 88 45 f6                     	movb	%al, -10(%rbp)
     626: 0f 8e 0d 00 00 00            	jle	0x639 <Ssd1311::ClearLine(unsigned char)+0x39>
     62c: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     630: 83 f8 04                     	cmpl	$4, %eax
     633: 0f 9e c0                     	setle	%al
     636: 88 45 f6                     	movb	%al, -10(%rbp)
     639: 8a 45 f6                     	movb	-10(%rbp), %al
     63c: 34 ff                        	xorb	$-1, %al
     63e: a8 01                        	testb	$1, %al
     640: 0f 85 05 00 00 00            	jne	0x64b <Ssd1311::ClearLine(unsigned char)+0x4b>
     646: e9 05 00 00 00               	jmp	0x650 <Ssd1311::ClearLine(unsigned char)+0x50>
     64b: e9 3f 00 00 00               	jmp	0x68f <Ssd1311::ClearLine(unsigned char)+0x8f>
     650: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     654: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     658: 83 e8 01                     	subl	$1, %eax
     65b: 31 f6                        	xorl	%esi, %esi
     65d: 0f b6 d0                     	movzbl	%al, %edx
     660: e8 00 00 00 00               	callq	0x665 <Ssd1311::ClearLine(unsigned char)+0x65>
     665: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     669: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0x670 <Ssd1311::ClearLine(unsigned char)+0x70>
     670: ba 15 00 00 00               	movl	$21, %edx
     675: e8 00 00 00 00               	callq	0x67a <Ssd1311::ClearLine(unsigned char)+0x7a>
     67a: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     67e: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     682: 83 e8 01                     	subl	$1, %eax
     685: 31 f6                        	xorl	%esi, %esi
     687: 0f b6 d0                     	movzbl	%al, %edx
     68a: e8 00 00 00 00               	callq	0x68f <Ssd1311::ClearLine(unsigned char)+0x8f>
     68f: 48 83 c4 20                  	addq	$32, %rsp
     693: 5d                           	popq	%rbp
     694: c3                           	retq
     695: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     69f: 90                           	nop

00000000000006a0 <Ssd1311::SetCursorPos(unsigned char, unsigned char)>:
     6a0: 55                           	pushq	%rbp
     6a1: 48 89 e5                     	movq	%rsp, %rbp
     6a4: 48 83 ec 20                  	subq	$32, %rsp
     6a8: 88 d0                        	movb	%dl, %al
     6aa: 40 88 f1                     	movb	%sil, %cl
     6ad: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     6b1: 88 4d f7                     	movb	%cl, -9(%rbp)
     6b4: 88 45 f6                     	movb	%al, -10(%rbp)
     6b7: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     6bb: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     6bf: 0f b6 4d f7                  	movzbl	-9(%rbp), %ecx
     6c3: 31 c0                        	xorl	%eax, %eax
     6c5: 83 f9 14                     	cmpl	$20, %ecx
     6c8: 88 45 f5                     	movb	%al, -11(%rbp)
     6cb: 0f 8d 0d 00 00 00            	jge	0x6de <Ssd1311::SetCursorPos(unsigned char, unsigned char)+0x3e>
     6d1: 0f b6 45 f6                  	movzbl	-10(%rbp), %eax
     6d5: 83 f8 04                     	cmpl	$4, %eax
     6d8: 0f 9c c0                     	setl	%al
     6db: 88 45 f5                     	movb	%al, -11(%rbp)
     6de: 8a 45 f5                     	movb	-11(%rbp), %al
     6e1: 34 ff                        	xorb	$-1, %al
     6e3: a8 01                        	testb	$1, %al
     6e5: 0f 85 05 00 00 00            	jne	0x6f0 <Ssd1311::SetCursorPos(unsigned char, unsigned char)+0x50>
     6eb: e9 05 00 00 00               	jmp	0x6f5 <Ssd1311::SetCursorPos(unsigned char, unsigned char)+0x55>
     6f0: e9 19 00 00 00               	jmp	0x70e <Ssd1311::SetCursorPos(unsigned char, unsigned char)+0x6e>
     6f5: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     6f9: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     6fd: 0f b6 4d f6                  	movzbl	-10(%rbp), %ecx
     701: c1 e1 05                     	shll	$5, %ecx
     704: 01 c8                        	addl	%ecx, %eax
     706: 0f b6 f0                     	movzbl	%al, %esi
     709: e8 00 00 00 00               	callq	0x70e <Ssd1311::SetCursorPos(unsigned char, unsigned char)+0x6e>
     70e: 48 83 c4 20                  	addq	$32, %rsp
     712: 5d                           	popq	%rbp
     713: c3                           	retq
     714: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     71e: 66 90                        	nop

0000000000000720 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)>:
     720: 55                           	pushq	%rbp
     721: 48 89 e5                     	movq	%rsp, %rbp
     724: 48 83 ec 30                  	subq	$48, %rsp
     728: 40 88 f0                     	movb	%sil, %al
     72b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     72f: 88 45 f7                     	movb	%al, -9(%rbp)
     732: 48 89 55 e8                  	movq	%rdx, -24(%rbp)
     736: 89 4d e4                     	movl	%ecx, -28(%rbp)
     739: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     73d: 48 89 45 d8                  	movq	%rax, -40(%rbp)
     741: 0f b6 4d f7                  	movzbl	-9(%rbp), %ecx
     745: 31 c0                        	xorl	%eax, %eax
     747: 83 f9 00                     	cmpl	$0, %ecx
     74a: 88 45 e3                     	movb	%al, -29(%rbp)
     74d: 0f 8e 0d 00 00 00            	jle	0x760 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x40>
     753: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     757: 83 f8 04                     	cmpl	$4, %eax
     75a: 0f 9e c0                     	setle	%al
     75d: 88 45 e3                     	movb	%al, -29(%rbp)
     760: 8a 45 e3                     	movb	-29(%rbp), %al
     763: 34 ff                        	xorb	$-1, %al
     765: a8 01                        	testb	$1, %al
     767: 0f 85 05 00 00 00            	jne	0x772 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x52>
     76d: e9 05 00 00 00               	jmp	0x777 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x57>
     772: e9 55 00 00 00               	jmp	0x7cc <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xac>
     777: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     77b: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     77f: 83 e8 01                     	subl	$1, %eax
     782: 31 f6                        	xorl	%esi, %esi
     784: 0f b6 d0                     	movzbl	%al, %edx
     787: e8 00 00 00 00               	callq	0x78c <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x6c>
     78c: 83 7d e4 14                  	cmpl	$20, -28(%rbp)
     790: 0f 86 07 00 00 00            	jbe	0x79d <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x7d>
     796: c7 45 e4 14 00 00 00         	movl	$20, -28(%rbp)
     79d: 48 8b 75 e8                  	movq	-24(%rbp), %rsi
     7a1: 8b 45 e4                     	movl	-28(%rbp), %eax
     7a4: 89 c2                        	movl	%eax, %edx
     7a6: 48 8d 3d 00 00 00 00         	leaq	(%rip), %rdi            ## 0x7ad <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x8d>
     7ad: 48 83 c7 01                  	addq	$1, %rdi
     7b1: e8 00 00 00 00               	callq	0x7b6 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x96>
     7b6: 48 8b 7d d8                  	movq	-40(%rbp), %rdi
     7ba: 8b 55 e4                     	movl	-28(%rbp), %edx
     7bd: 83 c2 01                     	addl	$1, %edx
     7c0: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0x7c7 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xa7>
     7c7: e8 00 00 00 00               	callq	0x7cc <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xac>
     7cc: 48 83 c4 30                  	addq	$48, %rsp
     7d0: 5d                           	popq	%rbp
     7d1: c3                           	retq
     7d2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     7dc: 0f 1f 40 00                  	nopl	(%rax)

00000000000007e0 <Ssd1311::Text(char const*, unsigned int)>:
     7e0: 55                           	pushq	%rbp
     7e1: 48 89 e5                     	movq	%rsp, %rbp
     7e4: 48 83 ec 20                  	subq	$32, %rsp
     7e8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     7ec: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     7f0: 89 55 ec                     	movl	%edx, -20(%rbp)
     7f3: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     7f7: 48 89 45 e0                  	movq	%rax, -32(%rbp)
     7fb: 83 7d ec 14                  	cmpl	$20, -20(%rbp)
     7ff: 0f 86 07 00 00 00            	jbe	0x80c <Ssd1311::Text(char const*, unsigned int)+0x2c>
     805: c7 45 ec 14 00 00 00         	movl	$20, -20(%rbp)
     80c: 48 8b 75 f0                  	movq	-16(%rbp), %rsi
     810: 8b 45 ec                     	movl	-20(%rbp), %eax
     813: 89 c2                        	movl	%eax, %edx
     815: 48 8d 3d 00 00 00 00         	leaq	(%rip), %rdi            ## 0x81c <Ssd1311::Text(char const*, unsigned int)+0x3c>
     81c: 48 83 c7 01                  	addq	$1, %rdi
     820: e8 00 00 00 00               	callq	0x825 <Ssd1311::Text(char const*, unsigned int)+0x45>
     825: 48 8b 7d e0                  	movq	-32(%rbp), %rdi
     829: 8b 55 ec                     	movl	-20(%rbp), %edx
     82c: 83 c2 01                     	addl	$1, %edx
     82f: 48 8d 35 00 00 00 00         	leaq	(%rip), %rsi            ## 0x836 <Ssd1311::Text(char const*, unsigned int)+0x56>
     836: e8 00 00 00 00               	callq	0x83b <Ssd1311::Text(char const*, unsigned int)+0x5b>
     83b: 48 83 c4 20                  	addq	$32, %rsp
     83f: 5d                           	popq	%rbp
     840: c3                           	retq
     841: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     84b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000850 <Ssd1311::SetDDRAM(unsigned char)>:
     850: 55                           	pushq	%rbp
     851: 48 89 e5                     	movq	%rsp, %rbp
     854: 48 83 ec 10                  	subq	$16, %rsp
     858: 40 88 f0                     	movb	%sil, %al
     85b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     85f: 88 45 f7                     	movb	%al, -9(%rbp)
     862: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     866: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     86a: 83 e0 7f                     	andl	$127, %eax
     86d: 0d 80 00 00 00               	orl	$128, %eax
     872: 0f b6 f0                     	movzbl	%al, %esi
     875: e8 00 00 00 00               	callq	0x87a <Ssd1311::SetDDRAM(unsigned char)+0x2a>
     87a: 48 83 c4 10                  	addq	$16, %rsp
     87e: 5d                           	popq	%rbp
     87f: c3                           	retq

0000000000000880 <Ssd1311::SetSleep(bool)>:
     880: 55                           	pushq	%rbp
     881: 48 89 e5                     	movq	%rsp, %rbp
     884: 48 83 ec 20                  	subq	$32, %rsp
     888: 40 88 f0                     	movb	%sil, %al
     88b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     88f: 24 01                        	andb	$1, %al
     891: 88 45 f7                     	movb	%al, -9(%rbp)
     894: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     898: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     89c: f6 45 f7 01                  	testb	$1, -9(%rbp)
     8a0: 0f 84 16 00 00 00            	je	0x8bc <Ssd1311::SetSleep(bool)+0x3c>
     8a6: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     8aa: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     8ae: 81 e1 fb 00 00 00            	andl	$251, %ecx
     8b4: 88 48 14                     	movb	%cl, 20(%rax)
     8b7: e9 0e 00 00 00               	jmp	0x8ca <Ssd1311::SetSleep(bool)+0x4a>
     8bc: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     8c0: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     8c4: 83 c9 04                     	orl	$4, %ecx
     8c7: 88 48 14                     	movb	%cl, 20(%rax)
     8ca: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     8ce: 48 89 c7                     	movq	%rax, %rdi
     8d1: 0f b6 70 14                  	movzbl	20(%rax), %esi
     8d5: e8 00 00 00 00               	callq	0x8da <Ssd1311::SetSleep(bool)+0x5a>
     8da: 48 83 c4 20                  	addq	$32, %rsp
     8de: 5d                           	popq	%rbp
     8df: c3                           	retq

00000000000008e0 <Ssd1311::SetRE(Ssd1311::FunctionSet)>:
     8e0: 55                           	pushq	%rbp
     8e1: 48 89 e5                     	movq	%rsp, %rbp
     8e4: 48 83 ec 30                  	subq	$48, %rsp
     8e8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     8ec: 89 75 f4                     	movl	%esi, -12(%rbp)
     8ef: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     8f3: 48 89 45 d0                  	movq	%rax, -48(%rbp)
     8f7: c6 45 f3 20                  	movb	$32, -13(%rbp)
     8fb: c7 45 ec 01 00 00 00         	movl	$1, -20(%rbp)
     902: c7 45 e8 00 00 00 00         	movl	$0, -24(%rbp)
     909: 83 7d f4 00                  	cmpl	$0, -12(%rbp)
     90d: 0f 85 2b 00 00 00            	jne	0x93e <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x5e>
     913: c7 45 e4 00 00 00 00         	movl	$0, -28(%rbp)
     91a: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     91e: 83 c8 08                     	orl	$8, %eax
     921: 88 45 f3                     	movb	%al, -13(%rbp)
     924: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     928: 88 45 f3                     	movb	%al, -13(%rbp)
     92b: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     92f: 88 45 f3                     	movb	%al, -13(%rbp)
     932: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     936: 88 45 f3                     	movb	%al, -13(%rbp)
     939: e9 30 00 00 00               	jmp	0x96e <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x8e>
     93e: c7 45 e0 00 00 00 00         	movl	$0, -32(%rbp)
     945: c7 45 dc 00 00 00 00         	movl	$0, -36(%rbp)
     94c: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     950: 83 c8 08                     	orl	$8, %eax
     953: 88 45 f3                     	movb	%al, -13(%rbp)
     956: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     95a: 88 45 f3                     	movb	%al, -13(%rbp)
     95d: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     961: 83 c8 02                     	orl	$2, %eax
     964: 88 45 f3                     	movb	%al, -13(%rbp)
     967: 0f b6 45 f3                  	movzbl	-13(%rbp), %eax
     96b: 88 45 f3                     	movb	%al, -13(%rbp)
     96e: 48 8b 7d d0                  	movq	-48(%rbp), %rdi
     972: 0f b6 75 f3                  	movzbl	-13(%rbp), %esi
     976: e8 00 00 00 00               	callq	0x97b <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x9b>
     97b: 48 83 c4 30                  	addq	$48, %rsp
     97f: 5d                           	popq	%rbp
     980: c3                           	retq
     981: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     98b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000990 <Ssd1311::SetCGRAM(unsigned char)>:
     990: 55                           	pushq	%rbp
     991: 48 89 e5                     	movq	%rsp, %rbp
     994: 48 83 ec 10                  	subq	$16, %rsp
     998: 40 88 f0                     	movb	%sil, %al
     99b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     99f: 88 45 f7                     	movb	%al, -9(%rbp)
     9a2: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     9a6: 0f b6 45 f7                  	movzbl	-9(%rbp), %eax
     9aa: 83 e0 3f                     	andl	$63, %eax
     9ad: 83 c8 40                     	orl	$64, %eax
     9b0: 0f b6 f0                     	movzbl	%al, %esi
     9b3: e8 00 00 00 00               	callq	0x9b8 <Ssd1311::SetCGRAM(unsigned char)+0x28>
     9b8: 48 83 c4 10                  	addq	$16, %rsp
     9bc: 5d                           	popq	%rbp
     9bd: c3                           	retq
     9be: 66 90                        	nop

00000000000009c0 <Ssd1311::SetSD(Ssd1311::CommandSet)>:
     9c0: 55                           	pushq	%rbp
     9c1: 48 89 e5                     	movq	%rsp, %rbp
     9c4: 48 83 ec 20                  	subq	$32, %rsp
     9c8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     9cc: 89 75 f4                     	movl	%esi, -12(%rbp)
     9cf: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     9d3: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     9d7: be 02 00 00 00               	movl	$2, %esi
     9dc: e8 00 00 00 00               	callq	0x9e1 <Ssd1311::SetSD(Ssd1311::CommandSet)+0x21>
     9e1: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     9e5: 8b 55 f4                     	movl	-12(%rbp), %edx
     9e8: b8 79 00 00 00               	movl	$121, %eax
     9ed: b9 78 00 00 00               	movl	$120, %ecx
     9f2: 83 fa 00                     	cmpl	$0, %edx
     9f5: 0f 44 c1                     	cmovel	%ecx, %eax
     9f8: 0f b6 f0                     	movzbl	%al, %esi
     9fb: e8 00 00 00 00               	callq	0xa00 <Ssd1311::SetSD(Ssd1311::CommandSet)+0x40>
     a00: 48 83 c4 20                  	addq	$32, %rsp
     a04: 5d                           	popq	%rbp
     a05: c3                           	retq
     a06: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

0000000000000a10 <HAL_I2C::WriteRegister(unsigned char, unsigned char)>:
     a10: 55                           	pushq	%rbp
     a11: 48 89 e5                     	movq	%rsp, %rbp
     a14: 48 83 ec 10                  	subq	$16, %rsp
     a18: 88 d0                        	movb	%dl, %al
     a1a: 40 88 f1                     	movb	%sil, %cl
     a1d: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a21: 88 4d f7                     	movb	%cl, -9(%rbp)
     a24: 88 45 f6                     	movb	%al, -10(%rbp)
     a27: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     a2b: 8a 45 f7                     	movb	-9(%rbp), %al
     a2e: 88 45 f4                     	movb	%al, -12(%rbp)
     a31: 8a 45 f6                     	movb	-10(%rbp), %al
     a34: 88 45 f5                     	movb	%al, -11(%rbp)
     a37: e8 00 00 00 00               	callq	0xa3c <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x2c>
     a3c: 48 8d 7d f4                  	leaq	-12(%rbp), %rdi
     a40: be 02 00 00 00               	movl	$2, %esi
     a45: e8 00 00 00 00               	callq	0xa4a <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x3a>
     a4a: 48 83 c4 10                  	addq	$16, %rsp
     a4e: 5d                           	popq	%rbp
     a4f: c3                           	retq

0000000000000a50 <HAL_I2C::Write(char const*, unsigned int)>:
     a50: 55                           	pushq	%rbp
     a51: 48 89 e5                     	movq	%rsp, %rbp
     a54: 48 83 ec 20                  	subq	$32, %rsp
     a58: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a5c: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     a60: 89 55 ec                     	movl	%edx, -20(%rbp)
     a63: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     a67: e8 00 00 00 00               	callq	0xa6c <HAL_I2C::Write(char const*, unsigned int)+0x1c>
     a6c: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     a70: 8b 75 ec                     	movl	-20(%rbp), %esi
     a73: e8 00 00 00 00               	callq	0xa78 <HAL_I2C::Write(char const*, unsigned int)+0x28>
     a78: 48 83 c4 20                  	addq	$32, %rsp
     a7c: 5d                           	popq	%rbp
     a7d: c3                           	retq
     a7e: 66 90                        	nop

0000000000000a80 <HAL_I2C::Write(char)>:
     a80: 55                           	pushq	%rbp
     a81: 48 89 e5                     	movq	%rsp, %rbp
     a84: 48 83 ec 10                  	subq	$16, %rsp
     a88: 40 88 f0                     	movb	%sil, %al
     a8b: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     a8f: 88 45 f7                     	movb	%al, -9(%rbp)
     a92: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     a96: e8 00 00 00 00               	callq	0xa9b <HAL_I2C::Write(char)+0x1b>
     a9b: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
     a9f: be 01 00 00 00               	movl	$1, %esi
     aa4: e8 00 00 00 00               	callq	0xaa9 <HAL_I2C::Write(char)+0x29>
     aa9: 48 83 c4 10                  	addq	$16, %rsp
     aad: 5d                           	popq	%rbp
     aae: c3                           	retq
     aaf: 90                           	nop

0000000000000ab0 <HAL_I2C::Read(char*, unsigned int)>:
     ab0: 55                           	pushq	%rbp
     ab1: 48 89 e5                     	movq	%rsp, %rbp
     ab4: 48 83 ec 20                  	subq	$32, %rsp
     ab8: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     abc: 48 89 75 f0                  	movq	%rsi, -16(%rbp)
     ac0: 89 55 ec                     	movl	%edx, -20(%rbp)
     ac3: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     ac7: e8 00 00 00 00               	callq	0xacc <HAL_I2C::Read(char*, unsigned int)+0x1c>
     acc: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     ad0: 8b 75 ec                     	movl	-20(%rbp), %esi
     ad3: e8 00 00 00 00               	callq	0xad8 <HAL_I2C::Read(char*, unsigned int)+0x28>
     ad8: 0f b6 c0                     	movzbl	%al, %eax
     adb: 48 83 c4 20                  	addq	$32, %rsp
     adf: 5d                           	popq	%rbp
     ae0: c3                           	retq
     ae1: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     aeb: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000af0 <Ssd1311::SetContrast(unsigned char)>:
     af0: 55                           	pushq	%rbp
     af1: 48 89 e5                     	movq	%rsp, %rbp
     af4: 48 83 ec 20                  	subq	$32, %rsp
     af8: 40 88 f0                     	movb	%sil, %al
     afb: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     aff: 88 45 f7                     	movb	%al, -9(%rbp)
     b02: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     b06: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
     b0a: 8a 45 f7                     	movb	-9(%rbp), %al
     b0d: 88 47 0a                     	movb	%al, 10(%rdi)
     b10: be 02 00 00 00               	movl	$2, %esi
     b15: e8 00 00 00 00               	callq	0xb1a <Ssd1311::SetContrast(unsigned char)+0x2a>
     b1a: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b1e: be 01 00 00 00               	movl	$1, %esi
     b23: e8 00 00 00 00               	callq	0xb28 <Ssd1311::SetContrast(unsigned char)+0x38>
     b28: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b2c: be 81 00 00 00               	movl	$129, %esi
     b31: e8 00 00 00 00               	callq	0xb36 <Ssd1311::SetContrast(unsigned char)+0x46>
     b36: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b3a: 0f b6 75 f7                  	movzbl	-9(%rbp), %esi
     b3e: e8 00 00 00 00               	callq	0xb43 <Ssd1311::SetContrast(unsigned char)+0x53>
     b43: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b47: 31 f6                        	xorl	%esi, %esi
     b49: e8 00 00 00 00               	callq	0xb4e <Ssd1311::SetContrast(unsigned char)+0x5e>
     b4e: 48 8b 7d e8                  	movq	-24(%rbp), %rdi
     b52: 31 f6                        	xorl	%esi, %esi
     b54: e8 00 00 00 00               	callq	0xb59 <Ssd1311::SetContrast(unsigned char)+0x69>
     b59: 48 83 c4 20                  	addq	$32, %rsp
     b5d: 5d                           	popq	%rbp
     b5e: c3                           	retq
     b5f: 90                           	nop

0000000000000b60 <Ssd1311::SetCursor(unsigned int)>:
     b60: 55                           	pushq	%rbp
     b61: 48 89 e5                     	movq	%rsp, %rbp
     b64: 48 83 ec 20                  	subq	$32, %rsp
     b68: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     b6c: 89 75 f4                     	movl	%esi, -12(%rbp)
     b6f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     b73: 48 89 45 e8                  	movq	%rax, -24(%rbp)
     b77: 8b 45 f4                     	movl	-12(%rbp), %eax
     b7a: 89 45 f0                     	movl	%eax, -16(%rbp)
     b7d: 85 c0                        	testl	%eax, %eax
     b7f: 0f 84 27 00 00 00            	je	0xbac <Ssd1311::SetCursor(unsigned int)+0x4c>
     b85: e9 00 00 00 00               	jmp	0xb8a <Ssd1311::SetCursor(unsigned int)+0x2a>
     b8a: 8b 45 f0                     	movl	-16(%rbp), %eax
     b8d: 83 e8 01                     	subl	$1, %eax
     b90: 0f 84 2c 00 00 00            	je	0xbc2 <Ssd1311::SetCursor(unsigned int)+0x62>
     b96: e9 00 00 00 00               	jmp	0xb9b <Ssd1311::SetCursor(unsigned int)+0x3b>
     b9b: 8b 45 f0                     	movl	-16(%rbp), %eax
     b9e: 83 e8 03                     	subl	$3, %eax
     ba1: 0f 84 3b 00 00 00            	je	0xbe2 <Ssd1311::SetCursor(unsigned int)+0x82>
     ba7: e9 53 00 00 00               	jmp	0xbff <Ssd1311::SetCursor(unsigned int)+0x9f>
     bac: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     bb0: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     bb4: 81 e1 fd 00 00 00            	andl	$253, %ecx
     bba: 88 48 14                     	movb	%cl, 20(%rax)
     bbd: e9 42 00 00 00               	jmp	0xc04 <Ssd1311::SetCursor(unsigned int)+0xa4>
     bc2: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     bc6: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     bca: 83 c9 02                     	orl	$2, %ecx
     bcd: 88 48 14                     	movb	%cl, 20(%rax)
     bd0: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     bd4: 81 e1 fe 00 00 00            	andl	$254, %ecx
     bda: 88 48 14                     	movb	%cl, 20(%rax)
     bdd: e9 22 00 00 00               	jmp	0xc04 <Ssd1311::SetCursor(unsigned int)+0xa4>
     be2: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     be6: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     bea: 83 c9 02                     	orl	$2, %ecx
     bed: 88 48 14                     	movb	%cl, 20(%rax)
     bf0: 0f b6 48 14                  	movzbl	20(%rax), %ecx
     bf4: 83 c9 01                     	orl	$1, %ecx
     bf7: 88 48 14                     	movb	%cl, 20(%rax)
     bfa: e9 05 00 00 00               	jmp	0xc04 <Ssd1311::SetCursor(unsigned int)+0xa4>
     bff: e9 00 00 00 00               	jmp	0xc04 <Ssd1311::SetCursor(unsigned int)+0xa4>
     c04: 48 8b 45 e8                  	movq	-24(%rbp), %rax
     c08: 48 89 c7                     	movq	%rax, %rdi
     c0b: 0f b6 70 14                  	movzbl	20(%rax), %esi
     c0f: e8 00 00 00 00               	callq	0xc14 <Ssd1311::SetCursor(unsigned int)+0xb4>
     c14: 48 83 c4 20                  	addq	$32, %rsp
     c18: 5d                           	popq	%rbp
     c19: c3                           	retq
     c1a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000c20 <Ssd1311::~Ssd1311()>:
     c20: 55                           	pushq	%rbp
     c21: 48 89 e5                     	movq	%rsp, %rbp
     c24: 48 83 ec 10                  	subq	$16, %rsp
     c28: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     c2c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     c30: e8 00 00 00 00               	callq	0xc35 <Ssd1311::~Ssd1311()+0x15>
     c35: 48 83 c4 10                  	addq	$16, %rsp
     c39: 5d                           	popq	%rbp
     c3a: c3                           	retq
     c3b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000c40 <Ssd1311::~Ssd1311()>:
     c40: 55                           	pushq	%rbp
     c41: 48 89 e5                     	movq	%rsp, %rbp
     c44: 48 83 ec 10                  	subq	$16, %rsp
     c48: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     c4c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     c50: 48 89 7d f0                  	movq	%rdi, -16(%rbp)
     c54: e8 00 00 00 00               	callq	0xc59 <Ssd1311::~Ssd1311()+0x19>
     c59: 48 8b 7d f0                  	movq	-16(%rbp), %rdi
     c5d: e8 00 00 00 00               	callq	0xc62 <Ssd1311::~Ssd1311()+0x22>
     c62: 48 83 c4 10                  	addq	$16, %rsp
     c66: 5d                           	popq	%rbp
     c67: c3                           	retq
     c68: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000000c70 <DisplaySet::SetFlipVertically(bool)>:
     c70: 55                           	pushq	%rbp
     c71: 48 89 e5                     	movq	%rsp, %rbp
     c74: 40 88 f0                     	movb	%sil, %al
     c77: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     c7b: 24 01                        	andb	$1, %al
     c7d: 88 45 f7                     	movb	%al, -9(%rbp)
     c80: 5d                           	popq	%rbp
     c81: c3                           	retq
     c82: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     c8c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000c90 <DisplaySet::~DisplaySet()>:
     c90: 55                           	pushq	%rbp
     c91: 48 89 e5                     	movq	%rsp, %rbp
     c94: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     c98: 0f 0b                        	ud2
     c9a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000ca0 <DisplaySet::~DisplaySet()>:
     ca0: 55                           	pushq	%rbp
     ca1: 48 89 e5                     	movq	%rsp, %rbp
     ca4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     ca8: 0f 0b                        	ud2
     caa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000cb0 <DisplaySet::SetSleep(bool)>:
     cb0: 55                           	pushq	%rbp
     cb1: 48 89 e5                     	movq	%rsp, %rbp
     cb4: 40 88 f0                     	movb	%sil, %al
     cb7: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     cbb: 24 01                        	andb	$1, %al
     cbd: 88 45 f7                     	movb	%al, -9(%rbp)
     cc0: 5d                           	popq	%rbp
     cc1: c3                           	retq
     cc2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     ccc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000cd0 <DisplaySet::SetContrast(unsigned char)>:
     cd0: 55                           	pushq	%rbp
     cd1: 48 89 e5                     	movq	%rsp, %rbp
     cd4: 40 88 f0                     	movb	%sil, %al
     cd7: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     cdb: 88 45 f7                     	movb	%al, -9(%rbp)
     cde: 5d                           	popq	%rbp
     cdf: c3                           	retq

0000000000000ce0 <DisplaySet::PrintInfo()>:
     ce0: 55                           	pushq	%rbp
     ce1: 48 89 e5                     	movq	%rsp, %rbp
     ce4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     ce8: 5d                           	popq	%rbp
     ce9: c3                           	retq
     cea: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000000cf0 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
     cf0: 55                           	pushq	%rbp
     cf1: 48 89 e5                     	movq	%rsp, %rbp
     cf4: 40 88 f0                     	movb	%sil, %al
     cf7: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     cfb: 88 45 f7                     	movb	%al, -9(%rbp)
     cfe: 89 55 f0                     	movl	%edx, -16(%rbp)
     d01: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     d05: 8a 4d f7                     	movb	-9(%rbp), %cl
     d08: 88 08                        	movb	%cl, (%rax)
     d0a: 8b 4d f0                     	movl	-16(%rbp), %ecx
     d0d: 89 48 04                     	movl	%ecx, 4(%rax)
     d10: 5d                           	popq	%rbp
     d11: c3                           	retq
     d12: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     d1c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000d20 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
     d20: 55                           	pushq	%rbp
     d21: 48 89 e5                     	movq	%rsp, %rbp
     d24: 48 83 ec 10                  	subq	$16, %rsp
     d28: 40 88 f8                     	movb	%dil, %al
     d2b: 88 45 fe                     	movb	%al, -2(%rbp)
     d2e: 89 75 f8                     	movl	%esi, -8(%rbp)
     d31: 0f b6 7d fe                  	movzbl	-2(%rbp), %edi
     d35: e8 00 00 00 00               	callq	0xd3a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1a>
     d3a: 8b 7d f8                     	movl	-8(%rbp), %edi
     d3d: e8 00 00 00 00               	callq	0xd42 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x22>
     d42: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     d46: 83 f8 30                     	cmpl	$48, %eax
     d49: 0f 8c 0d 00 00 00            	jl	0xd5c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x3c>
     d4f: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     d53: 83 f8 37                     	cmpl	$55, %eax
     d56: 0f 8e 1a 00 00 00            	jle	0xd76 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x56>
     d5c: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     d60: 83 f8 50                     	cmpl	$80, %eax
     d63: 0f 8c 2e 00 00 00            	jl	0xd97 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
     d69: 0f b6 45 fe                  	movzbl	-2(%rbp), %eax
     d6d: 83 f8 5f                     	cmpl	$95, %eax
     d70: 0f 8f 21 00 00 00            	jg	0xd97 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
     d76: 48 8d 7d f7                  	leaq	-9(%rbp), %rdi
     d7a: be 01 00 00 00               	movl	$1, %esi
     d7f: e8 00 00 00 00               	callq	0xd84 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x64>
     d84: 0f b6 c0                     	movzbl	%al, %eax
     d87: 83 f8 00                     	cmpl	$0, %eax
     d8a: 0f 94 c0                     	sete	%al
     d8d: 24 01                        	andb	$1, %al
     d8f: 88 45 ff                     	movb	%al, -1(%rbp)
     d92: e9 19 00 00 00               	jmp	0xdb0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
     d97: 31 c0                        	xorl	%eax, %eax
     d99: 89 c7                        	movl	%eax, %edi
     d9b: 31 f6                        	xorl	%esi, %esi
     d9d: e8 00 00 00 00               	callq	0xda2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x82>
     da2: 0f b6 c0                     	movzbl	%al, %eax
     da5: 83 f8 00                     	cmpl	$0, %eax
     da8: 0f 94 c0                     	sete	%al
     dab: 24 01                        	andb	$1, %al
     dad: 88 45 ff                     	movb	%al, -1(%rbp)
     db0: 8a 45 ff                     	movb	-1(%rbp), %al
     db3: 24 01                        	andb	$1, %al
     db5: 0f b6 c0                     	movzbl	%al, %eax
     db8: 48 83 c4 10                  	addq	$16, %rsp
     dbc: 5d                           	popq	%rbp
     dbd: c3                           	retq
     dbe: 66 90                        	nop

0000000000000dc0 <i2c_set_address(unsigned char)>:
     dc0: 55                           	pushq	%rbp
     dc1: 48 89 e5                     	movq	%rsp, %rbp
     dc4: 40 88 f8                     	movb	%dil, %al
     dc7: 88 45 ff                     	movb	%al, -1(%rbp)
     dca: 5d                           	popq	%rbp
     dcb: c3                           	retq
     dcc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000dd0 <i2c_set_baudrate(unsigned int)>:
     dd0: 55                           	pushq	%rbp
     dd1: 48 89 e5                     	movq	%rsp, %rbp
     dd4: 89 7d fc                     	movl	%edi, -4(%rbp)
     dd7: 5d                           	popq	%rbp
     dd8: c3                           	retq
     dd9: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000000de0 <i2c_read(char const*, unsigned int)>:
     de0: 55                           	pushq	%rbp
     de1: 48 89 e5                     	movq	%rsp, %rbp
     de4: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     de8: 89 75 f4                     	movl	%esi, -12(%rbp)
     deb: b0 01                        	movb	$1, %al
     ded: 0f b6 c0                     	movzbl	%al, %eax
     df0: 5d                           	popq	%rbp
     df1: c3                           	retq
     df2: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     dfc: 0f 1f 40 00                  	nopl	(%rax)

0000000000000e00 <i2c_write(char const*, unsigned int)>:
     e00: 55                           	pushq	%rbp
     e01: 48 89 e5                     	movq	%rsp, %rbp
     e04: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     e08: 89 75 f4                     	movl	%esi, -12(%rbp)
     e0b: b0 01                        	movb	$1, %al
     e0d: 0f b6 c0                     	movzbl	%al, %eax
     e10: 5d                           	popq	%rbp
     e11: c3                           	retq
     e12: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
     e1c: 0f 1f 40 00                  	nopl	(%rax)

0000000000000e20 <HAL_I2C::Setup()>:
     e20: 55                           	pushq	%rbp
     e21: 48 89 e5                     	movq	%rsp, %rbp
     e24: 48 83 ec 10                  	subq	$16, %rsp
     e28: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     e2c: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     e30: 48 89 45 f0                  	movq	%rax, -16(%rbp)
     e34: 0f b6 38                     	movzbl	(%rax), %edi
     e37: e8 00 00 00 00               	callq	0xe3c <HAL_I2C::Setup()+0x1c>
     e3c: 48 8b 45 f0                  	movq	-16(%rbp), %rax
     e40: 8b 78 04                     	movl	4(%rax), %edi
     e43: e8 00 00 00 00               	callq	0xe48 <HAL_I2C::Setup()+0x28>
     e48: 48 83 c4 10                  	addq	$16, %rsp
     e4c: 5d                           	popq	%rbp
     e4d: c3                           	retq
     e4e: 66 90                        	nop

0000000000000e50 <Ssd1311::~Ssd1311()>:
     e50: 55                           	pushq	%rbp
     e51: 48 89 e5                     	movq	%rsp, %rbp
     e54: 48 83 ec 10                  	subq	$16, %rsp
     e58: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     e5c: 48 8b 7d f8                  	movq	-8(%rbp), %rdi
     e60: e8 00 00 00 00               	callq	0xe65 <Ssd1311::~Ssd1311()+0x15>
     e65: 48 83 c4 10                  	addq	$16, %rsp
     e69: 5d                           	popq	%rbp
     e6a: c3                           	retq
     e6b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000000e70 <DisplaySet::~DisplaySet()>:
     e70: 55                           	pushq	%rbp
     e71: 48 89 e5                     	movq	%rsp, %rbp
     e74: 48 89 7d f8                  	movq	%rdi, -8(%rbp)
     e78: 5d                           	popq	%rbp
     e79: c3                           	retq
